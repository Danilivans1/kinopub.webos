{"version":3,"sources":["../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../node_modules/react-query/es/react/useBaseQuery.js","../node_modules/lodash/filter.js","../node_modules/react-query/es/core/queryObserver.js","../node_modules/lodash/uniqBy.js","../node_modules/lodash/_baseFindIndex.js","../node_modules/react-uid/dist/es2015/uid.js","../node_modules/react-uid/dist/es2015/context.js","../node_modules/react-uid/dist/es2015/hooks.js","../node_modules/lodash/_baseFilter.js","../node_modules/lodash/flatMap.js","../node_modules/lodash/_baseUniq.js","../node_modules/lodash/_arrayIncludes.js","../node_modules/lodash/_baseIndexOf.js","../node_modules/lodash/_baseIsNaN.js","../node_modules/lodash/_strictIndexOf.js","../node_modules/lodash/_arrayIncludesWith.js","../node_modules/lodash/_createSet.js","../node_modules/lodash/noop.js","../node_modules/lodash/_baseFlatten.js","../node_modules/lodash/_isFlattenable.js","../node_modules/react-query/es/core/infiniteQueryObserver.js","../node_modules/react-query/es/react/useInfiniteQuery.js"],"names":["createValue","_isReset","clearReset","reset","isReset","QueryErrorResetBoundaryContext","React","createContext","useBaseQuery","options","Observer","mountedRef","useRef","forceUpdate","useState","queryClient","useQueryClient","errorResetBoundary","useContext","defaultedOptions","defaultQueryObserverOptions","optimisticResults","onError","notifyManager","batchCalls","onSuccess","onSettled","suspense","staleTime","useErrorBoundary","retryOnMount","observer","result","getOptimisticResult","useEffect","current","unsubscribe","subscribe","x","updateResult","setOptions","listeners","isLoading","fetchOptimistic","then","_ref","data","catch","error","undefined","isError","isFetching","notifyOnChangeProps","trackResult","arrayFilter","require","baseFilter","baseIteratee","isArray","module","exports","collection","predicate","QueryObserver","_Subscribable","client","_this","call","this","trackedProps","previousSelectError","bindMethods","_inheritsLoose","_proto","prototype","remove","bind","refetch","onSubscribe","length","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","shouldFetchOnReconnect","query","enabled","refetchOnReconnect","isStale","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearTimers","removeObserver","notifyOptions","prevOptions","prevQuery","Error","queryKey","updateQuery","mounted","hasListeners","shouldFetchOptionally","updateStaleTimeout","refetchInterval","updateRefetchInterval","getQueryCache","build","createResult","getCurrentResult","currentResult","_this2","trackedResult","Object","keys","forEach","key","defineProperty","configurable","enumerable","get","typedKey","includes","push","getNextResult","_this3","Promise","resolve","reject","throwOnError","getCurrentQuery","fetch","_this4","fetchOptions","_this5","promise","noop","_this6","clearStaleTimeout","isServer","isValidTimeout","timeout","timeUntilStale","dataUpdatedAt","staleTimeoutId","setTimeout","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","clearInterval","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","state","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","status","isPreviousData","isPlaceholderData","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","isSuccess","select","structuralSharing","replaceEqualDeep","selectError","getLogger","Date","now","placeholderData","isIdle","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangePropsExclusions","includedProps","some","changed","isIncluded","isExcluded","shallowEqualObjects","defaultNotifyOptions","cache","notify","_extends","onQueryUpdate","action","type","isCancelledError","_this8","batch","listener","Subscribable","shouldLoadOnMount","refetchOnMount","shouldRefetchOnMount","isStaleByTime","baseUniq","array","iteratee","fromIndex","fromRight","index","generateUID","counter","map","WeakMap","uid","item","has","set","createSource","prefix","value","source","useUIDState","context","quartz","getPrefix","getId","gen","useUID","baseEach","baseFlatten","SetCache","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","comparator","isCommon","seen","outer","computed","seenIndex","baseIndexOf","baseFindIndex","baseIsNaN","strictIndexOf","Set","values","arrayPush","isFlattenable","depth","isStrict","Symbol","isArguments","spreadableSymbol","isConcatSpreadable","InfiniteQueryObserver","_QueryObserver","fetchNextPage","fetchPreviousPage","behavior","infiniteQueryBehavior","cancelRefetch","meta","fetchMore","direction","pageParam","_state$data","_state$data2","_state$fetchMeta","_state$fetchMeta$fetc","_state$fetchMeta2","_state$fetchMeta2$fet","hasNextPage","pages","hasPreviousPage","isFetchingNextPage","fetchMeta","isFetchingPreviousPage","useInfiniteQuery","arg1","arg2","arg3","parseQueryArgs"],"mappings":"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","file":"static/js/0.4761903c.chunk.js","sourcesContent":["import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var _React$useState2 = React.useState(function () {\n    return new Observer(queryClient, defaultedOptions);\n  }),\n      observer = _React$useState2[0];\n\n  var result = observer.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary, observer]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if ((defaultedOptions.suspense || defaultedOptions.useErrorBoundary) && result.isError && !result.isFetching) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = observer.trackResult(result);\n  }\n\n  return result;\n}","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.previousSelectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval)) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result) {\n    var _this2 = this;\n\n    var trackedResult = {};\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          var typedKey = key;\n\n          if (!_this2.trackedProps.includes(typedKey)) {\n            _this2.trackedProps.push(typedKey);\n          }\n\n          return result[typedKey];\n        }\n      });\n    });\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(options);\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select) && !this.previousSelectError) {\n          data = prevResult.data;\n        } else {\n          try {\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    if (result === prevResult) {\n      return false;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","/**\n * generates a UID factory\n * @internal\n * @example\n * const uid = generateUID();\n * uid(object) = 1;\n * uid(object) = 1;\n * uid(anotherObject) = 2;\n */\nexport var generateUID = function () {\n    var counter = 1;\n    var map = new WeakMap();\n    /**\n     * @borrows {uid}\n     */\n    var uid = function (item, index) {\n        if (typeof item === 'number' ||\n            typeof item === 'string') {\n            return index ? \"idx-\" + index : \"val-\" + item;\n        }\n        if (!map.has(item)) {\n            map.set(item, counter++);\n            return uid(item);\n        }\n        return 'uid' + map.get(item);\n    };\n    return uid;\n};\n/**\n * @name uid\n * returns an UID associated with {item}\n * @param {Object} item - object to generate UID for\n * @param {Number} index, a fallback index\n * @example\n * uid(object) == 1;\n * uid(object) == 1;\n * uid(anotherObject) == 2;\n * uid(\"not object\", 42) == 42\n *\n * @see {@link useUID}\n */\nexport var uid = generateUID();\n","import * as React from 'react';\nimport { generateUID } from \"./uid\";\nexport var createSource = function (prefix) {\n    if (prefix === void 0) { prefix = ''; }\n    return ({\n        value: 1,\n        prefix: prefix,\n        uid: generateUID()\n    });\n};\nexport var counter = createSource();\nexport var source = React.createContext(createSource());\nexport var getId = function (source) { return source.value++; };\nexport var getPrefix = function (source) { return source ? source.prefix : ''; };\n","import * as React from \"react\";\nimport { counter, getId, getPrefix, source } from \"./context\";\nvar generateUID = function (context) {\n    var quartz = context || counter;\n    var prefix = getPrefix(quartz);\n    var id = getId(quartz);\n    var uid = prefix + id;\n    var gen = function (item) { return uid + quartz.uid(item); };\n    return { uid: uid, gen: gen };\n};\nvar useUIDState = function () {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!('useContext' in React)) {\n            throw new Error('Hooks API requires React 16.8+');\n        }\n    }\n    // @ts-ignore\n    return React.useState(generateUID(React.useContext(source)));\n};\n/**\n * returns and unique id. SSR friendly\n * returns {String}\n * @see {@link UIDConsumer}\n * @see https://github.com/thearnica/react-uid#hooks-168\n * @example\n * const id = useUID();\n * id == 1; // for example\n */\nexport var useUID = function () {\n    var uid = useUIDState()[0].uid;\n    return uid;\n};\n/**\n * returns an uid generator\n * @see {@link UIDConsumer}\n * @see https://github.com/thearnica/react-uid#hooks-168\n * @example\n * const uid = useUIDSeed();\n * return (\n *  <>\n *    <label for={seed('email')}>Email: </label>\n *    <input id={seed('email')} name=\"email\" />\n *    {data.map(item => <div key={seed(item)}>...</div>\n *  </>\n * )\n */\nexport var useUIDSeed = function () {\n    var gen = useUIDState()[0].gen;\n    return gen;\n};\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","var baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { QueryObserver } from './queryObserver';\nimport { hasNextPage, hasPreviousPage, infiniteQueryBehavior } from './infiniteQueryBehavior';\nexport var InfiniteQueryObserver = /*#__PURE__*/function (_QueryObserver) {\n  _inheritsLoose(InfiniteQueryObserver, _QueryObserver);\n\n  // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  function InfiniteQueryObserver(client, options) {\n    return _QueryObserver.call(this, client, options) || this;\n  }\n\n  var _proto = InfiniteQueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    _QueryObserver.prototype.bindMethods.call(this);\n\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  };\n\n  _proto.setOptions = function setOptions(options) {\n    _QueryObserver.prototype.setOptions.call(this, _extends({}, options, {\n      behavior: infiniteQueryBehavior()\n    }));\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return _QueryObserver.prototype.getOptimisticResult.call(this, options);\n  };\n\n  _proto.fetchNextPage = function fetchNextPage(options) {\n    return this.fetch({\n      cancelRefetch: true,\n      throwOnError: options == null ? void 0 : options.throwOnError,\n      meta: {\n        fetchMore: {\n          direction: 'forward',\n          pageParam: options == null ? void 0 : options.pageParam\n        }\n      }\n    });\n  };\n\n  _proto.fetchPreviousPage = function fetchPreviousPage(options) {\n    return this.fetch({\n      cancelRefetch: true,\n      throwOnError: options == null ? void 0 : options.throwOnError,\n      meta: {\n        fetchMore: {\n          direction: 'backward',\n          pageParam: options == null ? void 0 : options.pageParam\n        }\n      }\n    });\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var _state$data, _state$data2, _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet;\n\n    var state = query.state;\n\n    var result = _QueryObserver.prototype.createResult.call(this, query, options);\n\n    return _extends({}, result, {\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n      hasPreviousPage: hasPreviousPage(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n      isFetchingNextPage: state.isFetching && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward',\n      isFetchingPreviousPage: state.isFetching && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward'\n    });\n  };\n\n  return InfiniteQueryObserver;\n}(QueryObserver);","import { InfiniteQueryObserver } from '../core/infiniteQueryObserver';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useInfiniteQuery(arg1, arg2, arg3) {\n  var options = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(options, InfiniteQueryObserver);\n}"],"sourceRoot":""}