{"version":3,"sources":["../node_modules/react-query/es/core/infiniteQueryObserver.js","../node_modules/react-query/es/react/useInfiniteQuery.js","../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../node_modules/react-query/es/react/useBaseQuery.js","../node_modules/lodash/filter.js","../node_modules/react-query/es/core/queryObserver.js","../node_modules/lodash/uniqBy.js","../node_modules/lodash/_baseFindIndex.js","../node_modules/react-uid/dist/es2015/uid.js","../node_modules/react-uid/dist/es2015/context.js","../node_modules/react-uid/dist/es2015/hooks.js","../node_modules/lodash/_baseFilter.js","../node_modules/lodash/flatMap.js","../node_modules/lodash/_baseUniq.js","../node_modules/lodash/_arrayIncludes.js","../node_modules/lodash/_baseIndexOf.js","../node_modules/lodash/_baseIsNaN.js","../node_modules/lodash/_strictIndexOf.js","../node_modules/lodash/_arrayIncludesWith.js","../node_modules/lodash/_createSet.js","../node_modules/lodash/noop.js","../node_modules/lodash/_baseFlatten.js","../node_modules/lodash/_isFlattenable.js"],"names":["InfiniteQueryObserver","_QueryObserver","client","options","call","this","_inheritsLoose","_proto","prototype","bindMethods","fetchNextPage","bind","fetchPreviousPage","setOptions","_extends","behavior","infiniteQueryBehavior","getOptimisticResult","fetch","cancelRefetch","throwOnError","meta","fetchMore","direction","pageParam","createResult","query","_state$data","_state$data2","_state$fetchMeta","_state$fetchMeta$fetc","_state$fetchMeta2","_state$fetchMeta2$fet","state","result","hasNextPage","data","pages","hasPreviousPage","isFetchingNextPage","isFetching","fetchMeta","isFetchingPreviousPage","QueryObserver","useInfiniteQuery","arg1","arg2","arg3","parseQueryArgs","useBaseQuery","createValue","_isReset","clearReset","reset","isReset","QueryErrorResetBoundaryContext","React","createContext","Observer","mountedRef","useRef","forceUpdate","useState","queryClient","useQueryClient","errorResetBoundary","useContext","defaultedOptions","defaultQueryObserverOptions","optimisticResults","onError","notifyManager","batchCalls","onSuccess","onSettled","suspense","staleTime","useErrorBoundary","retryOnMount","observer","useEffect","current","unsubscribe","subscribe","x","updateResult","listeners","isLoading","fetchOptimistic","then","_ref","catch","error","undefined","isError","notifyOnChangeProps","trackResult","arrayFilter","require","baseFilter","baseIteratee","isArray","module","exports","collection","predicate","_Subscribable","_this","trackedProps","previousSelectError","remove","refetch","onSubscribe","length","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","shouldFetchOnReconnect","enabled","refetchOnReconnect","isStale","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearTimers","removeObserver","notifyOptions","prevOptions","prevQuery","Error","queryKey","updateQuery","mounted","hasListeners","shouldFetchOptionally","updateStaleTimeout","refetchInterval","updateRefetchInterval","getQueryCache","build","getCurrentResult","currentResult","_this2","trackedResult","Object","keys","forEach","key","defineProperty","configurable","enumerable","get","typedKey","includes","push","getNextResult","_this3","Promise","resolve","reject","getCurrentQuery","_this4","fetchOptions","_this5","promise","noop","_this6","clearStaleTimeout","isServer","isValidTimeout","timeout","timeUntilStale","dataUpdatedAt","staleTimeoutId","setTimeout","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","clearInterval","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","status","isPreviousData","isPlaceholderData","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","isSuccess","select","structuralSharing","replaceEqualDeep","selectError","getLogger","Date","now","placeholderData","isIdle","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangePropsExclusions","includedProps","some","changed","isIncluded","isExcluded","shallowEqualObjects","defaultNotifyOptions","cache","notify","onQueryUpdate","action","type","isCancelledError","_this8","batch","listener","Subscribable","shouldLoadOnMount","refetchOnMount","shouldRefetchOnMount","isStaleByTime","baseUniq","array","iteratee","fromIndex","fromRight","index","generateUID","counter","map","WeakMap","uid","item","has","set","createSource","prefix","value","source","useUIDState","context","quartz","getPrefix","getId","gen","useUID","baseEach","baseFlatten","SetCache","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","comparator","isCommon","seen","outer","computed","seenIndex","baseIndexOf","baseFindIndex","baseIsNaN","strictIndexOf","Set","values","arrayPush","isFlattenable","depth","isStrict","Symbol","isArguments","spreadableSymbol","isConcatSpreadable"],"mappings":"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","file":"static/js/0.87a2663c.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { QueryObserver } from './queryObserver';\nimport { hasNextPage, hasPreviousPage, infiniteQueryBehavior } from './infiniteQueryBehavior';\nexport var InfiniteQueryObserver = /*#__PURE__*/function (_QueryObserver) {\n  _inheritsLoose(InfiniteQueryObserver, _QueryObserver);\n\n  // Type override\n  // Type override\n  // Type override\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  function InfiniteQueryObserver(client, options) {\n    return _QueryObserver.call(this, client, options) || this;\n  }\n\n  var _proto = InfiniteQueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    _QueryObserver.prototype.bindMethods.call(this);\n\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  };\n\n  _proto.setOptions = function setOptions(options) {\n    _QueryObserver.prototype.setOptions.call(this, _extends({}, options, {\n      behavior: infiniteQueryBehavior()\n    }));\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return _QueryObserver.prototype.getOptimisticResult.call(this, options);\n  };\n\n  _proto.fetchNextPage = function fetchNextPage(options) {\n    return this.fetch({\n      cancelRefetch: true,\n      throwOnError: options == null ? void 0 : options.throwOnError,\n      meta: {\n        fetchMore: {\n          direction: 'forward',\n          pageParam: options == null ? void 0 : options.pageParam\n        }\n      }\n    });\n  };\n\n  _proto.fetchPreviousPage = function fetchPreviousPage(options) {\n    return this.fetch({\n      cancelRefetch: true,\n      throwOnError: options == null ? void 0 : options.throwOnError,\n      meta: {\n        fetchMore: {\n          direction: 'backward',\n          pageParam: options == null ? void 0 : options.pageParam\n        }\n      }\n    });\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var _state$data, _state$data2, _state$fetchMeta, _state$fetchMeta$fetc, _state$fetchMeta2, _state$fetchMeta2$fet;\n\n    var state = query.state;\n\n    var result = _QueryObserver.prototype.createResult.call(this, query, options);\n\n    return _extends({}, result, {\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, (_state$data = state.data) == null ? void 0 : _state$data.pages),\n      hasPreviousPage: hasPreviousPage(options, (_state$data2 = state.data) == null ? void 0 : _state$data2.pages),\n      isFetchingNextPage: state.isFetching && ((_state$fetchMeta = state.fetchMeta) == null ? void 0 : (_state$fetchMeta$fetc = _state$fetchMeta.fetchMore) == null ? void 0 : _state$fetchMeta$fetc.direction) === 'forward',\n      isFetchingPreviousPage: state.isFetching && ((_state$fetchMeta2 = state.fetchMeta) == null ? void 0 : (_state$fetchMeta2$fet = _state$fetchMeta2.fetchMore) == null ? void 0 : _state$fetchMeta2$fet.direction) === 'backward'\n    });\n  };\n\n  return InfiniteQueryObserver;\n}(QueryObserver);","import { InfiniteQueryObserver } from '../core/infiniteQueryObserver';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useInfiniteQuery(arg1, arg2, arg3) {\n  var options = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(options, InfiniteQueryObserver);\n}","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var _React$useState2 = React.useState(function () {\n    return new Observer(queryClient, defaultedOptions);\n  }),\n      observer = _React$useState2[0];\n\n  var result = observer.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary, observer]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if ((defaultedOptions.suspense || defaultedOptions.useErrorBoundary) && result.isError && !result.isFetching) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = observer.trackResult(result);\n  }\n\n  return result;\n}","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.previousSelectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval)) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result) {\n    var _this2 = this;\n\n    var trackedResult = {};\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          var typedKey = key;\n\n          if (!_this2.trackedProps.includes(typedKey)) {\n            _this2.trackedProps.push(typedKey);\n          }\n\n          return result[typedKey];\n        }\n      });\n    });\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(options);\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select) && !this.previousSelectError) {\n          data = prevResult.data;\n        } else {\n          try {\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    if (result === prevResult) {\n      return false;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","var baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","/**\n * generates a UID factory\n * @internal\n * @example\n * const uid = generateUID();\n * uid(object) = 1;\n * uid(object) = 1;\n * uid(anotherObject) = 2;\n */\nexport var generateUID = function () {\n    var counter = 1;\n    var map = new WeakMap();\n    /**\n     * @borrows {uid}\n     */\n    var uid = function (item, index) {\n        if (typeof item === 'number' ||\n            typeof item === 'string') {\n            return index ? \"idx-\" + index : \"val-\" + item;\n        }\n        if (!map.has(item)) {\n            map.set(item, counter++);\n            return uid(item);\n        }\n        return 'uid' + map.get(item);\n    };\n    return uid;\n};\n/**\n * @name uid\n * returns an UID associated with {item}\n * @param {Object} item - object to generate UID for\n * @param {Number} index, a fallback index\n * @example\n * uid(object) == 1;\n * uid(object) == 1;\n * uid(anotherObject) == 2;\n * uid(\"not object\", 42) == 42\n *\n * @see {@link useUID}\n */\nexport var uid = generateUID();\n","import * as React from 'react';\nimport { generateUID } from \"./uid\";\nexport var createSource = function (prefix) {\n    if (prefix === void 0) { prefix = ''; }\n    return ({\n        value: 1,\n        prefix: prefix,\n        uid: generateUID()\n    });\n};\nexport var counter = createSource();\nexport var source = React.createContext(createSource());\nexport var getId = function (source) { return source.value++; };\nexport var getPrefix = function (source) { return source ? source.prefix : ''; };\n","import * as React from \"react\";\nimport { counter, getId, getPrefix, source } from \"./context\";\nvar generateUID = function (context) {\n    var quartz = context || counter;\n    var prefix = getPrefix(quartz);\n    var id = getId(quartz);\n    var uid = prefix + id;\n    var gen = function (item) { return uid + quartz.uid(item); };\n    return { uid: uid, gen: gen };\n};\nvar useUIDState = function () {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!('useContext' in React)) {\n            throw new Error('Hooks API requires React 16.8+');\n        }\n    }\n    // @ts-ignore\n    return React.useState(generateUID(React.useContext(source)));\n};\n/**\n * returns and unique id. SSR friendly\n * returns {String}\n * @see {@link UIDConsumer}\n * @see https://github.com/thearnica/react-uid#hooks-168\n * @example\n * const id = useUID();\n * id == 1; // for example\n */\nexport var useUID = function () {\n    var uid = useUIDState()[0].uid;\n    return uid;\n};\n/**\n * returns an uid generator\n * @see {@link UIDConsumer}\n * @see https://github.com/thearnica/react-uid#hooks-168\n * @example\n * const uid = useUIDSeed();\n * return (\n *  <>\n *    <label for={seed('email')}>Email: </label>\n *    <input id={seed('email')} name=\"email\" />\n *    {data.map(item => <div key={seed(item)}>...</div>\n *  </>\n * )\n */\nexport var useUIDSeed = function () {\n    var gen = useUIDState()[0].gen;\n    return gen;\n};\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","var baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n"],"sourceRoot":""}