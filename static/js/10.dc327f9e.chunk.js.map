{"version":3,"sources":["hooks/useRouteState.ts","views/search/search.tsx","components/seo/seo.tsx","hooks/useInViewport.ts","components/scrollable/scrollable.tsx","components/imageItem/imageItem.tsx","components/videoItem/videoItem.tsx","components/itemsList/itemsList.tsx","hooks/useInfiniteItems.ts","hooks/useApiInfinite.ts","../node_modules/lodash/orderBy.js","containers/itemsListInfinite/itemsListInfinite.tsx","../node_modules/lodash/_baseOrderBy.js","../node_modules/lodash/_baseSortBy.js","../node_modules/lodash/_compareMultiple.js","../node_modules/lodash/_compareAscending.js","components/input/input.tsx"],"names":["defaultOptions","useHistoryReplace","deserialize","value","serialize","String","useRouteState","key","initialValue","options","history","useHistory","opts","useMemo","param","URLSearchParams","location","search","get","handleChange","useCallback","newValue","prevSearch","params","serialized","set","delete","newSearch","replace","push","hash","pathname","state","handleReset","orderItems","items","orderBy","SearchView","useLocation","query","setQuery","queryResult","useApiInfinite","q","type","field","handleQueryChange","title","className","autoFocus","placeholder","onChange","length","processItems","Seo","props","Helmet","defaultTitle","titleTemplate","useInViewport","target","config","disconnectOnLeave","onEnterViewport","onLeaveViewport","useState","forceUpdate","observer","useRef","inViewportRef","intersected","enterCountRef","leaveCountRef","startObserver","current","node","findDOMNode","observe","stopObserver","unobserve","disconnect","handleIntersection","entries","entry","isIntersecting","intersectionRatio","isInViewport","initIntersectionObserver","IntersectionObserver","useEffect","inViewport","enterCount","leaveCount","Scrollable","children","onScrollToEnd","footerRef","cx","ref","ImageItem","wrapperClassName","source","caption","loading","src","alt","VideoItem","item","split","handleOnClick","id","generatePath","PATHS","Item","itemId","onClick","posters","medium","new","ItemsList","scrollable","content","map","Array","_","idx","useInfiniteItems","data","isLoading","isFetchingNextPage","fetchNextPage","canFetchNextPage","setCanFetchNextPage","uniqBy","filter","flatMap","pages","page","processedItems","handleLoadMore","method","client","ApiClient","useInfiniteQuery","pageParam","getNextPageParam","lastPage","pagination","baseOrderBy","require","isArray","module","exports","collection","iteratees","orders","guard","undefined","ItemsListInfinite","fetchMore","arrayMap","baseGet","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","identity","iteratee","index","result","object","other","array","comparer","sort","compareAscending","objCriteria","criteria","othCriteria","ordersLength","isSymbol","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","Input","inputRef","frameId","requestAnimationFrame","domNode","querySelector","focus","cancelAnimationFrame"],"mappings":"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","file":"static/js/10.dc327f9e.chunk.js","sourcesContent":["import { useCallback, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport type RouteStateOptions<T> = {\n  useHistoryReplace?: boolean;\n  deserialize?: (value: string) => T;\n  serialize?: (value: T) => string;\n};\n\nconst defaultOptions: Required<RouteStateOptions<any>> = {\n  useHistoryReplace: false,\n  deserialize: (value) => value,\n  serialize: (value) => String(value),\n};\n\ntype UseRouteStateResult<T> = [T, (value: T, useHistoryReplace?: boolean) => void, (useHistoryReplace?: boolean) => void];\n\nfunction useRouteState<T, Key extends string>(key: Key, initialValue: T, options?: RouteStateOptions<T>): UseRouteStateResult<T> {\n  const history = useHistory();\n  const opts = useMemo(() => ({ ...defaultOptions, ...options } as Required<RouteStateOptions<T>>), [options]);\n\n  const value = useMemo(() => {\n    const params = new URLSearchParams(history.location.search);\n    const param = params.get(key);\n\n    if (param) {\n      return opts.deserialize(param);\n    }\n\n    return initialValue;\n  }, [key, initialValue, opts, history.location.search]);\n\n  const handleChange = useCallback(\n    (newValue: T, useHistoryReplace?: boolean) => {\n      const location = history.location;\n      const prevSearch = location.search;\n      const params = new URLSearchParams(prevSearch);\n      const serialized = opts.serialize(newValue);\n\n      if (serialized) {\n        params.set(key, serialized);\n      } else {\n        params.delete(key);\n      }\n\n      const newSearch = `?${params}`;\n\n      if (prevSearch !== newSearch) {\n        (useHistoryReplace || opts.useHistoryReplace ? history.replace : history.push)(\n          // @ts-expect-error\n          {\n            search: newSearch,\n            hash: location.hash,\n            pathname: location.pathname,\n          },\n          location.state,\n        );\n      }\n    },\n    [key, opts, history],\n  );\n  const handleReset = useCallback(\n    (useHistoryReplace?: boolean) => {\n      handleChange(initialValue, useHistoryReplace);\n    },\n    [initialValue, handleChange],\n  );\n\n  return [value, handleChange, handleReset];\n}\n\nexport default useRouteState;\n","import { useCallback } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport orderBy from 'lodash/orderBy';\n\nimport { Item } from 'api';\nimport Input from 'components/input';\nimport Seo from 'components/seo';\nimport ItemsListInfinite from 'containers/itemsListInfinite';\nimport useApiInfinite from 'hooks/useApiInfinite';\nimport useRouteState from 'hooks/useRouteState';\n\nfunction orderItems(items: Item[]) {\n  return orderBy(items, 'year', 'desc');\n}\n\nconst SearchView: React.FC = () => {\n  const location = useLocation<{ type?: string; field?: string }>();\n  const [query, setQuery] = useRouteState('q', '');\n  const queryResult = useApiInfinite('itemsSearch', [\n    {\n      q: query,\n      type: location.state?.type,\n      field: location.state?.field,\n    },\n  ]);\n  const handleQueryChange = useCallback(\n    (value) => {\n      setQuery(value);\n    },\n    [setQuery],\n  );\n\n  return (\n    <>\n      <Seo title=\"Поиск\" />\n      <div className=\"m-1 mb-3 mr-2\">\n        <Input autoFocus placeholder=\"Название фильма или сериала...\" value={query} onChange={handleQueryChange} />\n      </div>\n      {query.length >= 3 && <ItemsListInfinite queryResult={queryResult} processItems={orderItems} />}\n    </>\n  );\n};\n\nexport default SearchView;\n","import { Helmet, HelmetProps } from 'react-helmet';\n\ntype Props = {} & HelmetProps;\n\nconst Seo: React.FC<Props> = (props) => {\n  return <Helmet defaultTitle=\"Unknown\" titleTemplate=\"%s | Kinopub WebOS\" {...props} />;\n};\n\nexport default Seo;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { findDOMNode } from 'react-dom';\n\ntype Props = {\n  onEnterViewport?: () => void;\n  onLeaveViewport?: () => void;\n};\n\nconst useInViewport = (\n  target: React.MutableRefObject<React.ReactInstance | null | undefined>,\n  props: Props,\n  options?: IntersectionObserverInit,\n  config = { disconnectOnLeave: false },\n) => {\n  const { onEnterViewport, onLeaveViewport } = props;\n  const [, forceUpdate] = useState();\n\n  const observer = useRef<IntersectionObserver | null>(null);\n\n  const inViewportRef = useRef(false);\n  const intersected = useRef(false);\n\n  const enterCountRef = useRef(0);\n  const leaveCountRef = useRef(0);\n\n  const startObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.observe(node);\n      }\n    }\n  }, [target, observer]);\n\n  const stopObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.unobserve(node);\n        observer.current.disconnect();\n        observer.current = null;\n      }\n    }\n  }, [target, observer]);\n\n  const handleIntersection = useCallback(\n    (entries) => {\n      const entry = entries[0] || {};\n      const { isIntersecting, intersectionRatio } = entry;\n      const isInViewport = typeof isIntersecting !== 'undefined' ? isIntersecting : intersectionRatio > 0;\n\n      // enter\n      if (!intersected.current && isInViewport) {\n        intersected.current = true;\n\n        onEnterViewport?.();\n\n        enterCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n\n        return;\n      }\n\n      // leave\n      if (intersected.current && !isInViewport) {\n        intersected.current = false;\n\n        onLeaveViewport?.();\n\n        if (config.disconnectOnLeave && observer.current) {\n          // disconnect obsever on leave\n          observer.current.disconnect();\n        }\n\n        leaveCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n      }\n    },\n    [observer, config.disconnectOnLeave, onEnterViewport, onLeaveViewport],\n  );\n\n  const initIntersectionObserver = useCallback(() => {\n    if (!observer.current) {\n      observer.current = new IntersectionObserver(handleIntersection, options);\n    }\n  }, [observer, options, handleIntersection]);\n\n  useEffect(() => {\n    initIntersectionObserver();\n    startObserver();\n\n    return () => {\n      stopObserver();\n    };\n  }, [initIntersectionObserver, startObserver, stopObserver]);\n\n  return {\n    inViewport: inViewportRef.current,\n    enterCount: enterCountRef.current,\n    leaveCount: leaveCountRef.current,\n  };\n};\n\nexport default useInViewport;\n","import { useRef } from 'react';\nimport cx from 'classnames';\n\nimport useInViewport from 'hooks/useInViewport';\n\ntype Props = {\n  onScrollToEnd?: () => void;\n  className?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Scrollable: React.FC<Props> = ({ children, className, onScrollToEnd, ...props }) => {\n  const footerRef = useRef<HTMLDivElement>(null);\n\n  useInViewport(footerRef, { onEnterViewport: onScrollToEnd });\n\n  return (\n    <div className={cx('overflow-y-auto h-full', className)} {...props}>\n      {children}\n      <div className=\"h-40\" ref={footerRef} />\n    </div>\n  );\n};\n\nexport default Scrollable;\n","import cx from 'classnames';\n\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  className?: string;\n  wrapperClassName?: string;\n  source?: string;\n  caption?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst ImageItem: React.FC<Props> = ({ className, wrapperClassName, source, caption, children, ...props }) => {\n  return (\n    <Spottable {...props} className={cx('rounded-xl w-1/5', wrapperClassName)}>\n      <div className={cx('h-40 m-1 flex flex-col relative overflow-hidden cursor-pointer', className)}>\n        <img\n          loading=\"lazy\"\n          className=\"w-full h-full object-cover rounded-xl border-2 border-gray-300 bg-gray-300\"\n          src={source}\n          alt={caption}\n        />\n        <div className=\"px-2\">\n          <p className=\"text-gray-200 text-sm text-center overflow-hidden whitespace-nowrap\">{caption}</p>\n        </div>\n\n        {children}\n      </div>\n    </Spottable>\n  );\n};\n\nexport default ImageItem;\n","import { useCallback, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport cx from 'classnames';\n\nimport { Item } from 'api';\nimport ImageItem from 'components/imageItem';\nimport { PATHS, generatePath } from 'routes';\n\ntype Props = {\n  item?: Item;\n  className?: string;\n};\n\nconst VideoItem: React.FC<Props> = ({ item, className }) => {\n  const history = useHistory();\n  const title = useMemo(() => item?.title?.split('/')[0], [item?.title]);\n\n  const handleOnClick = useCallback(() => {\n    if (item?.id) {\n      history.push(\n        generatePath(PATHS.Item, {\n          itemId: item.id,\n        }),\n      );\n    }\n  }, [item?.id, history]);\n\n  return (\n    <ImageItem onClick={handleOnClick} source={item?.posters.medium} caption={title} className={cx('h-72', className)}>\n      {item?.new && (\n        <div className=\"absolute bg-red-600 border-gray-300 border-t-2 border-r-2 text-gray-200 px-2 py-1 rounded-bl rounded-tr-xl top-0 right-0\">\n          {item?.new}\n        </div>\n      )}\n    </ImageItem>\n  );\n};\n\nexport default VideoItem;\n","import React from 'react';\nimport cx from 'classnames';\nimport map from 'lodash/map';\n\nimport { Item } from 'api';\nimport Scrollable from 'components/scrollable';\nimport Text from 'components/text';\nimport VideoItem from 'components/videoItem';\n\ntype Props = {\n  title?: string;\n  items?: Item[];\n  loading?: boolean;\n  onScrollToEnd?: () => void;\n  scrollable?: boolean;\n  className?: string;\n};\n\nconst ItemsList: React.FC<Props> = ({ title, items, loading, onScrollToEnd, scrollable = true, className }) => {\n  const content = (\n    <div>\n      {title && <Text className=\"m-1 mb-3\">{title}</Text>}\n      <div className={cx('flex flex-wrap', className)}>\n        {map(items, (item) => (\n          <VideoItem key={item.id} item={item} />\n        ))}\n        {loading && map([...new Array(15)], (_, idx) => <VideoItem key={idx} />)}\n      </div>\n    </div>\n  );\n\n  return scrollable ? <Scrollable onScrollToEnd={onScrollToEnd}>{content}</Scrollable> : content;\n};\n\nexport default ItemsList;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport filter from 'lodash/filter';\nimport flatMap from 'lodash/flatMap';\nimport uniqBy from 'lodash/uniqBy';\n\nimport useApiInfinite from 'hooks/useApiInfinite';\n\ntype PageWithItems<T> = {\n  items: T[];\n};\n\nexport type QueryResult = ReturnType<typeof useApiInfinite>;\n\nfunction useInfiniteItems<T>(queryResult: QueryResult, processItems?: (items: T[]) => T[]) {\n  const { data, isLoading, isFetchingNextPage, fetchNextPage } = queryResult;\n  const [canFetchNextPage, setCanFetchNextPage] = useState(false);\n\n  const items = useMemo(\n    () => uniqBy(filter(flatMap<PageWithItems<T>, T>(data?.pages as unknown as PageWithItems<T>[], (page) => page.items)), 'id'),\n    [data?.pages],\n  );\n  const processedItems = useMemo(() => (processItems ? processItems(items) : items), [items, processItems]);\n\n  const handleLoadMore = useCallback(() => {\n    if (canFetchNextPage) {\n      fetchNextPage();\n      setCanFetchNextPage(false);\n    }\n  }, [canFetchNextPage, fetchNextPage]);\n\n  useEffect(() => {\n    setCanFetchNextPage(true);\n  }, [items.length]);\n\n  return [processedItems, isLoading || isFetchingNextPage, handleLoadMore] as const;\n}\n\nexport default useInfiniteItems;\n","import { useMemo } from 'react';\nimport { UseInfiniteQueryOptions, useInfiniteQuery } from 'react-query';\n\nimport ApiClient, { PaginationResponse } from 'api';\n\nimport { Method, Methods } from './useApi';\n\nfunction useApiInfinite<T extends Method>(\n  method: T,\n  params: Parameters<ApiClient[T]> = [] as Parameters<ApiClient[T]>,\n  options?: UseInfiniteQueryOptions<Methods[T]>,\n) {\n  const client = useMemo(() => new ApiClient(), []);\n  const query = useInfiniteQuery<Methods[T], string, Methods[T]>(\n    [method, ...params],\n    ({ pageParam }) => {\n      // @ts-expect-error\n      return client[method](...params, pageParam) as Methods[T];\n    },\n    {\n      // @ts-expect-error\n      getNextPageParam: (lastPage: PaginationResponse) => {\n        return lastPage?.pagination?.current + 1 || 1;\n      },\n      ...options,\n    },\n  );\n\n  return query;\n}\n\nexport default useApiInfinite;\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n","import { Item } from 'api';\nimport ItemsList from 'components/itemsList';\nimport useInfiniteItems, { QueryResult } from 'hooks/useInfiniteItems';\n\ntype Props = {\n  title?: string;\n  queryResult: QueryResult;\n  processItems?: (items: Item[]) => Item[];\n};\n\nconst ItemsListInfinite: React.FC<Props> = ({ title, queryResult, processItems }) => {\n  const [items, isLoading, fetchMore] = useInfiniteItems(queryResult, processItems);\n\n  return <ItemsList title={title} items={items} loading={isLoading} onScrollToEnd={fetchMore} />;\n};\n\nexport default ItemsListInfinite;\n","var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n","import { useCallback, useEffect, useRef } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport InputBase, { InputProps } from '@enact/moonstone/Input';\nimport cx from 'classnames';\n\ntype Props = {\n  onChange?: (value: string) => void;\n  className?: string;\n} & InputProps;\n\nconst Input: React.FC<Props> = ({ className, onChange, autoFocus, ...props }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const handleChange = useCallback(\n    ({ value }: { value: string }) => {\n      onChange?.(value);\n    },\n    [onChange],\n  );\n\n  useEffect(() => {\n    let frameId: number;\n\n    if (autoFocus) {\n      frameId = requestAnimationFrame(() => {\n        const domNode = findDOMNode(inputRef.current) as HTMLDivElement;\n        domNode?.querySelector('input')?.focus();\n      });\n    }\n\n    return () => {\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n    };\n  }, [inputRef, autoFocus]);\n\n  return (\n    <InputBase\n      {...props}\n      // @ts-expect-error\n      ref={inputRef}\n      className={cx('w-full', className)}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default Input;\n"],"sourceRoot":""}