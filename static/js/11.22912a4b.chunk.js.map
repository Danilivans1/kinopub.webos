{"version":3,"sources":["views/video/video.tsx","components/seo/seo.tsx","hooks/useApi.ts","../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../node_modules/react-query/es/react/useBaseQuery.js","components/button/button.tsx","../node_modules/react-query/es/core/queryObserver.js","components/checkbox/checkbox.tsx","../node_modules/react-query/es/react/useQuery.js","components/spotlightContainer/spotlightContainer.tsx","components/popup/popup.tsx","components/radio/radio.tsx","utils/video.ts","utils/subtitles.ts","components/media/media.new.tsx","components/player/settings.tsx","components/player/startFrom.tsx","components/player/player.tsx","utils/item.ts"],"names":["usePrevNextVideos","item","season","video","nextVideo","useMemo","videos","episodes","find","number","nextSeason","seasons","useNextVideo","previousVideo","previousSeason","length","usePreviousVideo","VideoView","history","useHistory","location","useLocation","watchingMarkTimeAsync","useApiMutation","useStorageState","streamingType","state","useState","currentVideo","setCurrentVideo","currentVideoLinks","useApi","id","saveCurrentTime","useCallback","currentTime","a","playerProps","data","title","getItemTitle","description","getItemDescription","poster","posters","wide","big","audios","mapAudios","sources","mapSources","files","subtitles","mapSubtitles","startTime","watching","status","WatchingStatus","Watching","time","handlePause","handleOnEnded","goBack","handleJumpBackward","handleJumpForward","handleTimeSync","onPause","onEnded","onJumpBackward","onJumpForward","onTimeSync","Seo","props","Helmet","defaultTitle","titleTemplate","method","params","options","client","ApiClient","query","useQuery","createValue","_isReset","clearReset","reset","isReset","QueryErrorResetBoundaryContext","React","createContext","useBaseQuery","Observer","mountedRef","useRef","forceUpdate","queryClient","useQueryClient","errorResetBoundary","useContext","defaultedOptions","defaultQueryObserverOptions","optimisticResults","onError","notifyManager","batchCalls","onSuccess","onSettled","suspense","staleTime","useErrorBoundary","retryOnMount","observer","result","getOptimisticResult","useEffect","current","unsubscribe","subscribe","x","updateResult","setOptions","listeners","isLoading","fetchOptimistic","then","_ref","catch","error","undefined","isError","isFetching","notifyOnChangeProps","trackResult","Button","icon","iconOnly","children","autoFocus","className","wrapperRef","frameId","requestAnimationFrame","node","focus","cancelAnimationFrame","ref","cx","role","name","QueryObserver","_Subscribable","_this","call","this","trackedProps","previousSelectError","bindMethods","_inheritsLoose","_proto","prototype","remove","bind","refetch","onSubscribe","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","shouldFetchOnReconnect","enabled","refetchOnReconnect","isStale","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearTimers","removeObserver","notifyOptions","prevOptions","prevQuery","Error","queryKey","updateQuery","mounted","hasListeners","shouldFetchOptionally","updateStaleTimeout","refetchInterval","updateRefetchInterval","getQueryCache","build","createResult","getCurrentResult","currentResult","_this2","trackedResult","Object","keys","forEach","key","defineProperty","configurable","enumerable","get","typedKey","includes","push","getNextResult","_this3","Promise","resolve","reject","throwOnError","getCurrentQuery","fetch","_this4","fetchOptions","_this5","promise","noop","_this6","clearStaleTimeout","isServer","isValidTimeout","timeout","timeUntilStale","dataUpdatedAt","staleTimeoutId","setTimeout","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","clearInterval","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","isPreviousData","isPlaceholderData","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","isSuccess","select","structuralSharing","replaceEqualDeep","selectError","getLogger","Date","now","placeholderData","isIdle","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangePropsExclusions","includedProps","some","changed","isIncluded","isExcluded","shallowEqualObjects","defaultNotifyOptions","cache","notify","_extends","onQueryUpdate","action","type","isCancelledError","_this8","batch","listener","Subscribable","shouldLoadOnMount","refetchOnMount","shouldRefetchOnMount","isStaleByTime","Checkbox","defaultChecked","checked","onChange","inputRef","handleChange","e","target","handleKeyPress","isKey","click","component","onKeyPress","arg1","arg2","arg3","parsedOptions","parseQueryArgs","SpotlightContainer","SpotlightContainerDecorator","enterTo","defaultElement","selector","overflow","preserveId","Popup","visible","onClose","closeButton","containerId","Spotlight","add","handleClose","handleCloseIfVisible","spotPopupContent","getCurrent","blur","setActiveContainer","setPointerMode","useButtonEffect","hidden","onClick","spotlightId","spotlightRestrict","spotlightDisabled","Radio","formatIdx","idx","map","audio","lang","filter","author","toUpper","codec","join","orderBy","file","src","url","http","quality","parseInt","subtitle","WebVTTConverter","resource","objectURL","reader","FileReader","addEventListener","event","buf","Uint8Array","readAsArrayBuffer","Blob","TextDecoder","blobToString","decoded","text","concat","toVTT","blob","URL","createObjectURL","blobToBuffer","buffer","utf8str","decode","success","fail","readAsText","replace","str","split","each","charCodeAt","from","converter","getURL","useVideoPlayer","autoPlay","audioTracks","sourceTracks","subtitleTracks","isSettingsOpen","videoRef","hlsRef","startTimeRef","isSettingsOpenRef","currentAudioTrack","setCurrentAudioTrack","currentSourceTrack","setCurrentSourceTrack","currentSubtitleTrack","setCurrentSubtitleTrack","getAudioTracks","getAudioTrack","setAudioTrack","audioTrackName","audioTrack","getSourceTracks","uniqBy","getSourceTrack","setSourceTrack","sourceTrackName","sourceTrack","getSubtitleTracks","getSubtitleTrack","setSubtitleTrack","subtitleTrackName","subtitleTrack","currentAudioTrackIndex","findIndex","currentSrc","handleMediaLoaded","removeEventListener","firstChild","lastChild","track","mode","removeChild","pause","play","addSubtitleTrack","document","createElement","appendChild","kind","label","srclang","endsWith","convertToVTT","HLS","isSupported","hls","enableWebVTT","enableCEA708Captions","attachMedia","on","Events","MEDIA_ATTACHED","loadSource","Boolean","MEDIA_EVENTS","Media","forwardRef","onUpdate","mediaComponent","handleUpdate","eventProps","reduce","args","player","getCurrentTime","setCurrentTime","getPlaybackRate","playbackRate","setPlaybackRate","getPaused","paused","getDuration","duration","getError","networkState","NETWORK_NO_SOURCE","getLoading","readyState","HAVE_ENOUGH_DATA","getProportionLoaded","buffered","end","getProportionPlayed","playPause","load","api","useImperativeHandle","useVideoPlayerApi","NONE","Settings","isOpen","setIsOpen","setAudios","currentAudio","setCurrentAudio","setSources","currentSource","setCurrentSource","setSubtitles","currentSubtitle","setCurrentSubtitle","handleVideoUpdate","value","getVideoNode","handleAudioChange","handleSourceChange","source","handleSubtitleChange","timeoutId","StartFrom","startInDelay","setVisible","startIn","setStartIn","startFrom","toISOString","substr","handleStartFromClick","handleStartFromBeginingClick","intervalId","prevStartIn","newStartIn","Player","timeSyncInterval","onPlay","playerRef","isPaused","setIsPaused","isLoaded","setIsLoaded","setIsSettingsOpen","handlePlay","handleEnded","handleLoadedMetadata","handleSettingsOpen","handleSettingsClose","handlePauseButton","onLoadedMetadata","videoComponent"],"mappings":"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","file":"static/js/11.22912a4b.chunk.js","sourcesContent":["import { useCallback, useMemo, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { ItemDetails, Season, Streaming, Video, WatchingStatus } from 'api';\nimport Player, { PlayerProps } from 'components/player';\nimport Seo from 'components/seo';\nimport useApi from 'hooks/useApi';\nimport useApiMutation from 'hooks/useApiMutation';\nimport useStorageState from 'hooks/useStorageState';\n\nimport { getItemDescription, getItemTitle } from 'utils/item';\nimport { mapAudios, mapSources, mapSubtitles } from 'utils/video';\n\nconst useNextVideo = (item: ItemDetails, season: Season, video: Video) =>\n  useMemo(() => {\n    const nextVideo = (item.videos || season?.episodes)?.find(({ number }) => number === video.number + 1);\n\n    if (nextVideo) {\n      return nextVideo;\n    }\n\n    const nextSeason = item.seasons?.find(({ number }) => number === season.number + 1);\n    if (nextSeason) {\n      return nextSeason.episodes[0];\n    }\n  }, [item, season, video]);\n\nconst usePreviousVideo = (item: ItemDetails, season: Season, video: Video) =>\n  useMemo(() => {\n    const previousVideo = (item.videos || season?.episodes)?.find(({ number }) => number === video.number - 1);\n\n    if (previousVideo) {\n      return previousVideo;\n    }\n\n    const previousSeason = item.seasons?.find(({ number }) => number === season.number - 1);\n    if (previousSeason) {\n      return previousSeason.episodes[previousSeason.episodes.length - 1];\n    }\n  }, [item, season, video]);\n\nconst usePrevNextVideos = (item: ItemDetails, season: Season, video: Video) => {\n  const nextVideo = useNextVideo(item, season, video);\n  const previousVideo = usePreviousVideo(item, season, video);\n\n  return [previousVideo, nextVideo] as const;\n};\n\nconst VideoView: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation<{ title: string; item: ItemDetails; video: Video; season: Season }>();\n  const { watchingMarkTimeAsync } = useApiMutation('watchingMarkTime');\n  const [streamingType] = useStorageState<Streaming>('streaming_type');\n  const { item, video, season } = location.state || {};\n\n  const [currentVideo, setCurrentVideo] = useState(video);\n  const [previousVideo, nextVideo] = usePrevNextVideos(item, season, currentVideo);\n\n  const currentVideoLinks = useApi('itemMediaLinks', [currentVideo.id]);\n\n  const saveCurrentTime = useCallback(\n    async ({ number }: Video, currentTime: number) => {\n      await watchingMarkTimeAsync([item.id, currentTime, number, season?.number]);\n    },\n    [watchingMarkTimeAsync, item, season],\n  );\n\n  const playerProps = useMemo<PlayerProps | null>(\n    () =>\n      currentVideoLinks?.data\n        ? {\n            title: getItemTitle(item, currentVideo, season),\n            description: getItemDescription(item, currentVideo, season),\n            poster: item.posters.wide || item.posters.big,\n            audios: mapAudios(currentVideo.audios),\n            sources: mapSources(currentVideoLinks.data.files, streamingType),\n            subtitles: mapSubtitles(currentVideoLinks.data.subtitles),\n            startTime: currentVideo.watching.status === WatchingStatus.Watching ? currentVideo.watching.time : 0,\n          }\n        : null,\n    [item, season, currentVideo, currentVideoLinks?.data, streamingType],\n  );\n\n  const handlePause = useCallback(\n    (currentTime: number) => {\n      saveCurrentTime(currentVideo, currentTime);\n    },\n    [saveCurrentTime, currentVideo],\n  );\n\n  const handleOnEnded = useCallback(\n    (currentTime: number) => {\n      saveCurrentTime(currentVideo, currentTime);\n\n      if (nextVideo) {\n        setCurrentVideo(nextVideo);\n        return;\n      }\n\n      history.goBack();\n    },\n    [saveCurrentTime, history, currentVideo, nextVideo],\n  );\n\n  const handleJumpBackward = useCallback(\n    ({ currentTime }: { currentTime: number }) => {\n      saveCurrentTime(currentVideo, currentTime);\n\n      if (previousVideo) {\n        setCurrentVideo(previousVideo);\n      }\n    },\n    [saveCurrentTime, currentVideo, previousVideo],\n  );\n\n  const handleJumpForward = useCallback(\n    ({ currentTime }: { currentTime: number }) => {\n      saveCurrentTime(currentVideo, currentTime);\n\n      if (nextVideo) {\n        setCurrentVideo(nextVideo);\n      }\n    },\n    [saveCurrentTime, currentVideo, nextVideo],\n  );\n\n  const handleTimeSync = useCallback(\n    async (currentTime: number) => {\n      await saveCurrentTime(currentVideo, currentTime);\n    },\n    [saveCurrentTime, currentVideo],\n  );\n\n  return (\n    <>\n      <Seo title={`Просмотр: ${item.title} - Видео`} />\n      {playerProps && (\n        <Player\n          key={currentVideo.id}\n          {...playerProps}\n          streamingType={streamingType}\n          onPause={handlePause}\n          onEnded={handleOnEnded}\n          onJumpBackward={handleJumpBackward}\n          onJumpForward={handleJumpForward}\n          onTimeSync={handleTimeSync}\n        />\n      )}\n    </>\n  );\n};\n\nexport default VideoView;\n","import { Helmet, HelmetProps } from 'react-helmet';\n\ntype Props = {} & HelmetProps;\n\nconst Seo: React.FC<Props> = (props) => {\n  return <Helmet defaultTitle=\"Unknown\" titleTemplate=\"%s | Kinopub WebOS\" {...props} />;\n};\n\nexport default Seo;\n","import { useMemo } from 'react';\nimport { UseQueryOptions, useQuery } from 'react-query';\n\nimport ApiClient from 'api';\n\ntype Unpromise<T> = T extends Promise<infer U> ? U : T;\n\nexport type Methods = {\n  [method in keyof ApiClient]: ApiClient[method] extends Function ? Unpromise<ReturnType<ApiClient[method]>> : never;\n};\n\nexport type Method = keyof ApiClient & string;\n\nfunction useApi<T extends Method>(\n  method: T,\n  params: Parameters<ApiClient[T]> = [] as Parameters<ApiClient[T]>,\n  options?: UseQueryOptions<Methods[T]>,\n) {\n  const client = useMemo(() => new ApiClient(), []);\n  const query = useQuery<Methods[T]>(\n    [method, ...params],\n    () =>\n      // @ts-expect-error\n      client[method](...params) as Methods[T],\n    options,\n  );\n\n  return query;\n}\n\nexport default useApi;\n","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var _React$useState2 = React.useState(function () {\n    return new Observer(queryClient, defaultedOptions);\n  }),\n      observer = _React$useState2[0];\n\n  var result = observer.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary, observer]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if ((defaultedOptions.suspense || defaultedOptions.useErrorBoundary) && result.isError && !result.isFetching) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = observer.trackResult(result);\n  }\n\n  return result;\n}","import { useEffect, useRef } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  icon?: string;\n  iconOnly?: boolean;\n  autoFocus?: boolean;\n  className?: string;\n} & React.ComponentProps<typeof Spottable>;\n\nconst Button: React.FC<Props> = ({ icon, iconOnly, children, autoFocus, className, ...props }) => {\n  const wrapperRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    let frameId: number;\n\n    if (autoFocus) {\n      frameId = requestAnimationFrame(() => {\n        // @ts-expect-error\n        wrapperRef.current?.node?.focus();\n      });\n    }\n\n    return () => {\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n    };\n  }, [wrapperRef, autoFocus]);\n\n  return (\n    <Spottable\n      {...props}\n      ref={wrapperRef}\n      className={cx('text-gray-200 whitespace-nowrap cursor-pointer rounded px-2 py-1', className)}\n      role=\"button\"\n    >\n      <div className=\"flex items-center\">\n        {icon && <Icon className={cx({ 'mr-2': !iconOnly })} name={icon} />}\n        {!iconOnly && children}\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Button;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.previousSelectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval)) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result) {\n    var _this2 = this;\n\n    var trackedResult = {};\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          var typedKey = key;\n\n          if (!_this2.trackedProps.includes(typedKey)) {\n            _this2.trackedProps.push(typedKey);\n          }\n\n          return result[typedKey];\n        }\n      });\n    });\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(options);\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select) && !this.previousSelectError) {\n          data = prevResult.data;\n        } else {\n          try {\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    if (result === prevResult) {\n      return false;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","import { useCallback, useRef } from 'react';\nimport React from 'react';\nimport cx from 'classnames';\n\nimport Spottable from 'components/spottable';\n\nimport { isKey } from 'utils/keyboard';\n\nexport type CheckboxProps = {\n  defaultChecked?: boolean;\n  checked?: boolean;\n  onChange?: (checked: boolean, e: React.ChangeEvent<HTMLInputElement>) => void;\n  className?: string;\n  type?: string;\n} & Omit<React.HTMLAttributes<HTMLInputElement>, 'onChange'>;\n\nconst Checkbox: React.FC<CheckboxProps> = ({ defaultChecked, checked, onChange, className, children, ...props }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>(\n    (e) => {\n      onChange?.(e.target.checked, e);\n    },\n    [onChange],\n  );\n  const handleKeyPress = useCallback((e: KeyboardEvent) => {\n    if (isKey(e, 'Enter')) {\n      inputRef.current?.click();\n    }\n  }, []);\n\n  return (\n    <Spottable\n      component=\"label\"\n      className={cx('text-gray-200 p-2', className)}\n      // @ts-expect-error\n      onKeyPress={handleKeyPress}\n      role=\"button\"\n    >\n      <div className=\"inline-flex items-center cursor-pointer\">\n        <input\n          type=\"checkbox\"\n          {...props}\n          ref={inputRef}\n          className=\"inline-block w-4 h-4\"\n          defaultChecked={defaultChecked}\n          checked={checked}\n          onChange={handleChange}\n        />\n        <span className=\"inline-block ml-2 whitespace-nowrap\">{children}</span>\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Checkbox;\n","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}","import SpotlightContainerDecorator from '@enact/spotlight/SpotlightContainerDecorator';\n\nexport const CONFIG = {\n  enterTo: 'default-element',\n  defaultElement: '.spottable',\n  selector: '.spottable',\n  overflow: true,\n  preserveId: true,\n};\n\nconst SpotlightContainer = SpotlightContainerDecorator(CONFIG, (props: React.HTMLAttributes<HTMLDivElement>) => <div {...props} />);\n\nexport default SpotlightContainer;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport Spotlight from '@enact/spotlight';\nimport cx from 'classnames';\n\nimport SpotlightContainer from 'components/spotlightContainer';\nimport useButtonEffect, { KeyboardCodesKeys } from 'hooks/useButtonEffect';\n\ntype Props = {\n  visible: boolean;\n  onClose: () => void;\n  closeButton?: KeyboardCodesKeys;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Popup: React.FC<Props> = ({ visible, onClose, className, closeButton = 'Blue', ...props }) => {\n  const containerId = useMemo(() => Spotlight.add({}), []);\n  const handleClose = useCallback(() => {\n    onClose();\n  }, [onClose]);\n\n  const handleCloseIfVisible = useCallback(() => {\n    if (visible) {\n      handleClose();\n\n      return false;\n    }\n  }, [visible, handleClose]);\n\n  const spotPopupContent = useCallback(() => {\n    if (!Spotlight.focus(containerId)) {\n      const current = Spotlight.getCurrent();\n\n      // In cases where the container contains no spottable controls or we're in pointer-mode, focus\n      // cannot inherently set the active container or blur the active control, so we must do that\n      // here.\n      if (current) {\n        // @ts-expect-error\n        current.blur();\n      }\n\n      Spotlight.setActiveContainer(containerId);\n      setTimeout(() => {\n        Spotlight.setPointerMode(false);\n        Spotlight.focus(containerId);\n      }, 500);\n    }\n  }, [containerId]);\n\n  useButtonEffect('Back', handleCloseIfVisible);\n  useButtonEffect(closeButton, handleCloseIfVisible);\n\n  useEffect(() => {\n    if (visible) {\n      spotPopupContent();\n    }\n  }, [visible, spotPopupContent]);\n\n  return (\n    <>\n      <div\n        className={cx('fixed z-999 top-0 left-0 right-0 bottom-0 bg-black bg-opacity-50', {\n          hidden: !visible,\n        })}\n        onClick={handleClose}\n      />\n      <SpotlightContainer\n        {...props}\n        spotlightId={containerId}\n        spotlightRestrict=\"self-only\"\n        spotlightDisabled={!visible}\n        className={cx(\n          'fixed z-999 bottom-0 left-0 right-0 p-4 bg-black ring',\n          {\n            hidden: !visible,\n          },\n          className,\n        )}\n      />\n    </>\n  );\n};\n\nexport default Popup;\n","import React from 'react';\n\nimport Checkbox, { CheckboxProps } from 'components/checkbox';\n\ntype Props = {} & CheckboxProps;\n\nconst Radio: React.FC<Props> = (props) => {\n  return <Checkbox {...props} type=\"radio\" />;\n};\n\nexport default Radio;\n","import filter from 'lodash/filter';\nimport map from 'lodash/map';\nimport orderBy from 'lodash/orderBy';\nimport toUpper from 'lodash/toUpper';\n\nimport { Audio, Streaming, Subtitle } from 'api';\nimport { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\n\nconst formatIdx = (idx: number) => (idx < 10 ? `0${idx}` : idx);\n\nexport function mapAudios(audios: Audio[]): AudioTrack[] {\n  return map(audios, (audio, idx) => ({\n    lang: audio.lang,\n    name: filter([\n      `${formatIdx(idx + 1)}.`,\n      audio.type?.title && audio.author?.title ? `${audio.type?.title}.` : audio.type?.title,\n      audio.author?.title,\n      audio.type?.title || audio.author?.title ? `(${toUpper(audio.lang)})` : toUpper(audio.lang),\n      audio.codec !== 'aac' && toUpper(audio.codec),\n    ]).join(' '),\n  }));\n}\n\nexport function mapSources(\n  files: { url: string | { [key in Streaming]?: string }; quality?: string }[],\n  streamingType?: Streaming,\n): SourceTrack[] {\n  return orderBy(\n    map(files, (file) => {\n      const src = (typeof file.url === 'string' ? file.url : file.url[streamingType!] || file.url.http!) as string;\n\n      return {\n        src,\n        name: file.quality!,\n        type: src.includes('.m3u8') ? 'application/x-mpegURL' : 'video/mp4',\n      };\n    }),\n    ({ name }) => parseInt(name),\n    'desc',\n  );\n}\n\nexport function mapSubtitles(subtitles: Subtitle[]): SubtitleTrack[] {\n  return map(subtitles, (subtitle, idx) => ({\n    src: subtitle.url,\n    lang: subtitle.lang,\n    name: `${toUpper(subtitle.lang)} #${formatIdx(idx + 1)}`,\n  }));\n}\n","class WebVTTConverter {\n  resource: Blob;\n\n  private objectURL?: string;\n\n  constructor(resource: Blob) {\n    this.resource = resource;\n  }\n\n  blobToBuffer() {\n    return new Promise<ArrayBuffer>((resolve, reject) => {\n      const reader = new FileReader();\n      reader.addEventListener('loadend', (event) => {\n        const buf = event.target?.result;\n        resolve(new Uint8Array(buf as ArrayBuffer));\n      });\n      reader.addEventListener('error', () => reject('Error while reading the Blob object'));\n      reader.readAsArrayBuffer(this.resource);\n    });\n  }\n\n  static blobToString(blob: Blob, success: (text: string) => void, fail: () => void) {\n    const reader = new FileReader();\n    reader.addEventListener('loadend', (event) => {\n      const text = event.target?.result;\n      success(text as string);\n    });\n    reader.addEventListener('error', () => fail());\n    reader.readAsText(blob);\n  }\n\n  /**\n   * @param {*} utf8str\n   */\n  static toVTT(utf8str: string) {\n    return utf8str\n      .replace(/\\{\\\\([ibu])\\}/g, '</$1>')\n      .replace(/\\{\\\\([ibu])1\\}/g, '<$1>')\n      .replace(/\\{([ibu])\\}/g, '<$1>')\n      .replace(/\\{\\/([ibu])\\}/g, '</$1>')\n      .replace(/(\\d\\d:\\d\\d:\\d\\d),(\\d\\d\\d)/g, '$1.$2')\n      .concat('\\r\\n\\r\\n');\n  }\n\n  static toTypedArray(str: string) {\n    const result: number[] = [];\n    str.split('').forEach((each) => {\n      result.push(parseInt(`${each.charCodeAt(0)}`, 16));\n    });\n    return Uint8Array.from(result);\n  }\n\n  getURL() {\n    return new Promise<string>((resolve, reject) => {\n      if (!(this.resource instanceof Blob)) return reject('Expecting resource to be a Blob but something else found.');\n      if (!FileReader) return reject('No FileReader constructor found');\n      if (!TextDecoder) return reject('No TextDecoder constructor found');\n      return WebVTTConverter.blobToString(\n        this.resource,\n        (decoded) => {\n          const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n          const text = vttString.concat(WebVTTConverter.toVTT(decoded));\n          const blob = new Blob([text], { type: 'text/vtt' });\n          this.objectURL = URL.createObjectURL(blob);\n\n          return resolve(this.objectURL);\n        },\n        () => {\n          this.blobToBuffer().then((buffer) => {\n            const utf8str = new TextDecoder('utf-8').decode(buffer);\n            const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n            const text = vttString.concat(WebVTTConverter.toVTT(utf8str));\n            const blob = new Blob([text], { type: 'text/vtt' });\n            this.objectURL = URL.createObjectURL(blob);\n\n            return resolve(this.objectURL);\n          });\n        },\n      );\n    });\n  }\n\n  release() {\n    URL.createObjectURL(this.objectURL);\n  }\n}\n\nexport async function convertToVTT(src: string) {\n  const file = await (await fetch(src)).blob();\n  const converter = new WebVTTConverter(file);\n\n  return converter.getURL();\n}\n","import React, { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport cx from 'classnames';\nimport HLS from 'hls.js';\nimport find from 'lodash/find';\nimport forEach from 'lodash/forEach';\nimport uniqBy from 'lodash/uniqBy';\n\nimport { convertToVTT } from 'utils/subtitles';\n\nexport type AudioTrack = {\n  name: string;\n  lang: string;\n};\n\nexport type SourceTrack = {\n  src: string;\n  type: string;\n  name: string;\n};\n\nexport type SubtitleTrack = {\n  src: string;\n  name: string;\n  lang: string;\n};\n\nexport type StreamingType = 'http' | 'hls' | 'hls2' | 'hls4';\n\ntype OwnProps = {\n  autoPlay?: boolean;\n  audioTracks?: AudioTrack[];\n  sourceTracks?: SourceTrack[];\n  subtitleTracks?: SubtitleTrack[];\n  streamingType?: StreamingType;\n  isSettingsOpen?: boolean;\n  onUpdate?: () => void;\n  mediaComponent?: string;\n};\n\nexport type MediaRef = {\n  play: () => Promise<void>;\n  pause: () => void;\n  playPause: () => Promise<void>;\n  load: () => void;\n  currentTime: number;\n  playbackRate: number;\n  audioTracks?: AudioTrack[];\n  audioTrack?: string;\n  sourceTracks?: SourceTrack[];\n  sourceTrack?: string;\n  subtitleTracks?: SubtitleTrack[];\n  subtitleTrack?: string;\n  readonly duration: number;\n  readonly error: boolean;\n  readonly loading: boolean;\n  readonly paused: boolean;\n  readonly proportionLoaded: number;\n  readonly proportionPlayed: number;\n};\n\nfunction useVideoPlayer({ autoPlay, audioTracks, sourceTracks, subtitleTracks, streamingType, isSettingsOpen }: OwnProps) {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const hlsRef = useRef<HLS | null>(null);\n  const startTimeRef = useRef(0);\n  const isSettingsOpenRef = useRef(false);\n  const [currentAudioTrack, setCurrentAudioTrack] = useState<AudioTrack>(audioTracks?.[0]!);\n  const [currentSourceTrack, setCurrentSourceTrack] = useState<SourceTrack>(sourceTracks?.[0]!);\n  const [currentSubtitleTrack, setCurrentSubtitleTrack] = useState<SubtitleTrack | null>(null);\n\n  const getAudioTracks = useCallback(() => (streamingType === 'hls2' ? [] : audioTracks), [audioTracks, streamingType]);\n  const getAudioTrack = useCallback(() => currentAudioTrack?.name, [currentAudioTrack]);\n  const setAudioTrack = useCallback(\n    (audioTrackName: string) => {\n      const audioTrack = audioTracks?.find((audioTrack) => audioTrack.name === audioTrackName);\n      if (audioTrack) {\n        setCurrentAudioTrack(audioTrack);\n      }\n    },\n    [audioTracks],\n  );\n  const getSourceTracks = useCallback(() => uniqBy(sourceTracks, 'src'), [sourceTracks]);\n  const getSourceTrack = useCallback(() => currentSourceTrack?.name, [currentSourceTrack]);\n  const setSourceTrack = useCallback(\n    (sourceTrackName: string) => {\n      const sourceTrack = sourceTracks?.find((sourceTrack) => sourceTrack.name === sourceTrackName);\n      if (sourceTrack) {\n        setCurrentSourceTrack(sourceTrack);\n      }\n    },\n    [sourceTracks],\n  );\n  const getSubtitleTracks = useCallback(() => subtitleTracks, [subtitleTracks]);\n  const getSubtitleTrack = useCallback(() => currentSubtitleTrack?.name, [currentSubtitleTrack]);\n  const setSubtitleTrack = useCallback(\n    (subtitleTrackName?: string) => {\n      const subtitleTrack = subtitleTracks?.find((subtitleTrack) => subtitleTrack.name === subtitleTrackName);\n      setCurrentSubtitleTrack(subtitleTrack || null);\n    },\n    [subtitleTracks],\n  );\n\n  const currentAudioTrackIndex = useMemo(\n    () => audioTracks?.findIndex((audioTrack) => audioTrack.name === currentAudioTrack.name) ?? 0,\n    [audioTracks, currentAudioTrack],\n  );\n  const currentSrc = useMemo(\n    () =>\n      streamingType === 'hls'\n        ? currentSourceTrack?.src.replace(/master-v1a\\d/, `master-v1a${currentAudioTrackIndex + 1}`)\n        : currentSourceTrack?.src,\n    [streamingType, currentAudioTrackIndex, currentSourceTrack?.src],\n  );\n\n  const handleMediaLoaded = useCallback(() => {\n    if (videoRef.current) {\n      videoRef.current.removeEventListener('canplay', handleMediaLoaded);\n\n      // clear existing subtitles\n      while (videoRef.current.firstChild) {\n        // @ts-expect-error\n        videoRef.current.lastChild.track.mode = 'disabled';\n        videoRef.current.removeChild(videoRef.current.lastChild!);\n      }\n\n      if (hlsRef.current) {\n        const audioTrack = find(hlsRef.current.audioTracks, (audioTrack) => audioTrack.name === currentAudioTrack?.name);\n\n        if (audioTrack) {\n          hlsRef.current.audioTrack = audioTrack.id;\n        }\n      } else {\n        // @ts-expect-error\n        forEach(videoRef.current.audioTracks, (audioTrack, idx: number) => {\n          audioTrack.enabled = idx === currentAudioTrackIndex;\n        });\n      }\n\n      if (startTimeRef.current > 0) {\n        videoRef.current.currentTime = startTimeRef.current;\n\n        if (isSettingsOpenRef.current) {\n          videoRef.current.pause();\n        } else {\n          videoRef.current.play();\n        }\n      } else if (autoPlay) {\n        videoRef.current.play();\n      }\n\n      if (currentSubtitleTrack) {\n        const addSubtitleTrack = (src: string) => {\n          if (videoRef.current) {\n            const track = document.createElement('track');\n            videoRef.current.appendChild(track);\n\n            track.src = src;\n            track.kind = 'captions';\n            track.id = currentSubtitleTrack.name;\n            track.label = currentSubtitleTrack.name;\n            track.srclang = currentSubtitleTrack.lang;\n\n            track.track.mode = 'showing';\n          }\n        };\n\n        if (currentSubtitleTrack.src.endsWith('.srt')) {\n          convertToVTT(currentSubtitleTrack.src).then(addSubtitleTrack);\n        } else {\n          addSubtitleTrack(currentSubtitleTrack.src);\n        }\n      }\n    }\n  }, [autoPlay, currentAudioTrackIndex, currentAudioTrack?.name, currentSubtitleTrack]);\n\n  useEffect(() => {\n    if (videoRef.current) {\n      if (currentSrc.includes('.m3u8') && HLS.isSupported()) {\n        const hls = (hlsRef.current = new HLS({\n          enableWebVTT: false,\n          enableCEA708Captions: false,\n        }));\n        hls.attachMedia(videoRef.current);\n        hls.on(HLS.Events.MEDIA_ATTACHED, () => {\n          hls.loadSource(currentSrc);\n        });\n      } else {\n        videoRef.current.src = currentSrc;\n      }\n\n      videoRef.current.addEventListener('canplay', handleMediaLoaded);\n    }\n\n    return () => {\n      if (videoRef.current) {\n        if (videoRef.current.currentTime > 0) {\n          // eslint-disable-next-line\n          startTimeRef.current = videoRef.current.currentTime;\n        }\n        // eslint-disable-next-line\n        videoRef.current.removeEventListener('canplay', handleMediaLoaded);\n      }\n      if (hlsRef.current) {\n        hlsRef.current.destroy();\n        hlsRef.current = null;\n      }\n    };\n  }, [\n    currentSrc,\n    videoRef,\n    startTimeRef,\n    handleMediaLoaded,\n    streamingType,\n    currentAudioTrack,\n    currentSourceTrack,\n    currentSubtitleTrack,\n    currentAudioTrackIndex,\n    audioTracks,\n  ]);\n\n  useEffect(() => {\n    isSettingsOpenRef.current = Boolean(isSettingsOpen);\n  }, [isSettingsOpen]);\n\n  return useMemo(\n    () => ({\n      videoRef: videoRef,\n      getAudioTracks,\n      getAudioTrack,\n      setAudioTrack,\n      getSourceTracks,\n      getSourceTrack,\n      setSourceTrack,\n      getSubtitleTracks,\n      getSubtitleTrack,\n      setSubtitleTrack,\n    }),\n    [\n      videoRef,\n      getAudioTracks,\n      getAudioTrack,\n      setAudioTrack,\n      getSourceTracks,\n      getSourceTrack,\n      setSourceTrack,\n      getSubtitleTracks,\n      getSubtitleTrack,\n      setSubtitleTrack,\n    ],\n  );\n}\n\nfunction useVideoPlayerApi(ref: React.ForwardedRef<MediaRef>, props: OwnProps) {\n  const player = useVideoPlayer(props);\n  const videoRef = player.videoRef;\n\n  const getCurrentTime = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.currentTime;\n    }\n    return 0;\n  }, [videoRef]);\n  const setCurrentTime = useCallback(\n    (currentTime: number) => {\n      if (videoRef.current) {\n        videoRef.current.currentTime = currentTime;\n      }\n    },\n    [videoRef],\n  );\n  const getPlaybackRate = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.playbackRate;\n    }\n    return 1;\n  }, [videoRef]);\n  const setPlaybackRate = useCallback(\n    (playbackRate: number) => {\n      if (videoRef.current) {\n        videoRef.current.playbackRate = playbackRate;\n      }\n    },\n    [videoRef],\n  );\n  const getPaused = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.paused;\n    }\n    return false;\n  }, [videoRef]);\n  const getDuration = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.duration;\n    }\n    return 0;\n  }, [videoRef]);\n  const getError = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.networkState === videoRef.current.NETWORK_NO_SOURCE;\n    }\n    return false;\n  }, [videoRef]);\n  const getLoading = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.readyState < videoRef.current.HAVE_ENOUGH_DATA;\n    }\n    return true;\n  }, [videoRef]);\n  const getProportionLoaded = useCallback(() => {\n    if (videoRef.current) {\n      return (\n        videoRef.current.buffered.length && videoRef.current.buffered.end(videoRef.current.buffered.length - 1) / videoRef.current.duration\n      );\n    }\n    return 0;\n  }, [videoRef]);\n  const getProportionPlayed = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.currentTime / videoRef.current.duration;\n    }\n    return 0;\n  }, [videoRef]);\n  const play = useCallback(async () => {\n    await videoRef.current?.play();\n  }, [videoRef]);\n  const pause = useCallback(() => {\n    videoRef.current?.pause();\n  }, [videoRef]);\n  const playPause = useCallback(async () => {\n    if (getPaused()) {\n      await play();\n    } else {\n      pause();\n    }\n  }, [play, pause, getPaused]);\n  const load = useCallback(() => {\n    videoRef.current?.load();\n  }, [videoRef]);\n\n  const api = useMemo<MediaRef>(\n    () => ({\n      play,\n      pause,\n      playPause,\n      load,\n      get currentTime() {\n        return getCurrentTime();\n      },\n      set currentTime(currentTime) {\n        setCurrentTime(currentTime);\n      },\n      get audioTracks() {\n        return player.getAudioTracks();\n      },\n      get audioTrack() {\n        return player.getAudioTrack();\n      },\n      set audioTrack(audioTrack) {\n        player.setAudioTrack(audioTrack);\n      },\n      get sourceTracks() {\n        return player.getSourceTracks();\n      },\n      get sourceTrack() {\n        return player.getSourceTrack();\n      },\n      set sourceTrack(sourceTrack) {\n        player.setSourceTrack(sourceTrack);\n      },\n      get subtitleTracks() {\n        return player.getSubtitleTracks();\n      },\n      get subtitleTrack() {\n        return player.getSubtitleTrack();\n      },\n      set subtitleTrack(subtitleTrack) {\n        player.setSubtitleTrack(subtitleTrack);\n      },\n      get playbackRate() {\n        return getPlaybackRate();\n      },\n      set playbackRate(playbackRate) {\n        setPlaybackRate(playbackRate);\n      },\n      get paused() {\n        return getPaused();\n      },\n      get duration() {\n        return getDuration();\n      },\n      get error() {\n        return getError();\n      },\n      get loading() {\n        return getLoading();\n      },\n      get proportionLoaded() {\n        return getProportionLoaded();\n      },\n      get proportionPlayed() {\n        return getProportionPlayed();\n      },\n    }),\n    [\n      player,\n      play,\n      pause,\n      playPause,\n      load,\n      getCurrentTime,\n      setCurrentTime,\n      getPlaybackRate,\n      setPlaybackRate,\n      getPaused,\n      getDuration,\n      getError,\n      getLoading,\n      getProportionLoaded,\n      getProportionPlayed,\n    ],\n  );\n\n  useImperativeHandle(ref, () => api, [api]);\n\n  return useMemo(\n    () => ({\n      api,\n      player,\n    }),\n    [api, player],\n  );\n}\n\nconst MEDIA_EVENTS = [\n  'onAbort',\n  'onCanPlay',\n  'onCanPlayThrough',\n  'onDurationChange',\n  'onEmptied',\n  'onEncrypted',\n  'onEnded',\n  'onError',\n  'onLoadedData',\n  'onLoadedMetadata',\n  'onLoadStart',\n  'onPause',\n  'onPlay',\n  'onPlaying',\n  'onProgress',\n  'onRateChange',\n  'onSeeked',\n  'onSeeking',\n  'onStalled',\n  'onSuspend',\n  'onTimeUpdate',\n  'onVolumeChange',\n  'onWaiting',\n] as const;\n\ntype MediaEvents = keyof typeof MEDIA_EVENTS;\n\nexport type MediaProps = OwnProps & React.HTMLAttributes<HTMLVideoElement>;\n\nconst Media = React.forwardRef<MediaRef, MediaProps>(\n  (\n    { autoPlay, audioTracks, sourceTracks, subtitleTracks, streamingType, isSettingsOpen, onUpdate, className, mediaComponent, ...props },\n    ref,\n  ) => {\n    const handleUpdate = useCallback(() => {\n      onUpdate?.();\n    }, [onUpdate]);\n    const eventProps = useMemo(\n      () =>\n        MEDIA_EVENTS.reduce<Partial<Record<MediaEvents, Function>>>(\n          (result, event) => ({\n            ...result,\n            [event]: (...args: any[]) => {\n              handleUpdate();\n              // @ts-expect-error\n              props[event]?.(...args);\n            },\n          }),\n          {},\n        ),\n      [props, handleUpdate],\n    );\n    const { player } = useVideoPlayerApi(ref, { autoPlay, audioTracks, sourceTracks, subtitleTracks, streamingType, isSettingsOpen });\n\n    return <video {...props} {...eventProps} autoPlay={false} className={cx('w-screen h-screen', className)} ref={player.videoRef} />;\n  },\n);\n\nexport default Media;\n","import { useCallback, useEffect, useState } from 'react';\nimport { VideoPlayerBase } from '@enact/moonstone/VideoPlayer';\nimport map from 'lodash/map';\n\nimport { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\nimport Popup from 'components/popup';\nimport Radio from 'components/radio';\nimport Text from 'components/text';\n\nconst NONE = 'NONE';\n\ntype Props = {\n  visible: boolean;\n  onClose: () => void;\n  player: React.MutableRefObject<VideoPlayerBase | undefined>;\n};\n\nconst Settings: React.FC<Props> = ({ visible, onClose, player }) => {\n  const [isOpen, setIsOpen] = useState(visible);\n  const [audios, setAudios] = useState<AudioTrack[]>([]);\n  const [currentAudio, setCurrentAudio] = useState<string | null>(null);\n  const [sources, setSources] = useState<SourceTrack[]>([]);\n  const [currentSource, setCurrentSource] = useState<string | null>(null);\n  const [subtitles, setSubtitles] = useState<SubtitleTrack[]>([]);\n  const [currentSubtitle, setCurrentSubtitle] = useState<string | null>(null);\n\n  const handleVideoUpdate = useCallback(\n    (name: string, value: string) => {\n      if (player.current) {\n        const video: any = player.current.getVideoNode();\n\n        video[name] = value;\n      }\n    },\n    [player],\n  );\n\n  const handleAudioChange = useCallback(\n    (audio: string) => () => {\n      setCurrentAudio(audio);\n      handleVideoUpdate('audioTrack', audio);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSourceChange = useCallback(\n    (source: string) => () => {\n      setCurrentSource(source);\n      handleVideoUpdate('sourceTrack', source);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSubtitleChange = useCallback(\n    (subtitle: string) => () => {\n      setCurrentSubtitle(subtitle);\n      handleVideoUpdate('subtitleTrack', subtitle);\n    },\n    [handleVideoUpdate],\n  );\n\n  const handleClose = useCallback(() => {\n    onClose();\n  }, [onClose]);\n\n  useEffect(() => {\n    if (visible && player.current) {\n      const video: any = player.current.getVideoNode();\n      const { audioTracks, audioTrack, sourceTracks, sourceTrack, subtitleTracks, subtitleTrack } = video;\n\n      if (audioTracks?.length > 1 || sourceTracks?.length > 1 || subtitleTracks?.length > 0) {\n        setAudios(audioTracks);\n        setCurrentAudio(audioTrack);\n\n        setSources(sourceTracks);\n        setCurrentSource(sourceTrack);\n\n        setSubtitles(subtitleTracks);\n        setCurrentSubtitle(subtitleTrack);\n      } else {\n        handleClose();\n      }\n    }\n  }, [visible, player, handleClose]);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n\n    if (visible) {\n      timeoutId = setTimeout(() => {\n        setIsOpen(true);\n      }, 100);\n    } else {\n      setIsOpen(false);\n    }\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [visible]);\n\n  return (\n    <Popup visible={isOpen} onClose={handleClose}>\n      <div className=\"flex flex-col\">\n        {audios?.length > 1 && (\n          <div className=\"flex flex-col py-4\">\n            <Text>Звук</Text>\n\n            <div className=\"flex flex-wrap mt-2\">\n              {map(audios, ({ name: audio }) => (\n                <div key={audio} className=\"w-1/2\">\n                  <Radio checked={audio === currentAudio} onChange={handleAudioChange(audio)}>\n                    {audio}\n                  </Radio>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n        {sources?.length > 1 && (\n          <div className=\"flex flex-col py-4\">\n            <Text>Качество</Text>\n\n            <div className=\"flex flex-wrap mt-2\">\n              {map(sources, ({ name: source }) => (\n                <div key={source} className=\"w-1/6\">\n                  <Radio checked={source === currentSource} onChange={handleSourceChange(source)}>\n                    {source}\n                  </Radio>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n        {subtitles?.length > 0 && (\n          <div className=\"flex flex-col py-4\">\n            <Text>Субтитры</Text>\n\n            <div className=\"flex flex-wrap mt-2\">\n              <div className=\"w-1/6\">\n                <Radio checked={!currentSubtitle || currentSubtitle === NONE} onChange={handleSubtitleChange(NONE)}>\n                  Нет\n                </Radio>\n              </div>\n\n              {map(subtitles, ({ name: subtitle }) => (\n                <div key={subtitle} className=\"w-1/6\">\n                  <Radio checked={subtitle === currentSubtitle} onChange={handleSubtitleChange(subtitle)}>\n                    {subtitle}\n                  </Radio>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </Popup>\n  );\n};\n\nexport default Settings;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { VideoPlayerBase } from '@enact/moonstone/VideoPlayer';\n\nimport Button from 'components/button';\n\ntype Props = {\n  player: React.MutableRefObject<VideoPlayerBase | undefined>;\n  startTime?: number;\n  startInDelay?: number;\n};\n\nconst StartFrom: React.FC<Props> = ({ startTime, startInDelay = 5, player }) => {\n  const [visible, setVisible] = useState(true);\n  const [startIn, setStartIn] = useState(startInDelay);\n  const startFrom = useMemo(() => new Date((startTime || 0) * 1000).toISOString().substr(11, 8).replace(/^00:/, ''), [startTime]);\n\n  const handleStartFromClick = useCallback(() => {\n    if (player.current) {\n      setVisible(false);\n      const video: any = player.current.getVideoNode();\n\n      video.currentTime = startTime;\n    }\n  }, [startTime, player]);\n  const handleStartFromBeginingClick = useCallback(() => {\n    setVisible(false);\n  }, []);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n\n    if (visible) {\n      intervalId = setInterval(() => {\n        setStartIn((prevStartIn) => {\n          const newStartIn = prevStartIn - 1;\n\n          if (newStartIn <= 0) {\n            handleStartFromClick();\n          }\n\n          return newStartIn;\n        });\n      }, 1000);\n    }\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [visible, handleStartFromClick]);\n\n  if (!startTime || !visible) {\n    return null;\n  }\n\n  return (\n    <div className=\"flex justify-center absolute w-full z-101 bottom-32\">\n      <Button onClick={handleStartFromClick}>\n        Смотреть с {startFrom} через {startIn}\n      </Button>\n      <Button autoFocus onClick={handleStartFromBeginingClick}>\n        Смотреть с начала\n      </Button>\n    </div>\n  );\n};\n\nexport default StartFrom;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport VideoPlayer, { VideoPlayerBase, VideoPlayerBaseProps } from '@enact/moonstone/VideoPlayer';\n\nimport Button from 'components/button';\nimport Media, { AudioTrack, SourceTrack, StreamingType, SubtitleTrack } from 'components/media';\nimport Text from 'components/text';\nimport useButtonEffect from 'hooks/useButtonEffect';\n\nimport Settings from './settings';\nimport StartFrom from './startFrom';\n\nexport type PlayerProps = {\n  title: string;\n  description?: string;\n  poster: string;\n  audios?: AudioTrack[];\n  sources: SourceTrack[];\n  subtitles?: SubtitleTrack[];\n  startTime?: number;\n  timeSyncInterval?: number;\n  streamingType?: StreamingType;\n  onPlay?: () => void;\n  onPause?: (currentTime: number) => void;\n  onEnded?: (currentTime: number) => void;\n  onTimeSync?: (currentTime: number) => void | Promise<void>;\n} & VideoPlayerBaseProps;\n\nconst Player: React.FC<PlayerProps> = ({\n  title,\n  description,\n  poster,\n  audios,\n  sources,\n  subtitles,\n  startTime,\n  timeSyncInterval = 30,\n  streamingType,\n  onPlay,\n  onPause,\n  onEnded,\n  onTimeSync,\n  ...props\n}) => {\n  const playerRef = useRef<VideoPlayerBase>();\n  const [isPaused, setIsPaused] = useState(true);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n\n  const handlePlay = useCallback(() => {\n    setIsPaused(false);\n    onPlay?.();\n  }, [onPlay]);\n  const handlePause = useCallback(\n    (e) => {\n      setIsPaused(true);\n      onPause?.(e.currentTime);\n    },\n    [onPause],\n  );\n  const handleEnded = useCallback(\n    (e) => {\n      onEnded?.(e.target.currentTime);\n    },\n    [onEnded],\n  );\n  const handleTimeSync = useCallback(async () => {\n    if (playerRef.current && onTimeSync) {\n      const video: any = playerRef.current.getVideoNode();\n\n      const currentTime = video['currentTime'];\n\n      await onTimeSync(currentTime);\n    }\n  }, [onTimeSync, playerRef]);\n  const handleLoadedMetadata = useCallback(() => {\n    setIsLoaded(true);\n  }, []);\n  const handleSettingsOpen = useCallback(() => {\n    if (playerRef.current) {\n      setIsSettingsOpen(true);\n\n      const video: any = playerRef.current.getVideoNode();\n      video.pause();\n    }\n  }, [playerRef]);\n  const handleSettingsClose = useCallback(() => {\n    if (playerRef.current) {\n      setIsSettingsOpen(false);\n\n      const video: any = playerRef.current.getVideoNode();\n      video.play();\n    }\n  }, []);\n  const handlePauseButton = useCallback(() => {\n    if (playerRef.current) {\n      const video: any = playerRef.current.getVideoNode();\n      video.pause();\n    }\n  }, [playerRef]);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n\n    if (isPaused) {\n      timeoutId = setTimeout(() => {\n        setIsPaused(false);\n      }, 5 * 1000);\n    }\n\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [isPaused]);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n\n    if (onTimeSync) {\n      intervalId = setInterval(handleTimeSync, timeSyncInterval * 1000);\n    }\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [timeSyncInterval, onTimeSync, handleTimeSync]);\n\n  useButtonEffect('Back', handleTimeSync);\n  useButtonEffect('Blue', handleSettingsOpen);\n  useButtonEffect('Play', handleSettingsClose);\n  useButtonEffect('Pause', handlePauseButton);\n  useButtonEffect('ArrowUp', handleSettingsOpen);\n\n  return (\n    <>\n      <Settings visible={isSettingsOpen} onClose={handleSettingsClose} player={playerRef} />\n      {isPaused && <Text className=\"absolute z-10 top-0 p-4\">{title}</Text>}\n      {isPaused && (\n        <Button className=\"absolute z-101 bottom-8 right-10 text-blue-600\" icon=\"settings\" iconOnly onClick={handleSettingsOpen} />\n      )}\n      {isLoaded && startTime! > 0 && <StartFrom startTime={startTime} player={playerRef} />}\n\n      <VideoPlayer\n        {...props}\n        //@ts-expect-error\n        ref={playerRef}\n        poster={poster}\n        title={description}\n        onPlay={handlePlay}\n        onPause={handlePause}\n        onEnded={handleEnded}\n        onLoadedMetadata={handleLoadedMetadata}\n        streamingType={streamingType}\n        isSettingsOpen={isSettingsOpen}\n        audioTracks={audios}\n        sourceTracks={sources}\n        subtitleTracks={subtitles}\n        videoComponent={<Media />}\n      />\n    </>\n  );\n};\n\nexport default Player;\n","import { ItemDetails, Season, Video } from 'api';\n\nexport function getItemTitle(item?: ItemDetails, video?: Video, season?: Season) {\n  const title = item?.title || '';\n\n  return season ? `${title} (s${season.number}e${video?.number || 1})` : title;\n}\n\nexport function getItemDescription(item?: ItemDetails, video?: Video, season?: Season) {\n  const title = video?.title || '';\n\n  return season ? `${title} (s${season.number}e${video?.number || 1})` : title;\n}\n"],"sourceRoot":""}