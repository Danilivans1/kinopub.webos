{"version":3,"sources":["views/collection/collection.tsx","hooks/useInViewport.ts","components/scrollable/scrollable.tsx","components/imageItem/imageItem.tsx","hooks/useApi.ts","../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../node_modules/react-query/es/react/useBaseQuery.js","components/videoItem/videoItem.tsx","components/itemsList/itemsList.tsx","../node_modules/react-query/es/core/queryObserver.js","../node_modules/react-query/es/react/useQuery.js"],"names":["CollectionView","collectionId","useParams","useApi","data","isLoading","title","collection","items","loading","useInViewport","target","props","options","config","disconnectOnLeave","onEnterViewport","onLeaveViewport","useState","forceUpdate","observer","useRef","inViewportRef","intersected","enterCountRef","leaveCountRef","startObserver","useCallback","current","node","findDOMNode","observe","stopObserver","unobserve","disconnect","handleIntersection","entries","entry","isIntersecting","intersectionRatio","isInViewport","initIntersectionObserver","IntersectionObserver","useEffect","inViewport","enterCount","leaveCount","Scrollable","children","className","onScrollToEnd","footerRef","cx","ref","ImageItem","wrapperClassName","source","caption","src","alt","method","params","client","useMemo","ApiClient","query","useQuery","createValue","_isReset","clearReset","reset","isReset","QueryErrorResetBoundaryContext","React","createContext","useBaseQuery","Observer","mountedRef","queryClient","useQueryClient","errorResetBoundary","useContext","defaultedOptions","defaultQueryObserverOptions","optimisticResults","onError","notifyManager","batchCalls","onSuccess","onSettled","suspense","staleTime","useErrorBoundary","retryOnMount","result","getOptimisticResult","unsubscribe","subscribe","x","updateResult","setOptions","listeners","fetchOptimistic","then","_ref","catch","error","undefined","isError","isFetching","notifyOnChangeProps","trackResult","VideoItem","item","history","useHistory","split","handleOnClick","id","push","generatePath","PATHS","Item","itemId","onClick","posters","medium","new","ItemsList","scrollable","content","map","Array","_","idx","QueryObserver","_Subscribable","_this","call","this","trackedProps","previousSelectError","bindMethods","_inheritsLoose","_proto","prototype","remove","bind","refetch","onSubscribe","length","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","shouldFetchOnReconnect","enabled","refetchOnReconnect","isStale","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearTimers","removeObserver","notifyOptions","prevOptions","prevQuery","Error","queryKey","updateQuery","mounted","hasListeners","shouldFetchOptionally","updateStaleTimeout","refetchInterval","updateRefetchInterval","getQueryCache","build","createResult","getCurrentResult","currentResult","_this2","trackedResult","Object","keys","forEach","key","defineProperty","configurable","enumerable","get","typedKey","includes","getNextResult","_this3","Promise","resolve","reject","throwOnError","getCurrentQuery","fetch","_this4","fetchOptions","_this5","promise","noop","_this6","clearStaleTimeout","isServer","isValidTimeout","timeout","timeUntilStale","dataUpdatedAt","staleTimeoutId","setTimeout","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","clearInterval","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","state","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","status","isPreviousData","isPlaceholderData","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","isSuccess","select","structuralSharing","replaceEqualDeep","selectError","getLogger","Date","now","placeholderData","isIdle","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangePropsExclusions","includedProps","some","changed","isIncluded","isExcluded","shallowEqualObjects","defaultNotifyOptions","cache","notify","_extends","onQueryUpdate","action","type","isCancelledError","_this8","batch","listener","Subscribable","shouldLoadOnMount","refetchOnMount","shouldRefetchOnMount","isStaleByTime","arg1","arg2","arg3","parsedOptions","parseQueryArgs"],"mappings":"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","file":"static/js/11.f0b670df.chunk.js","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport ItemsList from 'components/itemsList';\nimport useApi from 'hooks/useApi';\nimport { RouteParams } from 'routes';\n\nconst CollectionView: React.FC = () => {\n  const { collectionId } = useParams<RouteParams>();\n  const { data, isLoading } = useApi('collectionItems', [collectionId!]);\n\n  return <ItemsList title={data?.collection.title} items={data?.items} loading={isLoading} />;\n};\n\nexport default CollectionView;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { findDOMNode } from 'react-dom';\n\ntype Props = {\n  onEnterViewport?: () => void;\n  onLeaveViewport?: () => void;\n};\n\nconst useInViewport = (\n  target: React.MutableRefObject<React.ReactInstance | null | undefined>,\n  props: Props,\n  options?: IntersectionObserverInit,\n  config = { disconnectOnLeave: false },\n) => {\n  const { onEnterViewport, onLeaveViewport } = props;\n  const [, forceUpdate] = useState();\n\n  const observer = useRef<IntersectionObserver | null>(null);\n\n  const inViewportRef = useRef(false);\n  const intersected = useRef(false);\n\n  const enterCountRef = useRef(0);\n  const leaveCountRef = useRef(0);\n\n  const startObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.observe(node);\n      }\n    }\n  }, [target, observer]);\n\n  const stopObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.unobserve(node);\n        observer.current.disconnect();\n        observer.current = null;\n      }\n    }\n  }, [target, observer]);\n\n  const handleIntersection = useCallback(\n    (entries) => {\n      const entry = entries[0] || {};\n      const { isIntersecting, intersectionRatio } = entry;\n      const isInViewport = typeof isIntersecting !== 'undefined' ? isIntersecting : intersectionRatio > 0;\n\n      // enter\n      if (!intersected.current && isInViewport) {\n        intersected.current = true;\n\n        onEnterViewport?.();\n\n        enterCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n\n        return;\n      }\n\n      // leave\n      if (intersected.current && !isInViewport) {\n        intersected.current = false;\n\n        onLeaveViewport?.();\n\n        if (config.disconnectOnLeave && observer.current) {\n          // disconnect obsever on leave\n          observer.current.disconnect();\n        }\n\n        leaveCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n      }\n    },\n    [observer, config.disconnectOnLeave, onEnterViewport, onLeaveViewport],\n  );\n\n  const initIntersectionObserver = useCallback(() => {\n    if (!observer.current) {\n      observer.current = new IntersectionObserver(handleIntersection, options);\n    }\n  }, [observer, options, handleIntersection]);\n\n  useEffect(() => {\n    initIntersectionObserver();\n    startObserver();\n\n    return () => {\n      stopObserver();\n    };\n  }, [initIntersectionObserver, startObserver, stopObserver]);\n\n  return {\n    inViewport: inViewportRef.current,\n    enterCount: enterCountRef.current,\n    leaveCount: leaveCountRef.current,\n  };\n};\n\nexport default useInViewport;\n","import { useRef } from 'react';\nimport cx from 'classnames';\n\nimport useInViewport from 'hooks/useInViewport';\n\ntype Props = {\n  onScrollToEnd?: () => void;\n  className?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Scrollable: React.FC<Props> = ({ children, className, onScrollToEnd, ...props }) => {\n  const footerRef = useRef<HTMLDivElement>(null);\n\n  useInViewport(footerRef, { onEnterViewport: onScrollToEnd });\n\n  return (\n    <div className={cx('overflow-y-auto h-full', className)} {...props}>\n      {children}\n      <div className=\"h-40\" ref={footerRef} />\n    </div>\n  );\n};\n\nexport default Scrollable;\n","import cx from 'classnames';\n\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  className?: string;\n  wrapperClassName?: string;\n  source?: string;\n  caption?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst ImageItem: React.FC<Props> = ({ className, wrapperClassName, source, caption, children, ...props }) => {\n  return (\n    <Spottable {...props} className={cx('rounded-xl w-1/5', wrapperClassName)}>\n      <div className={cx('h-40 m-1 flex flex-col relative overflow-hidden cursor-pointer', className)}>\n        <img\n          loading=\"lazy\"\n          className=\"w-full h-full object-cover rounded-xl border-2 border-gray-300 bg-gray-300\"\n          src={source}\n          alt={caption}\n        />\n        <div className=\"px-2\">\n          <p className=\"text-primary text-sm text-center overflow-hidden whitespace-nowrap\">{caption}</p>\n        </div>\n\n        {children}\n      </div>\n    </Spottable>\n  );\n};\n\nexport default ImageItem;\n","import { useMemo } from 'react';\nimport { UseQueryOptions, useQuery } from 'react-query';\n\nimport ApiClient from 'api';\n\ntype Unpromise<T> = T extends Promise<infer U> ? U : T;\n\nexport type Methods = {\n  [method in keyof ApiClient]: ApiClient[method] extends Function ? Unpromise<ReturnType<ApiClient[method]>> : never;\n};\n\nexport type Method = keyof ApiClient & string;\n\nfunction useApi<T extends Method>(\n  method: T,\n  params: Parameters<ApiClient[T]> = [] as Parameters<ApiClient[T]>,\n  options?: UseQueryOptions<Methods[T]>,\n) {\n  const client = useMemo(() => new ApiClient(), []);\n  const query = useQuery<Methods[T]>(\n    [method, ...params],\n    () =>\n      // @ts-expect-error\n      client[method](...params) as Methods[T],\n    options,\n  );\n\n  return query;\n}\n\nexport default useApi;\n","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var _React$useState2 = React.useState(function () {\n    return new Observer(queryClient, defaultedOptions);\n  }),\n      observer = _React$useState2[0];\n\n  var result = observer.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary, observer]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if ((defaultedOptions.suspense || defaultedOptions.useErrorBoundary) && result.isError && !result.isFetching) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = observer.trackResult(result);\n  }\n\n  return result;\n}","import { useCallback, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport cx from 'classnames';\n\nimport { Item } from 'api';\nimport ImageItem from 'components/imageItem';\nimport { PATHS, generatePath } from 'routes';\n\ntype Props = {\n  item?: Item;\n  className?: string;\n};\n\nconst VideoItem: React.FC<Props> = ({ item, className }) => {\n  const history = useHistory();\n  const title = useMemo(() => item?.title?.split('/')[0], [item?.title]);\n\n  const handleOnClick = useCallback(() => {\n    if (item?.id) {\n      history.push(\n        generatePath(PATHS.Item, {\n          itemId: item.id,\n        }),\n      );\n    }\n  }, [item?.id, history]);\n\n  return (\n    <ImageItem onClick={handleOnClick} source={item?.posters.medium} caption={title} className={cx('h-72', className)}>\n      {item?.new && (\n        <div className=\"absolute bg-red-600 border-gray-300 border-t-2 border-r-2 text-primary px-2 py-1 rounded-bl rounded-tr-xl top-0 right-0\">\n          {item?.new}\n        </div>\n      )}\n    </ImageItem>\n  );\n};\n\nexport default VideoItem;\n","import React from 'react';\nimport cx from 'classnames';\nimport map from 'lodash/map';\n\nimport { Item } from 'api';\nimport Scrollable from 'components/scrollable';\nimport Text from 'components/text';\nimport VideoItem from 'components/videoItem';\n\ntype Props = {\n  title?: string;\n  items?: Item[];\n  loading?: boolean;\n  onScrollToEnd?: () => void;\n  scrollable?: boolean;\n  className?: string;\n};\n\nconst ItemsList: React.FC<Props> = ({ title, items, loading, onScrollToEnd, scrollable = true, className }) => {\n  const content = (\n    <div>\n      {title && <Text className=\"m-1 mb-3\">{title}</Text>}\n      <div className={cx('flex flex-wrap', className)}>\n        {map(items, (item) => (\n          <VideoItem key={item.id} item={item} />\n        ))}\n        {loading && map([...new Array(15)], (_, idx) => <VideoItem key={idx} />)}\n      </div>\n    </div>\n  );\n\n  return scrollable ? <Scrollable onScrollToEnd={onScrollToEnd}>{content}</Scrollable> : content;\n};\n\nexport default ItemsList;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.previousSelectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval)) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result) {\n    var _this2 = this;\n\n    var trackedResult = {};\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          var typedKey = key;\n\n          if (!_this2.trackedProps.includes(typedKey)) {\n            _this2.trackedProps.push(typedKey);\n          }\n\n          return result[typedKey];\n        }\n      });\n    });\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(options);\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select) && !this.previousSelectError) {\n          data = prevResult.data;\n        } else {\n          try {\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    if (result === prevResult) {\n      return false;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}"],"sourceRoot":""}