{"version":3,"sources":["../node_modules/lodash/sumBy.js","../node_modules/lodash/_baseSum.js","views/watching/watching.tsx","components/seo/seo.tsx","hooks/useInViewport.ts","components/scrollable/scrollable.tsx","components/title/title.tsx","components/imageItem/imageItem.tsx","hooks/useApi.ts","../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../node_modules/react-query/es/react/useBaseQuery.js","components/videoItem/videoItem.tsx","components/itemsList/itemsList.tsx","../node_modules/react-query/es/core/queryObserver.js","../node_modules/react-query/es/react/useQuery.js"],"names":["baseIteratee","require","baseSum","module","exports","array","iteratee","length","result","index","current","undefined","WatchingView","useApi","Bool","True","data","isLoading","total","useMemo","sumBy","items","item","new","seoTitle","title","loading","Seo","props","Helmet","defaultTitle","titleTemplate","useInViewport","target","options","config","disconnectOnLeave","onEnterViewport","onLeaveViewport","useState","forceUpdate","observer","useRef","inViewportRef","intersected","enterCountRef","leaveCountRef","startObserver","useCallback","node","findDOMNode","observe","stopObserver","unobserve","disconnect","handleIntersection","entries","entry","isIntersecting","intersectionRatio","isInViewport","initIntersectionObserver","IntersectionObserver","useEffect","inViewport","enterCount","leaveCount","Scrollable","children","className","onScrollToEnd","footerRef","cx","ref","Title","ImageItem","wrapperClassName","source","caption","src","alt","method","params","client","ApiClient","query","useQuery","createValue","_isReset","clearReset","reset","isReset","QueryErrorResetBoundaryContext","React","createContext","useBaseQuery","Observer","mountedRef","queryClient","useQueryClient","errorResetBoundary","useContext","defaultedOptions","defaultQueryObserverOptions","optimisticResults","onError","notifyManager","batchCalls","onSuccess","onSettled","suspense","staleTime","useErrorBoundary","retryOnMount","getOptimisticResult","unsubscribe","subscribe","x","updateResult","setOptions","listeners","fetchOptimistic","then","_ref","catch","error","isError","isFetching","notifyOnChangeProps","trackResult","VideoItem","history","useHistory","split","handleOnClick","id","push","generatePath","PATHS","Item","itemId","onClick","posters","medium","ItemsList","scrollable","content","map","Array","_","idx","QueryObserver","_Subscribable","_this","call","this","trackedProps","previousSelectError","bindMethods","_inheritsLoose","_proto","prototype","remove","bind","refetch","onSubscribe","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","shouldFetchOnReconnect","enabled","refetchOnReconnect","isStale","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearTimers","removeObserver","notifyOptions","prevOptions","prevQuery","Error","queryKey","updateQuery","mounted","hasListeners","shouldFetchOptionally","updateStaleTimeout","refetchInterval","updateRefetchInterval","getQueryCache","build","createResult","getCurrentResult","currentResult","_this2","trackedResult","Object","keys","forEach","key","defineProperty","configurable","enumerable","get","typedKey","includes","getNextResult","_this3","Promise","resolve","reject","throwOnError","getCurrentQuery","fetch","_this4","fetchOptions","_this5","promise","noop","_this6","clearStaleTimeout","isServer","isValidTimeout","timeout","timeUntilStale","dataUpdatedAt","staleTimeoutId","setTimeout","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","clearInterval","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","state","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","status","isPreviousData","isPlaceholderData","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","isSuccess","select","structuralSharing","replaceEqualDeep","selectError","getLogger","Date","now","placeholderData","isIdle","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangePropsExclusions","includedProps","some","changed","isIncluded","isExcluded","shallowEqualObjects","defaultNotifyOptions","cache","notify","_extends","onQueryUpdate","action","type","isCancelledError","_this8","batch","listener","Subscribable","shouldLoadOnMount","refetchOnMount","shouldRefetchOnMount","isStaleByTime","arg1","arg2","arg3","parsedOptions","parseQueryArgs"],"mappings":"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","file":"static/js/12.b47bdc4c.chunk.js","sourcesContent":["var baseIteratee = require('./_baseIteratee'),\n    baseSum = require('./_baseSum');\n\n/**\n * This method is like `_.sum` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the value to be summed.\n * The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the sum.\n * @example\n *\n * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n *\n * _.sumBy(objects, function(o) { return o.n; });\n * // => 20\n *\n * // The `_.property` iteratee shorthand.\n * _.sumBy(objects, 'n');\n * // => 20\n */\nfunction sumBy(array, iteratee) {\n  return (array && array.length)\n    ? baseSum(array, baseIteratee(iteratee, 2))\n    : 0;\n}\n\nmodule.exports = sumBy;\n","/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseSum;\n","import React, { useMemo } from 'react';\nimport sumBy from 'lodash/sumBy';\n\nimport { Bool } from 'api';\nimport ItemsList from 'components/itemsList';\nimport Seo from 'components/seo';\nimport useApi from 'hooks/useApi';\n\nconst WatchingView: React.FC = () => {\n  const { data, isLoading } = useApi('watchingSerials', [Bool.True]);\n  const total = useMemo(() => sumBy(data?.items, (item) => +(item.new || 0)), [data?.items]);\n  const seoTitle = 'Новые эпизоды';\n  const title = total ? `${seoTitle} (${total})` : seoTitle;\n\n  return (\n    <>\n      <Seo title={seoTitle} />\n      <ItemsList title={title} items={data?.items} loading={isLoading} />\n    </>\n  );\n};\n\nexport default WatchingView;\n","import { Helmet, HelmetProps } from 'react-helmet';\n\ntype Props = {} & HelmetProps;\n\nconst Seo: React.FC<Props> = (props) => {\n  return <Helmet defaultTitle=\"Unknown\" titleTemplate=\"%s | Kinopub WebOS\" {...props} />;\n};\n\nexport default Seo;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { findDOMNode } from 'react-dom';\n\ntype Props = {\n  onEnterViewport?: () => void;\n  onLeaveViewport?: () => void;\n};\n\nconst useInViewport = (\n  target: React.MutableRefObject<React.ReactInstance | null | undefined>,\n  props: Props,\n  options?: IntersectionObserverInit,\n  config = { disconnectOnLeave: false },\n) => {\n  const { onEnterViewport, onLeaveViewport } = props;\n  const [, forceUpdate] = useState();\n\n  const observer = useRef<IntersectionObserver | null>(null);\n\n  const inViewportRef = useRef(false);\n  const intersected = useRef(false);\n\n  const enterCountRef = useRef(0);\n  const leaveCountRef = useRef(0);\n\n  const startObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.observe(node);\n      }\n    }\n  }, [target, observer]);\n\n  const stopObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.unobserve(node);\n        observer.current.disconnect();\n        observer.current = null;\n      }\n    }\n  }, [target, observer]);\n\n  const handleIntersection = useCallback(\n    (entries) => {\n      const entry = entries[0] || {};\n      const { isIntersecting, intersectionRatio } = entry;\n      const isInViewport = typeof isIntersecting !== 'undefined' ? isIntersecting : intersectionRatio > 0;\n\n      // enter\n      if (!intersected.current && isInViewport) {\n        intersected.current = true;\n\n        onEnterViewport?.();\n\n        enterCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n\n        return;\n      }\n\n      // leave\n      if (intersected.current && !isInViewport) {\n        intersected.current = false;\n\n        onLeaveViewport?.();\n\n        if (config.disconnectOnLeave && observer.current) {\n          // disconnect obsever on leave\n          observer.current.disconnect();\n        }\n\n        leaveCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n      }\n    },\n    [observer, config.disconnectOnLeave, onEnterViewport, onLeaveViewport],\n  );\n\n  const initIntersectionObserver = useCallback(() => {\n    if (!observer.current) {\n      observer.current = new IntersectionObserver(handleIntersection, options);\n    }\n  }, [observer, options, handleIntersection]);\n\n  useEffect(() => {\n    initIntersectionObserver();\n    startObserver();\n\n    return () => {\n      stopObserver();\n    };\n  }, [initIntersectionObserver, startObserver, stopObserver]);\n\n  return {\n    inViewport: inViewportRef.current,\n    enterCount: enterCountRef.current,\n    leaveCount: leaveCountRef.current,\n  };\n};\n\nexport default useInViewport;\n","import { useRef } from 'react';\nimport cx from 'classnames';\n\nimport useInViewport from 'hooks/useInViewport';\n\ntype Props = {\n  onScrollToEnd?: () => void;\n  className?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Scrollable: React.FC<Props> = ({ children, className, onScrollToEnd, ...props }) => {\n  const footerRef = useRef<HTMLDivElement>(null);\n\n  useInViewport(footerRef, { onEnterViewport: onScrollToEnd });\n\n  return (\n    <div className={cx('overflow-y-auto h-full', className)} {...props}>\n      {children}\n      <div className=\"h-40\" ref={footerRef} />\n    </div>\n  );\n};\n\nexport default Scrollable;\n","import cx from 'classnames';\n\nimport Text from 'components/text';\n\ntype Props = {\n  title?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Title: React.FC<Props> = ({ title, className, ...props }) => {\n  if (!title) {\n    return null;\n  }\n\n  return (\n    <Text {...props} className={cx('m-1 mb-3', className)}>\n      {title}\n    </Text>\n  );\n};\n\nexport default Title;\n","import cx from 'classnames';\n\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  className?: string;\n  wrapperClassName?: string;\n  source?: string;\n  caption?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst ImageItem: React.FC<Props> = ({ className, wrapperClassName, source, caption, children, ...props }) => {\n  return (\n    <Spottable {...props} className={cx('rounded-xl w-1/5', wrapperClassName)}>\n      <div className={cx('h-40 m-1 flex flex-col relative overflow-hidden cursor-pointer', className)}>\n        <img\n          loading=\"lazy\"\n          className=\"w-full h-full object-cover rounded-xl border-2 border-gray-300 bg-gray-300\"\n          src={source}\n          alt={caption}\n        />\n        <div className=\"px-2\">\n          <p className=\"text-gray-200 text-sm text-center overflow-hidden whitespace-nowrap\">{caption}</p>\n        </div>\n\n        {children}\n      </div>\n    </Spottable>\n  );\n};\n\nexport default ImageItem;\n","import { useMemo } from 'react';\nimport { UseQueryOptions, useQuery } from 'react-query';\n\nimport ApiClient from 'api';\n\ntype Unpromise<T> = T extends Promise<infer U> ? U : T;\n\nexport type Methods = {\n  [method in keyof ApiClient]: ApiClient[method] extends Function ? Unpromise<ReturnType<ApiClient[method]>> : never;\n};\n\nexport type Method = keyof ApiClient & string;\n\nfunction useApi<T extends Method>(\n  method: T,\n  params: Parameters<ApiClient[T]> = [] as Parameters<ApiClient[T]>,\n  options?: UseQueryOptions<Methods[T]>,\n) {\n  const client = useMemo(() => new ApiClient(), []);\n  const query = useQuery<Methods[T]>(\n    [method, ...params],\n    () =>\n      // @ts-expect-error\n      client[method](...params) as Methods[T],\n    options,\n  );\n\n  return query;\n}\n\nexport default useApi;\n","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var _React$useState2 = React.useState(function () {\n    return new Observer(queryClient, defaultedOptions);\n  }),\n      observer = _React$useState2[0];\n\n  var result = observer.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary, observer]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if ((defaultedOptions.suspense || defaultedOptions.useErrorBoundary) && result.isError && !result.isFetching) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = observer.trackResult(result);\n  }\n\n  return result;\n}","import { useCallback, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport cx from 'classnames';\n\nimport { Item } from 'api';\nimport ImageItem from 'components/imageItem';\nimport { PATHS, generatePath } from 'routes';\n\ntype Props = {\n  item?: Item;\n  className?: string;\n};\n\nconst VideoItem: React.FC<Props> = ({ item, className }) => {\n  const history = useHistory();\n  const title = useMemo(() => item?.title?.split('/')[0], [item?.title]);\n\n  const handleOnClick = useCallback(() => {\n    if (item?.id) {\n      history.push(\n        generatePath(PATHS.Item, {\n          itemId: item.id,\n        }),\n      );\n    }\n  }, [item?.id, history]);\n\n  return (\n    <ImageItem onClick={handleOnClick} source={item?.posters.medium} caption={title} className={cx('h-72', className)}>\n      {item?.new && (\n        <div className=\"absolute bg-red-600 border-gray-300 border-t-2 border-r-2 text-gray-200 px-2 py-1 rounded-bl rounded-tr-xl top-0 right-0\">\n          {item?.new}\n        </div>\n      )}\n    </ImageItem>\n  );\n};\n\nexport default VideoItem;\n","import React from 'react';\nimport cx from 'classnames';\nimport map from 'lodash/map';\n\nimport { Item } from 'api';\nimport Scrollable from 'components/scrollable';\nimport Title from 'components/title';\nimport VideoItem from 'components/videoItem';\n\ntype Props = {\n  title?: string;\n  items?: Item[];\n  loading?: boolean;\n  onScrollToEnd?: () => void;\n  scrollable?: boolean;\n  className?: string;\n};\n\nconst ItemsList: React.FC<Props> = ({ title, items, loading, onScrollToEnd, scrollable = true, className }) => {\n  const content = (\n    <div>\n      <Title title={title} />\n      <div className={cx('flex flex-wrap', className)}>\n        {map(items, (item) => (\n          <VideoItem key={item.id} item={item} />\n        ))}\n        {loading && map([...new Array(15)], (_, idx) => <VideoItem key={idx} />)}\n      </div>\n    </div>\n  );\n\n  return scrollable ? <Scrollable onScrollToEnd={onScrollToEnd}>{content}</Scrollable> : content;\n};\n\nexport default ItemsList;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.previousSelectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval)) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result) {\n    var _this2 = this;\n\n    var trackedResult = {};\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          var typedKey = key;\n\n          if (!_this2.trackedProps.includes(typedKey)) {\n            _this2.trackedProps.push(typedKey);\n          }\n\n          return result[typedKey];\n        }\n      });\n    });\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(options);\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select) && !this.previousSelectError) {\n          data = prevResult.data;\n        } else {\n          try {\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    if (result === prevResult) {\n      return false;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}"],"sourceRoot":""}