{"version":3,"sources":["components/seasonItem/seasonItem.tsx","components/seasonsList/seasonsList.tsx","containers/bookmarks/bookmarks.tsx","hooks/useStreamingTypeEffect.ts","views/item/item.tsx","hooks/useInViewport.ts","components/scrollable/scrollable.tsx","components/imageItem/imageItem.tsx","hooks/useApi.ts","components/videoItem/videoItem.tsx","components/itemsList/itemsList.tsx","components/button/button.tsx","components/checkbox/checkbox.tsx","hooks/useChangebleState.ts","utils/item.ts","components/spotlightContainer/spotlightContainer.tsx","components/popup/popup.tsx","components/accordion/accordion.tsx"],"names":["SeasonItem","item","season","history","useHistory","handleEpisodeClick","useCallback","episode","id","push","generatePath","PATHS","Video","videoId","video","className","title","number","map","episodes","source","thumbnail","caption","onClick","watched","WatchingStatus","Watched","SeasonsList","seasons","length","Bookmarks","itemId","data","useApi","itemBookmarks","dataUpdatedAt","refetch","bookmarkToggleItemAsync","useApiMutation","bookmarksIds","useMemo","folders","bookmark","handleCheckboxToggle","a","items","defaultChecked","includes","onChange","updated","useStreamingTypeEffect","streamingTypes","deviceInfo","useStorageState","setStreamingType","selectedStreamingType","find","device","settings","streamingType","value","selected","Bool","True","useEffect","code","SimilarItems","scrollable","ItemView","useParams","useState","bookmarksPopupVisible","setBookmarksPopupVisible","staleTime","watchingToggleWatchlistAsync","videos","watching","status","trailer","videoToPlay","getItemTitle","handleOnPlayClick","handleOnTrailerClick","Trailer","trailerId","handleOnBookmarksClick","handleBookmarksPopupClose","handleBlueButton","handleOnVisibilityClick","useButtonEffect","src","posters","wide","big","alt","icon","visible","onClose","subscribed","plot","tracklist","track","idx","useInViewport","target","props","options","config","disconnectOnLeave","onEnterViewport","onLeaveViewport","forceUpdate","observer","useRef","inViewportRef","intersected","enterCountRef","leaveCountRef","startObserver","current","node","findDOMNode","observe","stopObserver","unobserve","disconnect","handleIntersection","entries","entry","isIntersecting","intersectionRatio","isInViewport","initIntersectionObserver","IntersectionObserver","inViewport","enterCount","leaveCount","Scrollable","children","onScrollToEnd","footerRef","cx","ref","ImageItem","wrapperClassName","loading","method","params","client","ApiClient","query","useQuery","VideoItem","split","handleOnClick","Item","medium","new","ItemsList","content","Array","_","Button","iconOnly","autoFocus","wrapperRef","frameId","requestAnimationFrame","focus","cancelAnimationFrame","role","name","Checkbox","checked","inputRef","handleChange","e","handleClick","click","component","type","useChangebleState","initialState","state","setState","SpotlightContainer","SpotlightContainerDecorator","enterTo","defaultElement","selector","overflow","preserveId","Popup","containerId","Spotlight","add","handleClose","handleCloseIfVisible","spotPopupContent","getCurrent","blur","setActiveContainer","setTimeout","setPointerMode","hidden","spotlightId","spotlightRestrict","spotlightDisabled","Accordion","open","onToggle","subtitle","setVisible","newVisible"],"mappings":"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","file":"static/js/13.f85f0144.chunk.js","sourcesContent":["import { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport map from 'lodash/map';\n\nimport { Item, Season, Video, WatchingStatus } from 'api';\nimport Accordion from 'components/accordion';\nimport ImageItem from 'components/imageItem';\nimport { PATHS, generatePath } from 'routes';\n\ntype Props = {\n  item: Item;\n  season: Season;\n};\n\nconst SeasonItem: React.FC<Props> = ({ item, season }) => {\n  const history = useHistory();\n  const handleEpisodeClick = useCallback(\n    (episode: Video) => () => {\n      if (episode?.id) {\n        history.push(\n          generatePath(PATHS.Video, {\n            videoId: episode.id,\n          }),\n          {\n            item,\n            video: episode,\n            season,\n          },\n        );\n      }\n    },\n    [item, season, history],\n  );\n\n  return (\n    <div className=\"flex flex-col\">\n      <Accordion title={`Сезон ${season.number}`}>\n        <div className=\"flex flex-wrap\">\n          {map(season.episodes, (episode) => (\n            <ImageItem\n              key={episode.id}\n              source={episode.thumbnail}\n              caption={`Эпизод ${episode.number}`}\n              onClick={handleEpisodeClick(episode)}\n            >\n              {episode.watched === WatchingStatus.Watched && (\n                <div className=\"absolute flex justify-center items-center rounded-xl bg-black bg-opacity-60 top-0 bottom-0 left-0 right-0\">\n                  Просмотрено\n                </div>\n              )}\n            </ImageItem>\n          ))}\n        </div>\n      </Accordion>\n    </div>\n  );\n};\n\nexport default SeasonItem;\n","import map from 'lodash/map';\n\nimport { Item, Season } from 'api';\nimport SeasonItem from 'components/seasonItem';\nimport Text from 'components/text';\n\ntype Props = {\n  item: Item;\n  seasons?: Season[];\n};\n\nconst SeasonsList: React.FC<Props> = ({ item, seasons }) => {\n  if (!seasons?.length) {\n    return null;\n  }\n\n  return (\n    <div className=\"p-8\">\n      <Text>Список сезонов</Text>\n\n      {map(seasons, (season) => (\n        <SeasonItem key={season.id} item={item} season={season} />\n      ))}\n    </div>\n  );\n};\n\nexport default SeasonsList;\n","import React, { useCallback, useMemo } from 'react';\nimport map from 'lodash/map';\n\nimport { Bookmark } from 'api';\nimport Checkbox from 'components/checkbox';\nimport useApi from 'hooks/useApi';\nimport useApiMutation from 'hooks/useApiMutation';\n\ntype Props = {\n  itemId: string;\n};\n\nconst Bookmarks: React.FC<Props> = ({ itemId }) => {\n  const { data } = useApi('bookmarks');\n  const { data: itemBookmarks, dataUpdatedAt, refetch } = useApi('itemBookmarks', [itemId]);\n  const { bookmarkToggleItemAsync } = useApiMutation('bookmarkToggleItem');\n  const bookmarksIds = useMemo(() => itemBookmarks?.folders.map((bookmark) => bookmark.id) || [], [itemBookmarks?.folders]);\n\n  const handleCheckboxToggle = useCallback(\n    (bookmark: Bookmark) => async () => {\n      await bookmarkToggleItemAsync([itemId, bookmark.id]);\n      refetch();\n    },\n    [itemId, bookmarkToggleItemAsync, refetch],\n  );\n\n  return (\n    <div className=\"flex flex-wrap\" key={dataUpdatedAt}>\n      {map(data?.items, (bookmark) => (\n        <div className=\"w-1/5 p-1\" key={bookmark.updated}>\n          <Checkbox defaultChecked={bookmarksIds.includes(bookmark.id)} onChange={handleCheckboxToggle(bookmark)}>\n            {bookmark.title}\n          </Checkbox>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Bookmarks;\n","import { useEffect, useMemo } from 'react';\nimport find from 'lodash/find';\n\nimport { Bool } from 'api';\n\nimport useApi from './useApi';\nimport useStorageState from './useStorageState';\n\nfunction useStreamingTypeEffect() {\n  const { data: streamingTypes } = useApi('streamingTypes');\n  const { data: deviceInfo } = useApi('deviceInfo');\n  const [, setStreamingType] = useStorageState<string>('streaming_type');\n\n  const selectedStreamingType = useMemo(\n    () => find(deviceInfo?.device.settings.streamingType.value, ({ selected }) => selected === Bool.True),\n    [deviceInfo?.device],\n  );\n  const streamingType = useMemo(\n    () => find(streamingTypes?.items, (streamingType) => streamingType?.id === selectedStreamingType?.id),\n    [streamingTypes?.items, selectedStreamingType],\n  );\n\n  useEffect(() => {\n    if (streamingType?.code) {\n      setStreamingType(streamingType?.code);\n    }\n  }, [setStreamingType, streamingType?.code]);\n}\n\nexport default useStreamingTypeEffect;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport map from 'lodash/map';\n\nimport { WatchingStatus } from 'api';\nimport Button from 'components/button';\nimport ItemsList from 'components/itemsList';\nimport Popup from 'components/popup';\nimport Scrollable from 'components/scrollable';\nimport SeasonsList from 'components/seasonsList';\nimport Text from 'components/text';\nimport Bookmarks from 'containers/bookmarks';\nimport useApi from 'hooks/useApi';\nimport useApiMutation from 'hooks/useApiMutation';\nimport useButtonEffect from 'hooks/useButtonEffect';\nimport useStreamingTypeEffect from 'hooks/useStreamingTypeEffect';\nimport { PATHS, RouteParams, generatePath } from 'routes';\n\nimport { getItemTitle } from 'utils/item';\n\nconst SimilarItems: React.FC<{ itemId: string }> = ({ itemId }) => {\n  const { data } = useApi('itemSmiliar', [itemId]);\n\n  if (data && data.items.length > 0) {\n    return (\n      <div className=\"p-8\">\n        <ItemsList title=\"Похожие\" items={data.items} scrollable={false} />\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst ItemView: React.FC = () => {\n  const history = useHistory();\n  const { itemId } = useParams<RouteParams>();\n  const [bookmarksPopupVisible, setBookmarksPopupVisible] = useState(false);\n  const { data, refetch } = useApi('itemMedia', [itemId!], { staleTime: 0 });\n\n  const { watchingToggleWatchlistAsync } = useApiMutation('watchingToggleWatchlist');\n\n  const video = useMemo(\n    () => data?.item.videos?.find(({ watching }) => watching.status !== WatchingStatus.Watched) || data?.item.videos?.[0],\n    [data?.item],\n  );\n  const season = useMemo(\n    () => data?.item.seasons?.find(({ watching }) => watching.status !== WatchingStatus.Watched) || data?.item.seasons?.[0],\n    [data?.item],\n  );\n  const episode = useMemo(\n    () => season?.episodes.find(({ watching }) => watching.status !== WatchingStatus.Watched) || season?.episodes[0],\n    [season],\n  );\n  const trailer = useMemo(() => data?.item.trailer, [data?.item]);\n  const videoToPlay = video || episode;\n  const title = useMemo(() => getItemTitle(data?.item, videoToPlay, season), [data?.item, season, videoToPlay]);\n\n  const handleOnPlayClick = useCallback(() => {\n    if (videoToPlay?.id) {\n      history.push(\n        generatePath(PATHS.Video, {\n          videoId: videoToPlay.id,\n        }),\n        {\n          item: data?.item,\n          video: videoToPlay,\n          season,\n        },\n      );\n    }\n  }, [history, data?.item, season, videoToPlay]);\n\n  const handleOnTrailerClick = useCallback(() => {\n    if (trailer?.id) {\n      history.push(\n        generatePath(PATHS.Trailer, {\n          trailerId: trailer.id,\n        }),\n        {\n          item: data?.item,\n          trailer,\n        },\n      );\n    }\n  }, [history, data?.item, trailer]);\n\n  const handleOnBookmarksClick = useCallback(() => {\n    setBookmarksPopupVisible(true);\n  }, []);\n  const handleBookmarksPopupClose = useCallback(() => {\n    setBookmarksPopupVisible(false);\n  }, []);\n  const handleBlueButton = useCallback(() => {\n    !bookmarksPopupVisible && handleOnBookmarksClick();\n  }, [bookmarksPopupVisible, handleOnBookmarksClick]);\n\n  const handleOnVisibilityClick = useCallback(async () => {\n    await watchingToggleWatchlistAsync([itemId!]);\n    refetch();\n  }, [itemId, watchingToggleWatchlistAsync, refetch]);\n\n  useStreamingTypeEffect();\n  useButtonEffect(['Play', 'Red'], handleOnPlayClick);\n  useButtonEffect('Green', handleOnTrailerClick);\n  useButtonEffect('Yellow', handleOnVisibilityClick);\n  useButtonEffect('Blue', handleBlueButton);\n\n  return (\n    <Scrollable>\n      <div className=\"relative w-screen h-screen\">\n        <img\n          className=\"absolute w-screen h-screen object-cover -z-1\"\n          src={(data?.item?.posters.wide || data?.item?.posters.big)!}\n          alt={title}\n        />\n\n        <Text className=\"p-4 absolute top-0\">{title}</Text>\n\n        <div className=\"absolute flex bottom-8 left-4 right-4\">\n          <div>\n            <Button icon=\"play_circle_outline\" onClick={handleOnPlayClick} className=\"mr-2\">\n              Смотреть\n            </Button>\n\n            <Button icon=\"bookmark\" onClick={handleOnBookmarksClick} className=\"mr-2\">\n              В закладки\n            </Button>\n\n            <Popup visible={bookmarksPopupVisible} onClose={handleBookmarksPopupClose}>\n              <Bookmarks key={`${itemId}-${bookmarksPopupVisible}`} itemId={itemId!} />\n            </Popup>\n          </div>\n\n          <div>\n            {trailer && (\n              <Button icon=\"videocam\" onClick={handleOnTrailerClick}>\n                Трейлер\n              </Button>\n            )}\n\n            {typeof data?.item?.subscribed === 'boolean' && (\n              <Button icon={data?.item?.subscribed ? 'visibility_off' : 'visibility'} onClick={handleOnVisibilityClick}>\n                {data?.item.subscribed ? 'Не буду смотреть' : 'Буду смотреть'}\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <SeasonsList item={data?.item!} seasons={data?.item?.seasons} />\n\n      <div className=\"flex flex-col p-8 whitespace-pre-wrap\">\n        <Text>{data?.item.plot}</Text>\n\n        {!!data?.item.tracklist?.length && (\n          <>\n            <Text className=\"my-4\">Треклист</Text>\n            <div className=\"flex flex-wrap flex-col h-96\">\n              {map(data?.item.tracklist, (track, idx) => (\n                <Text key={idx}>\n                  {idx + 1}. {track.title}\n                </Text>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <SimilarItems itemId={itemId!} />\n    </Scrollable>\n  );\n};\n\nexport default ItemView;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { findDOMNode } from 'react-dom';\n\ntype Props = {\n  onEnterViewport?: () => void;\n  onLeaveViewport?: () => void;\n};\n\nconst useInViewport = (\n  target: React.MutableRefObject<React.ReactInstance | null | undefined>,\n  props: Props,\n  options?: IntersectionObserverInit,\n  config = { disconnectOnLeave: false },\n) => {\n  const { onEnterViewport, onLeaveViewport } = props;\n  const [, forceUpdate] = useState();\n\n  const observer = useRef<IntersectionObserver | null>(null);\n\n  const inViewportRef = useRef(false);\n  const intersected = useRef(false);\n\n  const enterCountRef = useRef(0);\n  const leaveCountRef = useRef(0);\n\n  const startObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.observe(node);\n      }\n    }\n  }, [target, observer]);\n\n  const stopObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.unobserve(node);\n        observer.current.disconnect();\n        observer.current = null;\n      }\n    }\n  }, [target, observer]);\n\n  const handleIntersection = useCallback(\n    (entries) => {\n      const entry = entries[0] || {};\n      const { isIntersecting, intersectionRatio } = entry;\n      const isInViewport = typeof isIntersecting !== 'undefined' ? isIntersecting : intersectionRatio > 0;\n\n      // enter\n      if (!intersected.current && isInViewport) {\n        intersected.current = true;\n\n        onEnterViewport?.();\n\n        enterCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n\n        return;\n      }\n\n      // leave\n      if (intersected.current && !isInViewport) {\n        intersected.current = false;\n\n        onLeaveViewport?.();\n\n        if (config.disconnectOnLeave && observer.current) {\n          // disconnect obsever on leave\n          observer.current.disconnect();\n        }\n\n        leaveCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n      }\n    },\n    [observer, config.disconnectOnLeave, onEnterViewport, onLeaveViewport],\n  );\n\n  const initIntersectionObserver = useCallback(() => {\n    if (!observer.current) {\n      observer.current = new IntersectionObserver(handleIntersection, options);\n    }\n  }, [observer, options, handleIntersection]);\n\n  useEffect(() => {\n    initIntersectionObserver();\n    startObserver();\n\n    return () => {\n      stopObserver();\n    };\n  }, [initIntersectionObserver, startObserver, stopObserver]);\n\n  return {\n    inViewport: inViewportRef.current,\n    enterCount: enterCountRef.current,\n    leaveCount: leaveCountRef.current,\n  };\n};\n\nexport default useInViewport;\n","import { useRef } from 'react';\nimport cx from 'classnames';\n\nimport useInViewport from 'hooks/useInViewport';\n\ntype Props = {\n  onScrollToEnd?: () => void;\n  className?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Scrollable: React.FC<Props> = ({ children, className, onScrollToEnd, ...props }) => {\n  const footerRef = useRef<HTMLDivElement>(null);\n\n  useInViewport(footerRef, { onEnterViewport: onScrollToEnd });\n\n  return (\n    <div className={cx('overflow-y-auto h-full', className)} {...props}>\n      {children}\n      <div className=\"h-40\" ref={footerRef} />\n    </div>\n  );\n};\n\nexport default Scrollable;\n","import cx from 'classnames';\n\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  className?: string;\n  wrapperClassName?: string;\n  source?: string;\n  caption?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst ImageItem: React.FC<Props> = ({ className, wrapperClassName, source, caption, children, ...props }) => {\n  return (\n    <Spottable {...props} className={cx('rounded-xl w-1/5', wrapperClassName)}>\n      <div className={cx('h-40 m-1 flex flex-col relative overflow-hidden cursor-pointer', className)}>\n        <img\n          loading=\"lazy\"\n          className=\"w-full h-full object-cover rounded-xl border-2 border-gray-300 bg-gray-300\"\n          src={source}\n          alt={caption}\n        />\n        <div className=\"px-2\">\n          <p className=\"text-gray-200 text-sm text-center overflow-hidden whitespace-nowrap\">{caption}</p>\n        </div>\n\n        {children}\n      </div>\n    </Spottable>\n  );\n};\n\nexport default ImageItem;\n","import { useMemo } from 'react';\nimport { UseQueryOptions, useQuery } from 'react-query';\n\nimport ApiClient from 'api';\n\ntype Unpromise<T> = T extends Promise<infer U> ? U : T;\n\nexport type Methods = {\n  [method in keyof ApiClient]: ApiClient[method] extends Function ? Unpromise<ReturnType<ApiClient[method]>> : never;\n};\n\nexport type Method = keyof ApiClient & string;\n\nfunction useApi<T extends Method>(\n  method: T,\n  params: Parameters<ApiClient[T]> = [] as Parameters<ApiClient[T]>,\n  options?: UseQueryOptions<Methods[T]>,\n) {\n  const client = useMemo(() => new ApiClient(), []);\n  const query = useQuery<Methods[T]>(\n    [method, ...params],\n    () =>\n      // @ts-expect-error\n      client[method](...params) as Methods[T],\n    options,\n  );\n\n  return query;\n}\n\nexport default useApi;\n","import { useCallback, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport cx from 'classnames';\n\nimport { Item } from 'api';\nimport ImageItem from 'components/imageItem';\nimport { PATHS, generatePath } from 'routes';\n\ntype Props = {\n  item?: Item;\n  className?: string;\n};\n\nconst VideoItem: React.FC<Props> = ({ item, className }) => {\n  const history = useHistory();\n  const title = useMemo(() => item?.title?.split('/')[0], [item?.title]);\n\n  const handleOnClick = useCallback(() => {\n    if (item?.id) {\n      history.push(\n        generatePath(PATHS.Item, {\n          itemId: item.id,\n        }),\n      );\n    }\n  }, [item?.id, history]);\n\n  return (\n    <ImageItem onClick={handleOnClick} source={item?.posters.medium} caption={title} className={cx('h-72', className)}>\n      {item?.new && (\n        <div className=\"absolute bg-red-600 border-gray-300 border-t-2 border-r-2 text-gray-200 px-2 py-1 rounded-bl rounded-tr-xl top-0 right-0\">\n          {item?.new}\n        </div>\n      )}\n    </ImageItem>\n  );\n};\n\nexport default VideoItem;\n","import React from 'react';\nimport cx from 'classnames';\nimport map from 'lodash/map';\n\nimport { Item } from 'api';\nimport Scrollable from 'components/scrollable';\nimport Text from 'components/text';\nimport VideoItem from 'components/videoItem';\n\ntype Props = {\n  title?: string;\n  items?: Item[];\n  loading?: boolean;\n  onScrollToEnd?: () => void;\n  scrollable?: boolean;\n  className?: string;\n};\n\nconst ItemsList: React.FC<Props> = ({ title, items, loading, onScrollToEnd, scrollable = true, className }) => {\n  const content = (\n    <div>\n      {title && <Text className=\"m-1 mb-3\">{title}</Text>}\n      <div className={cx('flex flex-wrap', className)}>\n        {map(items, (item) => (\n          <VideoItem key={item.id} item={item} />\n        ))}\n        {loading && map([...new Array(15)], (_, idx) => <VideoItem key={idx} />)}\n      </div>\n    </div>\n  );\n\n  return scrollable ? <Scrollable onScrollToEnd={onScrollToEnd}>{content}</Scrollable> : content;\n};\n\nexport default ItemsList;\n","import { useEffect, useRef } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  icon?: string;\n  iconOnly?: boolean;\n  autoFocus?: boolean;\n  className?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Button: React.FC<Props> = ({ icon, iconOnly, children, autoFocus, className, ...props }) => {\n  const wrapperRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    let frameId: number;\n\n    if (autoFocus) {\n      frameId = requestAnimationFrame(() => {\n        // @ts-expect-error\n        wrapperRef.current?.node?.focus();\n      });\n    }\n\n    return () => {\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n    };\n  }, [wrapperRef, autoFocus]);\n\n  return (\n    <Spottable\n      {...props}\n      ref={wrapperRef}\n      className={cx('text-gray-200 whitespace-nowrap cursor-pointer rounded px-2 py-1', className)}\n      role=\"button\"\n    >\n      <div className=\"flex items-center\">\n        {icon && <Icon className={cx({ 'mr-2': !iconOnly })} name={icon} />}\n        {!iconOnly && children}\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Button;\n","import { useCallback, useRef } from 'react';\nimport React from 'react';\nimport cx from 'classnames';\n\nimport Spottable from 'components/spottable';\n\nexport type CheckboxProps = {\n  defaultChecked?: boolean;\n  checked?: boolean;\n  onChange?: (checked: boolean, e: React.ChangeEvent<HTMLInputElement>) => void;\n  className?: string;\n  type?: string;\n} & Omit<React.HTMLAttributes<HTMLInputElement>, 'onChange'>;\n\nconst Checkbox: React.FC<CheckboxProps> = ({ defaultChecked, checked, onChange, className, children, ...props }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>(\n    (e) => {\n      onChange?.(e.target.checked, e);\n    },\n    [onChange],\n  );\n  const handleClick = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <Spottable component=\"label\" className={cx('text-gray-200 p-2', className)} onClick={handleClick} role=\"button\">\n      <div className=\"inline-flex items-center cursor-pointer\">\n        <input\n          type=\"checkbox\"\n          {...props}\n          ref={inputRef}\n          className=\"inline-block w-4 h-4\"\n          defaultChecked={defaultChecked}\n          checked={checked}\n          onChange={handleChange}\n        />\n        <span className=\"inline-block ml-2 whitespace-nowrap\">{children}</span>\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Checkbox;\n","import { useEffect, useState } from 'react';\n\nfunction useChangebleState<T>(initialState?: T) {\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    setState(initialState);\n  }, [initialState]);\n\n  return [state, setState] as const;\n}\n\nexport default useChangebleState;\n","import { ItemDetails, Season, Video } from 'api';\n\nexport function getItemTitle(item?: ItemDetails, video?: Video, season?: Season) {\n  return season ? `${item?.title} (s${season.number}e${video?.number || 1})` : item?.title!;\n}\n","import SpotlightContainerDecorator from '@enact/spotlight/SpotlightContainerDecorator';\n\nexport const CONFIG = {\n  enterTo: 'default-element',\n  defaultElement: '.spottable',\n  selector: '.spottable',\n  overflow: true,\n  preserveId: true,\n};\n\nconst SpotlightContainer = SpotlightContainerDecorator(CONFIG, (props: React.HTMLAttributes<HTMLDivElement>) => <div {...props} />);\n\nexport default SpotlightContainer;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport Spotlight from '@enact/spotlight';\nimport cx from 'classnames';\n\nimport SpotlightContainer from 'components/spotlightContainer';\nimport useButtonEffect from 'hooks/useButtonEffect';\n\ntype Props = {\n  visible: boolean;\n  onClose: (visible: boolean) => void;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Popup: React.FC<Props> = ({ visible, onClose, className, ...props }) => {\n  const containerId = useMemo(() => Spotlight.add({}), []);\n  const handleClose = useCallback(() => {\n    onClose(false);\n  }, [onClose]);\n\n  const handleCloseIfVisible = useCallback(() => {\n    if (visible) {\n      handleClose();\n\n      return false;\n    }\n  }, [visible, handleClose]);\n\n  const spotPopupContent = useCallback(() => {\n    if (!Spotlight.focus(containerId)) {\n      const current = Spotlight.getCurrent();\n\n      // In cases where the container contains no spottable controls or we're in pointer-mode, focus\n      // cannot inherently set the active container or blur the active control, so we must do that\n      // here.\n      if (current) {\n        // @ts-expect-error\n        current.blur();\n      }\n\n      Spotlight.setActiveContainer(containerId);\n      setTimeout(() => {\n        Spotlight.setPointerMode(false);\n        Spotlight.focus(containerId);\n      }, 500);\n    }\n  }, [containerId]);\n\n  useButtonEffect('Back', handleCloseIfVisible);\n  useButtonEffect('Blue', handleCloseIfVisible);\n\n  useEffect(() => {\n    if (visible) {\n      spotPopupContent();\n    }\n  }, [visible, spotPopupContent]);\n\n  return (\n    <>\n      <div\n        className={cx('fixed z-999 top-0 left-0 right-0 bottom-0 bg-black bg-opacity-50', {\n          hidden: !visible,\n        })}\n        onClick={handleClose}\n      />\n      <SpotlightContainer\n        {...props}\n        spotlightId={containerId}\n        spotlightRestrict=\"self-only\"\n        spotlightDisabled={!visible}\n        className={cx(\n          'fixed z-999 bottom-0 left-0 right-0 p-4 bg-black ring',\n          {\n            hidden: !visible,\n          },\n          className,\n        )}\n      />\n    </>\n  );\n};\n\nexport default Popup;\n","import { useCallback } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\nimport Text from 'components/text';\nimport useChangebleState from 'hooks/useChangebleState';\n\ntype Props = {\n  title: string;\n  subtitle?: string;\n  className?: string;\n  open?: boolean;\n  onToggle?: (open: boolean) => void;\n};\n\nconst Accordion: React.FC<Props> = ({ open, onToggle, title, subtitle, className, children }) => {\n  const [visible, setVisible] = useChangebleState(open);\n\n  const handleClick = useCallback(() => {\n    setVisible((visible) => {\n      const newVisible = !visible;\n\n      onToggle?.(newVisible);\n\n      return newVisible;\n    });\n  }, [setVisible, onToggle]);\n\n  return (\n    <div className=\"flex flex-col w-full\">\n      <Spottable onClick={handleClick} className={cx('p-1 cursor-pointer', className)}>\n        <div className=\"flex flex-col\">\n          <div className=\"flex items-center\">\n            <Text>{title}</Text>\n\n            <Icon name={visible ? 'expand_less' : 'expand_more'} />\n          </div>\n          {!visible && subtitle && <Text className=\"mt-2\">{subtitle}</Text>}\n        </div>\n      </Spottable>\n      {visible && children}\n    </div>\n  );\n};\n\nexport default Accordion;\n"],"sourceRoot":""}