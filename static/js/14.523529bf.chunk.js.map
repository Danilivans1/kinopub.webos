{"version":3,"sources":["views/video/video.tsx","components/seo/seo.tsx","hooks/useInViewport.ts","components/scrollable/scrollable.tsx","utils/item.ts","../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../node_modules/react-query/es/react/useBaseQuery.js","hooks/useApi.ts","components/button/button.tsx","hooks/useChangebleState.ts","../node_modules/react-query/es/core/queryObserver.js","components/checkbox/checkbox.tsx","components/accordion/accordion.tsx","../node_modules/react-query/es/react/useQuery.js","utils/date.ts","components/spotlightContainer/spotlightContainer.tsx","components/popup/popup.tsx","components/radio/radio.tsx","components/select/select.tsx","utils/video.ts","utils/subtitles.ts","components/media/media.new.tsx","components/player/settings.tsx","components/player/startFrom.tsx","components/player/player.tsx"],"names":["usePrevNextVideos","item","season","video","nextVideo","useMemo","videos","episodes","find","number","nextSeason","seasons","useNextVideo","previousVideo","previousSeason","length","usePreviousVideo","VideoView","history","useHistory","location","useLocation","watchingMarkTimeAsync","useApiMutation","useStorageState","streamingType","state","useState","currentVideo","setCurrentVideo","currentVideoLinks","useApi","id","saveCurrentTime","useCallback","currentTime","a","playerProps","data","title","getItemTitle","description","getItemDescription","poster","posters","wide","big","audios","mapAudios","sources","mapSources","files","subtitles","mapSubtitles","startTime","watching","status","WatchingStatus","Watching","time","handlePause","handleOnEnded","goBack","handleJumpBackward","handleJumpForward","handleTimeSync","onPause","onEnded","onJumpBackward","onJumpForward","onTimeSync","Seo","props","Helmet","defaultTitle","titleTemplate","useInViewport","target","options","config","disconnectOnLeave","onEnterViewport","onLeaveViewport","forceUpdate","observer","useRef","inViewportRef","intersected","enterCountRef","leaveCountRef","startObserver","current","node","findDOMNode","observe","stopObserver","unobserve","disconnect","handleIntersection","entries","entry","isIntersecting","intersectionRatio","isInViewport","initIntersectionObserver","IntersectionObserver","useEffect","inViewport","enterCount","leaveCount","Scrollable","children","className","onScrollToEnd","footerRef","cx","ref","getItemQualityIcon","quality","createValue","_isReset","clearReset","reset","isReset","QueryErrorResetBoundaryContext","React","createContext","useBaseQuery","Observer","mountedRef","queryClient","useQueryClient","errorResetBoundary","useContext","defaultedOptions","defaultQueryObserverOptions","optimisticResults","onError","notifyManager","batchCalls","onSuccess","onSettled","suspense","staleTime","useErrorBoundary","retryOnMount","result","getOptimisticResult","unsubscribe","subscribe","x","updateResult","setOptions","listeners","isLoading","fetchOptimistic","then","_ref","catch","error","undefined","isError","isFetching","notifyOnChangeProps","trackResult","method","params","client","ApiClient","query","useQuery","Button","icon","iconOnly","autoFocus","wrapperRef","frameId","requestAnimationFrame","focus","cancelAnimationFrame","role","name","useChangebleState","initialState","setState","QueryObserver","_Subscribable","_this","call","this","trackedProps","previousSelectError","bindMethods","_inheritsLoose","_proto","prototype","remove","bind","refetch","onSubscribe","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","shouldFetchOnReconnect","enabled","refetchOnReconnect","isStale","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearTimers","removeObserver","notifyOptions","prevOptions","prevQuery","Error","queryKey","updateQuery","mounted","hasListeners","shouldFetchOptionally","updateStaleTimeout","refetchInterval","updateRefetchInterval","getQueryCache","build","createResult","getCurrentResult","currentResult","_this2","trackedResult","Object","keys","forEach","key","defineProperty","configurable","enumerable","get","typedKey","includes","push","getNextResult","_this3","Promise","resolve","reject","throwOnError","getCurrentQuery","fetch","_this4","fetchOptions","_this5","promise","noop","_this6","clearStaleTimeout","isServer","isValidTimeout","timeout","timeUntilStale","dataUpdatedAt","staleTimeoutId","setTimeout","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","clearInterval","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","isPreviousData","isPlaceholderData","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","isSuccess","select","structuralSharing","replaceEqualDeep","selectError","getLogger","Date","now","placeholderData","isIdle","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangePropsExclusions","includedProps","some","changed","isIncluded","isExcluded","shallowEqualObjects","defaultNotifyOptions","cache","notify","_extends","onQueryUpdate","action","type","isCancelledError","_this8","batch","listener","Subscribable","shouldLoadOnMount","refetchOnMount","shouldRefetchOnMount","isStaleByTime","Checkbox","defaultChecked","checked","onChange","inputRef","handleChange","e","handleKeyPress","isKey","click","component","onKeyPress","Accordion","open","onToggle","subtitle","visible","setVisible","handleClick","newVisible","onClick","arg1","arg2","arg3","parsedOptions","parseQueryArgs","secondsToDuration","seconds","formatDuration","leading","SpotlightContainer","SpotlightContainerDecorator","enterTo","defaultElement","selector","overflow","preserveId","Popup","onClose","closeButton","containerId","Spotlight","add","handleClose","handleCloseIfVisible","spotPopupContent","getCurrent","blur","setActiveContainer","setPointerMode","useButtonEffect","hidden","spotlightId","spotlightRestrict","spotlightDisabled","Radio","Select","label","defaultValue","value","closeOnChange","splitIn","setOpen","val","setVal","opts","Array","isArray","map","option","idx","selectedOption","o","handleChanged","handleChecked","opt","formatIdx","audio","lang","filter","author","toUpper","codec","join","orderBy","file","src","url","http","parseInt","WebVTTConverter","resource","objectURL","reader","FileReader","addEventListener","event","buf","Uint8Array","readAsArrayBuffer","Blob","TextDecoder","blobToString","decoded","text","concat","toVTT","blob","URL","createObjectURL","blobToBuffer","buffer","utf8str","decode","success","fail","readAsText","replace","str","split","each","charCodeAt","from","converter","getURL","useVideoPlayer","autoPlay","audioTracks","sourceTracks","subtitleTracks","isSettingsOpen","videoRef","hlsRef","startTimeRef","isSettingsOpenRef","isHLSJSActive","currentAudioTrack","setCurrentAudioTrack","currentSourceTrack","setCurrentSourceTrack","currentSubtitleTrack","setCurrentSubtitleTrack","getAudioTracks","getAudioTrack","setAudioTrack","audioTrackName","audioTrack","getSourceTracks","uniqBy","getSourceTrack","setSourceTrack","sourceTrackName","sourceTrack","getSubtitleTracks","getSubtitleTrack","setSubtitleTrack","subtitleTrackName","subtitleTrack","currentAudioTrackIndex","findIndex","currentSrc","handleMediaLoaded","removeEventListener","firstChild","lastChild","track","mode","removeChild","pause","play","addSubtitleTrack","document","createElement","appendChild","kind","srclang","endsWith","convertToVTT","HLS","isSupported","hls","enableWebVTT","enableCEA708Captions","attachMedia","on","Events","MEDIA_ATTACHED","loadSource","Boolean","MEDIA_EVENTS","Media","forwardRef","onUpdate","mediaComponent","handleUpdate","eventProps","reduce","args","player","getCurrentTime","setCurrentTime","getPlaybackRate","playbackRate","setPlaybackRate","getPaused","paused","getDuration","duration","getError","networkState","NETWORK_NO_SOURCE","getLoading","readyState","HAVE_ENOUGH_DATA","getProportionLoaded","buffered","end","getProportionPlayed","playPause","load","api","useImperativeHandle","useVideoPlayerApi","NONE","Settings","isOpen","setIsOpen","setAudios","currentAudio","setCurrentAudio","setSources","currentSource","setCurrentSource","setSubtitles","currentSubtitle","setCurrentSubtitle","audioOptions","sourceOptions","source","subtitleOptions","handleVideoUpdate","getVideoNode","handleAudioChange","handleSourceChange","handleSubtitleChange","timeoutId","StartFrom","startInDelay","startIn","setStartIn","startFrom","handleStartFromClick","handleStartFromBeginingClick","intervalId","prevStartIn","newStartIn","Player","timeSyncInterval","onPlay","playerRef","isPaused","setIsPaused","isLoaded","setIsLoaded","setIsSettingsOpen","handlePlay","handleEnded","handleLoadedMetadata","handleSettingsOpen","handleSettingsClose","handlePauseButton","onLoadedMetadata","videoComponent"],"mappings":"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","file":"static/js/14.523529bf.chunk.js","sourcesContent":["import { useCallback, useMemo, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { ItemDetails, Season, Streaming, Video, WatchingStatus } from 'api';\nimport Player, { PlayerProps } from 'components/player';\nimport Seo from 'components/seo';\nimport useApi from 'hooks/useApi';\nimport useApiMutation from 'hooks/useApiMutation';\nimport useStorageState from 'hooks/useStorageState';\n\nimport { getItemDescription, getItemTitle } from 'utils/item';\nimport { mapAudios, mapSources, mapSubtitles } from 'utils/video';\n\nconst useNextVideo = (item: ItemDetails, season: Season, video: Video) =>\n  useMemo(() => {\n    const nextVideo = (item.videos || season?.episodes)?.find(({ number }) => number === video.number + 1);\n\n    if (nextVideo) {\n      return nextVideo;\n    }\n\n    const nextSeason = item.seasons?.find(({ number }) => number === season.number + 1);\n    if (nextSeason) {\n      return nextSeason.episodes[0];\n    }\n  }, [item, season, video]);\n\nconst usePreviousVideo = (item: ItemDetails, season: Season, video: Video) =>\n  useMemo(() => {\n    const previousVideo = (item.videos || season?.episodes)?.find(({ number }) => number === video.number - 1);\n\n    if (previousVideo) {\n      return previousVideo;\n    }\n\n    const previousSeason = item.seasons?.find(({ number }) => number === season.number - 1);\n    if (previousSeason) {\n      return previousSeason.episodes[previousSeason.episodes.length - 1];\n    }\n  }, [item, season, video]);\n\nconst usePrevNextVideos = (item: ItemDetails, season: Season, video: Video) => {\n  const nextVideo = useNextVideo(item, season, video);\n  const previousVideo = usePreviousVideo(item, season, video);\n\n  return [previousVideo, nextVideo] as const;\n};\n\nconst VideoView: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation<{ title: string; item: ItemDetails; video: Video; season: Season }>();\n  const { watchingMarkTimeAsync } = useApiMutation('watchingMarkTime');\n  const [streamingType] = useStorageState<Streaming>('streaming_type');\n  const { item, video, season } = location.state || {};\n\n  const [currentVideo, setCurrentVideo] = useState(video);\n  const [previousVideo, nextVideo] = usePrevNextVideos(item, season, currentVideo);\n\n  const currentVideoLinks = useApi('itemMediaLinks', [currentVideo.id]);\n\n  const saveCurrentTime = useCallback(\n    async ({ number }: Video, currentTime: number) => {\n      await watchingMarkTimeAsync([item.id, currentTime, number, season?.number]);\n    },\n    [watchingMarkTimeAsync, item, season],\n  );\n\n  const playerProps = useMemo<PlayerProps | null>(\n    () =>\n      currentVideoLinks?.data\n        ? {\n            title: getItemTitle(item, currentVideo, season),\n            description: getItemDescription(item, currentVideo, season),\n            poster: item.posters.wide || item.posters.big,\n            audios: mapAudios(currentVideo.audios),\n            sources: mapSources(currentVideoLinks.data.files, streamingType),\n            subtitles: mapSubtitles(currentVideoLinks.data.subtitles),\n            startTime: currentVideo.watching.status === WatchingStatus.Watching ? currentVideo.watching.time : 0,\n          }\n        : null,\n    [item, season, currentVideo, currentVideoLinks?.data, streamingType],\n  );\n\n  const handlePause = useCallback(\n    (currentTime: number) => {\n      saveCurrentTime(currentVideo, currentTime);\n    },\n    [saveCurrentTime, currentVideo],\n  );\n\n  const handleOnEnded = useCallback(\n    (currentTime: number) => {\n      saveCurrentTime(currentVideo, currentTime);\n\n      if (nextVideo) {\n        setCurrentVideo(nextVideo);\n        return;\n      }\n\n      history.goBack();\n    },\n    [saveCurrentTime, history, currentVideo, nextVideo],\n  );\n\n  const handleJumpBackward = useCallback(\n    ({ currentTime }: { currentTime: number }) => {\n      saveCurrentTime(currentVideo, currentTime);\n\n      if (previousVideo) {\n        setCurrentVideo(previousVideo);\n      }\n    },\n    [saveCurrentTime, currentVideo, previousVideo],\n  );\n\n  const handleJumpForward = useCallback(\n    ({ currentTime }: { currentTime: number }) => {\n      saveCurrentTime(currentVideo, currentTime);\n\n      if (nextVideo) {\n        setCurrentVideo(nextVideo);\n      }\n    },\n    [saveCurrentTime, currentVideo, nextVideo],\n  );\n\n  const handleTimeSync = useCallback(\n    async (currentTime: number) => {\n      await saveCurrentTime(currentVideo, currentTime);\n    },\n    [saveCurrentTime, currentVideo],\n  );\n\n  return (\n    <>\n      <Seo title={`Просмотр: ${item.title} - Видео`} />\n      {playerProps && (\n        <Player\n          key={currentVideo.id}\n          {...playerProps}\n          streamingType={streamingType}\n          onPause={handlePause}\n          onEnded={handleOnEnded}\n          onJumpBackward={handleJumpBackward}\n          onJumpForward={handleJumpForward}\n          onTimeSync={handleTimeSync}\n        />\n      )}\n    </>\n  );\n};\n\nexport default VideoView;\n","import { Helmet, HelmetProps } from 'react-helmet';\n\ntype Props = {} & HelmetProps;\n\nconst Seo: React.FC<Props> = (props) => {\n  return <Helmet defaultTitle=\"Unknown\" titleTemplate=\"%s | Kinopub WebOS\" {...props} />;\n};\n\nexport default Seo;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { findDOMNode } from 'react-dom';\n\ntype Props = {\n  onEnterViewport?: () => void;\n  onLeaveViewport?: () => void;\n};\n\nconst useInViewport = (\n  target: React.MutableRefObject<React.ReactInstance | null | undefined>,\n  props: Props,\n  options?: IntersectionObserverInit,\n  config = { disconnectOnLeave: false },\n) => {\n  const { onEnterViewport, onLeaveViewport } = props;\n  const [, forceUpdate] = useState();\n\n  const observer = useRef<IntersectionObserver | null>(null);\n\n  const inViewportRef = useRef(false);\n  const intersected = useRef(false);\n\n  const enterCountRef = useRef(0);\n  const leaveCountRef = useRef(0);\n\n  const startObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.observe(node);\n      }\n    }\n  }, [target, observer]);\n\n  const stopObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.unobserve(node);\n        observer.current.disconnect();\n        observer.current = null;\n      }\n    }\n  }, [target, observer]);\n\n  const handleIntersection = useCallback(\n    (entries) => {\n      const entry = entries[0] || {};\n      const { isIntersecting, intersectionRatio } = entry;\n      const isInViewport = typeof isIntersecting !== 'undefined' ? isIntersecting : intersectionRatio > 0;\n\n      // enter\n      if (!intersected.current && isInViewport) {\n        intersected.current = true;\n\n        onEnterViewport?.();\n\n        enterCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n\n        return;\n      }\n\n      // leave\n      if (intersected.current && !isInViewport) {\n        intersected.current = false;\n\n        onLeaveViewport?.();\n\n        if (config.disconnectOnLeave && observer.current) {\n          // disconnect obsever on leave\n          observer.current.disconnect();\n        }\n\n        leaveCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n      }\n    },\n    [observer, config.disconnectOnLeave, onEnterViewport, onLeaveViewport],\n  );\n\n  const initIntersectionObserver = useCallback(() => {\n    if (!observer.current) {\n      observer.current = new IntersectionObserver(handleIntersection, options);\n    }\n  }, [observer, options, handleIntersection]);\n\n  useEffect(() => {\n    initIntersectionObserver();\n    startObserver();\n\n    return () => {\n      stopObserver();\n    };\n  }, [initIntersectionObserver, startObserver, stopObserver]);\n\n  return {\n    inViewport: inViewportRef.current,\n    enterCount: enterCountRef.current,\n    leaveCount: leaveCountRef.current,\n  };\n};\n\nexport default useInViewport;\n","import { useRef } from 'react';\nimport cx from 'classnames';\n\nimport useInViewport from 'hooks/useInViewport';\n\ntype Props = {\n  onScrollToEnd?: () => void;\n  className?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Scrollable: React.FC<Props> = ({ children, className, onScrollToEnd, ...props }) => {\n  const footerRef = useRef<HTMLDivElement>(null);\n\n  useInViewport(footerRef, { onEnterViewport: onScrollToEnd });\n\n  return (\n    <div className={cx('overflow-y-auto h-full', className)} {...props}>\n      {children}\n      {onScrollToEnd && <div className=\"h-40\" ref={footerRef} />}\n    </div>\n  );\n};\n\nexport default Scrollable;\n","import { ItemDetails, Season, Video } from 'api';\n\nexport function getItemTitle(item?: ItemDetails, video?: Video, season?: Season) {\n  const title = item?.title || '';\n\n  return season ? `${title} (s${season.number}e${video?.number || 1})` : title;\n}\n\nexport function getItemDescription(item?: ItemDetails, video?: Video, season?: Season) {\n  const title = video?.title || '';\n\n  return season ? `${title} (s${season.number}e${video?.number || 1})` : title;\n}\n\nexport function getItemQualityIcon(item?: ItemDetails) {\n  return item?.quality ? (item.quality === 2160 ? '4k' : item.quality === 1080 || item.quality === 720 ? 'hd' : 'sd') : null;\n}\n","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var _React$useState2 = React.useState(function () {\n    return new Observer(queryClient, defaultedOptions);\n  }),\n      observer = _React$useState2[0];\n\n  var result = observer.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary, observer]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if ((defaultedOptions.suspense || defaultedOptions.useErrorBoundary) && result.isError && !result.isFetching) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = observer.trackResult(result);\n  }\n\n  return result;\n}","import { useMemo } from 'react';\nimport { UseQueryOptions, useQuery } from 'react-query';\n\nimport ApiClient from 'api';\n\ntype Unpromise<T> = T extends Promise<infer U> ? U : T;\n\nexport type Methods = {\n  [method in keyof ApiClient]: ApiClient[method] extends Function ? Unpromise<ReturnType<ApiClient[method]>> : never;\n};\n\nexport type Method = keyof ApiClient & string;\n\nfunction useApi<T extends Method>(\n  method: T,\n  params: Parameters<ApiClient[T]> = [] as Parameters<ApiClient[T]>,\n  options?: UseQueryOptions<Methods[T]>,\n) {\n  const client = useMemo(() => new ApiClient(), []);\n  const query = useQuery<Methods[T]>(\n    [method, ...params],\n    () =>\n      // @ts-expect-error\n      client[method](...params) as Methods[T],\n    options,\n  );\n\n  return query;\n}\n\nexport default useApi;\n","import { useEffect, useRef } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  icon?: string;\n  iconOnly?: boolean;\n  autoFocus?: boolean;\n  className?: string;\n} & React.ComponentProps<typeof Spottable>;\n\nconst Button: React.FC<Props> = ({ icon, iconOnly, children, autoFocus, className, ...props }) => {\n  const wrapperRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    let frameId: number;\n\n    if (autoFocus) {\n      frameId = requestAnimationFrame(() => {\n        // @ts-expect-error\n        wrapperRef.current?.node?.focus();\n      });\n    }\n\n    return () => {\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n    };\n  }, [wrapperRef, autoFocus]);\n\n  return (\n    <Spottable\n      {...props}\n      ref={wrapperRef}\n      className={cx('text-gray-200 whitespace-nowrap cursor-pointer rounded px-2 py-1', className)}\n      role=\"button\"\n    >\n      <div className=\"flex items-center\">\n        {icon && <Icon className={cx({ 'mr-2': !iconOnly })} name={icon} />}\n        {!iconOnly && children}\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Button;\n","import { useEffect, useState } from 'react';\n\nfunction useChangebleState<T>(initialState?: T) {\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    setState(initialState);\n  }, [initialState]);\n\n  return [state, setState] as const;\n}\n\nexport default useChangebleState;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.previousSelectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval)) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result) {\n    var _this2 = this;\n\n    var trackedResult = {};\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          var typedKey = key;\n\n          if (!_this2.trackedProps.includes(typedKey)) {\n            _this2.trackedProps.push(typedKey);\n          }\n\n          return result[typedKey];\n        }\n      });\n    });\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(options);\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select) && !this.previousSelectError) {\n          data = prevResult.data;\n        } else {\n          try {\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    if (result === prevResult) {\n      return false;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","import { useCallback, useRef } from 'react';\nimport React from 'react';\nimport cx from 'classnames';\n\nimport Spottable from 'components/spottable';\n\nimport { isKey } from 'utils/keyboard';\n\nexport type CheckboxProps = {\n  defaultChecked?: boolean;\n  checked?: boolean;\n  onChange?: (checked: boolean, e: React.ChangeEvent<HTMLInputElement>) => void;\n  className?: string;\n  type?: string;\n} & Omit<React.HTMLAttributes<HTMLInputElement>, 'onChange'>;\n\nconst Checkbox: React.FC<CheckboxProps> = ({ defaultChecked, checked, onChange, className, children, ...props }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>(\n    (e) => {\n      onChange?.(e.target.checked, e);\n    },\n    [onChange],\n  );\n  const handleKeyPress = useCallback((e: KeyboardEvent) => {\n    if (isKey(e, 'Enter')) {\n      inputRef.current?.click();\n    }\n  }, []);\n\n  return (\n    <Spottable\n      component=\"label\"\n      className={cx('text-gray-200 p-2', className)}\n      // @ts-expect-error\n      onKeyPress={handleKeyPress}\n      role=\"button\"\n    >\n      <div className=\"inline-flex items-center cursor-pointer\">\n        <input\n          type=\"checkbox\"\n          {...props}\n          ref={inputRef}\n          className=\"inline-block w-4 h-4\"\n          defaultChecked={defaultChecked}\n          checked={checked}\n          onChange={handleChange}\n        />\n        <span className=\"inline-block ml-2 whitespace-nowrap\">{children}</span>\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Checkbox;\n","import { useCallback } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\nimport Text from 'components/text';\nimport useChangebleState from 'hooks/useChangebleState';\n\ntype Props = {\n  title: string;\n  subtitle?: string;\n  className?: string;\n  open?: boolean;\n  onToggle?: (open: boolean) => void;\n};\n\nconst Accordion: React.FC<Props> = ({ open, onToggle, title, subtitle, className, children }) => {\n  const [visible, setVisible] = useChangebleState(open);\n\n  const handleClick = useCallback(() => {\n    setVisible((visible) => {\n      const newVisible = !visible;\n\n      onToggle?.(newVisible);\n\n      return newVisible;\n    });\n  }, [setVisible, onToggle]);\n\n  return (\n    <div className=\"flex flex-col w-full\">\n      <Spottable onClick={handleClick} className={cx('p-1 cursor-pointer', className)}>\n        <div className=\"flex flex-col\">\n          <div className=\"flex items-center\">\n            <Text>{title}</Text>\n\n            <Icon name={visible ? 'expand_less' : 'expand_more'} />\n          </div>\n          {!visible && subtitle && <Text className=\"mt-2\">{subtitle}</Text>}\n        </div>\n      </Spottable>\n      {visible && children}\n    </div>\n  );\n};\n\nexport default Accordion;\n","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}","import formatDuration from 'format-duration';\n\nexport function secondsToDuration(seconds?: number) {\n  return formatDuration((seconds || 0) * 1000, { leading: true });\n}\n","import SpotlightContainerDecorator from '@enact/spotlight/SpotlightContainerDecorator';\n\nexport const CONFIG = {\n  enterTo: 'default-element',\n  defaultElement: '.spottable',\n  selector: '.spottable',\n  overflow: true,\n  preserveId: true,\n};\n\nconst SpotlightContainer = SpotlightContainerDecorator(CONFIG, (props: React.HTMLAttributes<HTMLDivElement>) => <div {...props} />);\n\nexport default SpotlightContainer;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport Spotlight from '@enact/spotlight';\nimport cx from 'classnames';\n\nimport Scrollable from 'components/scrollable';\nimport SpotlightContainer from 'components/spotlightContainer';\nimport useButtonEffect, { KeyboardCodesKeys } from 'hooks/useButtonEffect';\n\ntype Props = {\n  visible: boolean;\n  onClose: () => void;\n  closeButton?: KeyboardCodesKeys;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Popup: React.FC<Props> = ({ visible, onClose, children, className, closeButton = 'Blue', ...props }) => {\n  const containerId = useMemo(() => Spotlight.add({}), []);\n  const handleClose = useCallback(() => {\n    onClose();\n  }, [onClose]);\n\n  const handleCloseIfVisible = useCallback(() => {\n    if (visible) {\n      handleClose();\n\n      return false;\n    }\n  }, [visible, handleClose]);\n\n  const spotPopupContent = useCallback(() => {\n    if (!Spotlight.focus(containerId)) {\n      const current = Spotlight.getCurrent();\n\n      // In cases where the container contains no spottable controls or we're in pointer-mode, focus\n      // cannot inherently set the active container or blur the active control, so we must do that\n      // here.\n      if (current) {\n        // @ts-expect-error\n        current.blur();\n      }\n\n      Spotlight.setActiveContainer(containerId);\n      setTimeout(() => {\n        Spotlight.setPointerMode(false);\n        Spotlight.focus(containerId);\n      }, 500);\n    }\n  }, [containerId]);\n\n  useButtonEffect('Back', handleCloseIfVisible);\n  useButtonEffect(closeButton, handleCloseIfVisible);\n\n  useEffect(() => {\n    if (visible) {\n      spotPopupContent();\n    }\n  }, [visible, spotPopupContent]);\n\n  return (\n    <>\n      <div\n        className={cx('fixed z-999 top-0 left-0 right-0 bottom-0 bg-black bg-opacity-50', {\n          hidden: !visible,\n        })}\n        onClick={handleClose}\n      />\n      <SpotlightContainer\n        {...props}\n        spotlightId={containerId}\n        spotlightRestrict=\"self-only\"\n        spotlightDisabled={!visible}\n        className={cx(\n          'fixed z-999 bottom-0 left-0 right-0 p-4 bg-black ring',\n          {\n            hidden: !visible,\n          },\n          className,\n        )}\n      >\n        <Scrollable className=\"max-h-screen\">{children}</Scrollable>\n      </SpotlightContainer>\n    </>\n  );\n};\n\nexport default Popup;\n","import React from 'react';\n\nimport Checkbox, { CheckboxProps } from 'components/checkbox';\n\ntype Props = {} & CheckboxProps;\n\nconst Radio: React.FC<Props> = (props) => {\n  return <Checkbox {...props} type=\"radio\" />;\n};\n\nexport default Radio;\n","import { useCallback, useMemo, useState } from 'react';\nimport map from 'lodash/map';\n\nimport Accordion from 'components/accordion';\nimport Radio from 'components/radio';\nimport useChangebleState from 'hooks/useChangebleState';\n\ntype Option<T = any> = {\n  title: string;\n  value: T;\n};\n\ntype Props<T = any> = {\n  label: string;\n  options: Option<T>[] | string[];\n  value?: T;\n  defaultValue?: T;\n  onChange?: (value: T) => void;\n  closeOnChange?: boolean;\n  className?: string;\n  splitIn?: number;\n};\n\nconst Select: React.FC<Props> = ({ label, options, defaultValue, value, onChange, closeOnChange, className, splitIn }) => {\n  const [open, setOpen] = useState(false);\n  const [val, setVal] = useChangebleState(value || defaultValue);\n  const opts = useMemo(\n    () =>\n      Array.isArray(options) ? options.map((option, idx) => (typeof option === 'string' ? { title: option, value: idx } : option)) : [],\n    [options],\n  );\n  const selectedOption = useMemo(() => opts.find((o) => o.value === val), [opts, val]);\n\n  const handleChanged = useCallback(\n    (value) => {\n      setVal(value);\n      onChange?.(value);\n\n      if (closeOnChange) {\n        setOpen(false);\n      }\n    },\n    [setVal, onChange, closeOnChange],\n  );\n  const handleChecked = useCallback(\n    (option: Option) => (checked: boolean) => {\n      if (checked) {\n        handleChanged(option.value);\n      }\n    },\n    [handleChanged],\n  );\n\n  return (\n    <Accordion open={open} onToggle={setOpen} title={label} subtitle={selectedOption?.title} className={className}>\n      <div className=\"flex flex-wrap\">\n        {map(opts, (opt) => (\n          <Radio\n            key={opt.value}\n            className={splitIn ? `w-1/${splitIn}` : 'w-full'}\n            checked={opt.value === val}\n            onChange={handleChecked(opt)}\n          >\n            {opt.title}\n          </Radio>\n        ))}\n      </div>\n    </Accordion>\n  );\n};\n\nexport default Select;\n","import filter from 'lodash/filter';\nimport map from 'lodash/map';\nimport orderBy from 'lodash/orderBy';\nimport toUpper from 'lodash/toUpper';\n\nimport { Audio, Streaming, Subtitle } from 'api';\nimport { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\n\nconst formatIdx = (idx: number) => (idx < 10 ? `0${idx}` : idx);\n\nexport function mapAudios(audios: Audio[]): AudioTrack[] {\n  return map(audios, (audio, idx) => ({\n    lang: audio.lang,\n    name: filter([\n      `${formatIdx(idx + 1)}.`,\n      audio.type?.title && audio.author?.title ? `${audio.type?.title}.` : audio.type?.title,\n      audio.author?.title,\n      audio.type?.title || audio.author?.title ? `(${toUpper(audio.lang)})` : toUpper(audio.lang),\n      audio.codec !== 'aac' && toUpper(audio.codec),\n    ]).join(' '),\n  }));\n}\n\nexport function mapSources(\n  files: { url: string | { [key in Streaming]?: string }; quality?: string }[],\n  streamingType?: Streaming,\n): SourceTrack[] {\n  return orderBy(\n    map(files, (file) => {\n      const src = (typeof file.url === 'string' ? file.url : file.url[streamingType!] || file.url.http!) as string;\n\n      return {\n        src,\n        name: file.quality!,\n        type: src.includes('.m3u8') ? 'application/x-mpegURL' : 'video/mp4',\n      };\n    }),\n    ({ name }) => parseInt(name),\n    'desc',\n  );\n}\n\nexport function mapSubtitles(subtitles: Subtitle[]): SubtitleTrack[] {\n  return map(subtitles, (subtitle, idx) => ({\n    src: subtitle.url,\n    lang: subtitle.lang,\n    name: `${toUpper(subtitle.lang)} #${formatIdx(idx + 1)}`,\n  }));\n}\n","class WebVTTConverter {\n  resource: Blob;\n\n  private objectURL?: string;\n\n  constructor(resource: Blob) {\n    this.resource = resource;\n  }\n\n  blobToBuffer() {\n    return new Promise<ArrayBuffer>((resolve, reject) => {\n      const reader = new FileReader();\n      reader.addEventListener('loadend', (event) => {\n        const buf = event.target?.result;\n        resolve(new Uint8Array(buf as ArrayBuffer));\n      });\n      reader.addEventListener('error', () => reject('Error while reading the Blob object'));\n      reader.readAsArrayBuffer(this.resource);\n    });\n  }\n\n  static blobToString(blob: Blob, success: (text: string) => void, fail: () => void) {\n    const reader = new FileReader();\n    reader.addEventListener('loadend', (event) => {\n      const text = event.target?.result;\n      success(text as string);\n    });\n    reader.addEventListener('error', () => fail());\n    reader.readAsText(blob);\n  }\n\n  /**\n   * @param {*} utf8str\n   */\n  static toVTT(utf8str: string) {\n    return utf8str\n      .replace(/\\{\\\\([ibu])\\}/g, '</$1>')\n      .replace(/\\{\\\\([ibu])1\\}/g, '<$1>')\n      .replace(/\\{([ibu])\\}/g, '<$1>')\n      .replace(/\\{\\/([ibu])\\}/g, '</$1>')\n      .replace(/(\\d\\d:\\d\\d:\\d\\d),(\\d\\d\\d)/g, '$1.$2')\n      .concat('\\r\\n\\r\\n');\n  }\n\n  static toTypedArray(str: string) {\n    const result: number[] = [];\n    str.split('').forEach((each) => {\n      result.push(parseInt(`${each.charCodeAt(0)}`, 16));\n    });\n    return Uint8Array.from(result);\n  }\n\n  getURL() {\n    return new Promise<string>((resolve, reject) => {\n      if (!(this.resource instanceof Blob)) return reject('Expecting resource to be a Blob but something else found.');\n      if (!FileReader) return reject('No FileReader constructor found');\n      if (!TextDecoder) return reject('No TextDecoder constructor found');\n      return WebVTTConverter.blobToString(\n        this.resource,\n        (decoded) => {\n          const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n          const text = vttString.concat(WebVTTConverter.toVTT(decoded));\n          const blob = new Blob([text], { type: 'text/vtt' });\n          this.objectURL = URL.createObjectURL(blob);\n\n          return resolve(this.objectURL);\n        },\n        () => {\n          this.blobToBuffer().then((buffer) => {\n            const utf8str = new TextDecoder('utf-8').decode(buffer);\n            const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n            const text = vttString.concat(WebVTTConverter.toVTT(utf8str));\n            const blob = new Blob([text], { type: 'text/vtt' });\n            this.objectURL = URL.createObjectURL(blob);\n\n            return resolve(this.objectURL);\n          });\n        },\n      );\n    });\n  }\n\n  release() {\n    URL.createObjectURL(this.objectURL);\n  }\n}\n\nexport async function convertToVTT(src: string) {\n  const file = await (await fetch(src)).blob();\n  const converter = new WebVTTConverter(file);\n\n  return converter.getURL();\n}\n","import React, { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport cx from 'classnames';\nimport HLS from 'hls.js';\nimport find from 'lodash/find';\nimport forEach from 'lodash/forEach';\nimport uniqBy from 'lodash/uniqBy';\n\nimport useStorageState from 'hooks/useStorageState';\n\nimport { convertToVTT } from 'utils/subtitles';\n\nexport type AudioTrack = {\n  name: string;\n  lang: string;\n};\n\nexport type SourceTrack = {\n  src: string;\n  type: string;\n  name: string;\n};\n\nexport type SubtitleTrack = {\n  src: string;\n  name: string;\n  lang: string;\n};\n\nexport type StreamingType = 'http' | 'hls' | 'hls2' | 'hls4';\n\ntype OwnProps = {\n  autoPlay?: boolean;\n  audioTracks?: AudioTrack[];\n  sourceTracks?: SourceTrack[];\n  subtitleTracks?: SubtitleTrack[];\n  streamingType?: StreamingType;\n  isSettingsOpen?: boolean;\n  onUpdate?: () => void;\n  mediaComponent?: string;\n};\n\nexport type MediaRef = {\n  play: () => Promise<void>;\n  pause: () => void;\n  playPause: () => Promise<void>;\n  load: () => void;\n  currentTime: number;\n  playbackRate: number;\n  audioTracks?: AudioTrack[];\n  audioTrack?: string;\n  sourceTracks?: SourceTrack[];\n  sourceTrack?: string;\n  subtitleTracks?: SubtitleTrack[];\n  subtitleTrack?: string;\n  readonly duration: number;\n  readonly error: boolean;\n  readonly loading: boolean;\n  readonly paused: boolean;\n  readonly proportionLoaded: number;\n  readonly proportionPlayed: number;\n};\n\nfunction useVideoPlayer({ autoPlay, audioTracks, sourceTracks, subtitleTracks, streamingType, isSettingsOpen }: OwnProps) {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const hlsRef = useRef<HLS | null>(null);\n  const startTimeRef = useRef(0);\n  const isSettingsOpenRef = useRef(false);\n  const [isHLSJSActive] = useStorageState<boolean>('is_hls.js_active');\n  const [currentAudioTrack, setCurrentAudioTrack] = useState<AudioTrack>(audioTracks?.[0]!);\n  const [currentSourceTrack, setCurrentSourceTrack] = useState<SourceTrack>(sourceTracks?.[0]!);\n  const [currentSubtitleTrack, setCurrentSubtitleTrack] = useState<SubtitleTrack | null>(null);\n\n  const getAudioTracks = useCallback(() => (streamingType === 'hls2' ? [] : audioTracks), [audioTracks, streamingType]);\n  const getAudioTrack = useCallback(() => currentAudioTrack?.name, [currentAudioTrack]);\n  const setAudioTrack = useCallback(\n    (audioTrackName: string) => {\n      const audioTrack = audioTracks?.find((audioTrack) => audioTrack.name === audioTrackName);\n      if (audioTrack) {\n        setCurrentAudioTrack(audioTrack);\n      }\n    },\n    [audioTracks],\n  );\n  const getSourceTracks = useCallback(() => uniqBy(sourceTracks, 'src'), [sourceTracks]);\n  const getSourceTrack = useCallback(() => currentSourceTrack?.name, [currentSourceTrack]);\n  const setSourceTrack = useCallback(\n    (sourceTrackName: string) => {\n      const sourceTrack = sourceTracks?.find((sourceTrack) => sourceTrack.name === sourceTrackName);\n      if (sourceTrack) {\n        setCurrentSourceTrack(sourceTrack);\n      }\n    },\n    [sourceTracks],\n  );\n  const getSubtitleTracks = useCallback(() => subtitleTracks, [subtitleTracks]);\n  const getSubtitleTrack = useCallback(() => currentSubtitleTrack?.name, [currentSubtitleTrack]);\n  const setSubtitleTrack = useCallback(\n    (subtitleTrackName?: string) => {\n      const subtitleTrack = subtitleTracks?.find((subtitleTrack) => subtitleTrack.name === subtitleTrackName);\n      setCurrentSubtitleTrack(subtitleTrack || null);\n    },\n    [subtitleTracks],\n  );\n\n  const currentAudioTrackIndex = useMemo(\n    () => audioTracks?.findIndex((audioTrack) => audioTrack.name === currentAudioTrack.name) ?? 0,\n    [audioTracks, currentAudioTrack],\n  );\n  const currentSrc = useMemo(\n    () =>\n      streamingType === 'hls'\n        ? currentSourceTrack?.src.replace(/master-v1a\\d/, `master-v1a${currentAudioTrackIndex + 1}`)\n        : currentSourceTrack?.src,\n    [streamingType, currentAudioTrackIndex, currentSourceTrack?.src],\n  );\n\n  const handleMediaLoaded = useCallback(() => {\n    if (videoRef.current) {\n      videoRef.current.removeEventListener('canplay', handleMediaLoaded);\n\n      // clear existing subtitles\n      while (videoRef.current.firstChild) {\n        // @ts-expect-error\n        videoRef.current.lastChild.track.mode = 'disabled';\n        videoRef.current.removeChild(videoRef.current.lastChild!);\n      }\n\n      if (hlsRef.current) {\n        const audioTrack = find(hlsRef.current.audioTracks, (audioTrack) => audioTrack.name === currentAudioTrack?.name);\n\n        if (audioTrack) {\n          hlsRef.current.audioTrack = audioTrack.id;\n        }\n      } else {\n        // Do not change audio if we don't have it (mostly on HLS)\n        // @ts-expect-error\n        if (videoRef.current.audioTracks?.[currentAudioTrackIndex]) {\n          // @ts-expect-error\n          forEach(videoRef.current.audioTracks, (audioTrack, idx: number) => {\n            audioTrack.enabled = idx === currentAudioTrackIndex;\n          });\n        }\n      }\n\n      if (startTimeRef.current > 0) {\n        videoRef.current.currentTime = startTimeRef.current;\n\n        if (isSettingsOpenRef.current) {\n          videoRef.current.pause();\n        } else {\n          videoRef.current.play();\n        }\n      } else if (autoPlay) {\n        videoRef.current.play();\n      }\n\n      if (currentSubtitleTrack) {\n        const addSubtitleTrack = (src: string) => {\n          if (videoRef.current) {\n            const track = document.createElement('track');\n            videoRef.current.appendChild(track);\n\n            track.src = src;\n            track.kind = 'captions';\n            track.id = currentSubtitleTrack.name;\n            track.label = currentSubtitleTrack.name;\n            track.srclang = currentSubtitleTrack.lang;\n\n            track.track.mode = 'showing';\n          }\n        };\n\n        if (currentSubtitleTrack.src.endsWith('.srt')) {\n          convertToVTT(currentSubtitleTrack.src).then(addSubtitleTrack);\n        } else {\n          addSubtitleTrack(currentSubtitleTrack.src);\n        }\n      }\n    }\n  }, [autoPlay, currentAudioTrackIndex, currentAudioTrack?.name, currentSubtitleTrack]);\n\n  useEffect(() => {\n    if (videoRef.current && currentSrc) {\n      if (isHLSJSActive && currentSrc.includes('.m3u8') && HLS.isSupported()) {\n        const hls = (hlsRef.current = new HLS({\n          enableWebVTT: false,\n          enableCEA708Captions: false,\n        }));\n        hls.attachMedia(videoRef.current);\n        hls.on(HLS.Events.MEDIA_ATTACHED, () => {\n          hls.loadSource(currentSrc);\n        });\n      } else {\n        videoRef.current.src = currentSrc;\n      }\n\n      videoRef.current.addEventListener('canplay', handleMediaLoaded);\n    }\n\n    return () => {\n      if (videoRef.current) {\n        if (videoRef.current.currentTime > 0) {\n          // eslint-disable-next-line\n          startTimeRef.current = videoRef.current.currentTime;\n        }\n        // eslint-disable-next-line\n        videoRef.current.removeEventListener('canplay', handleMediaLoaded);\n      }\n      if (hlsRef.current) {\n        hlsRef.current.destroy();\n        hlsRef.current = null;\n      }\n    };\n  }, [\n    currentSrc,\n    videoRef,\n    startTimeRef,\n    handleMediaLoaded,\n    isHLSJSActive,\n    streamingType,\n    currentAudioTrack,\n    currentSourceTrack,\n    currentSubtitleTrack,\n    currentAudioTrackIndex,\n    audioTracks,\n  ]);\n\n  useEffect(() => {\n    isSettingsOpenRef.current = Boolean(isSettingsOpen);\n  }, [isSettingsOpen]);\n\n  return useMemo(\n    () => ({\n      videoRef: videoRef,\n      getAudioTracks,\n      getAudioTrack,\n      setAudioTrack,\n      getSourceTracks,\n      getSourceTrack,\n      setSourceTrack,\n      getSubtitleTracks,\n      getSubtitleTrack,\n      setSubtitleTrack,\n    }),\n    [\n      videoRef,\n      getAudioTracks,\n      getAudioTrack,\n      setAudioTrack,\n      getSourceTracks,\n      getSourceTrack,\n      setSourceTrack,\n      getSubtitleTracks,\n      getSubtitleTrack,\n      setSubtitleTrack,\n    ],\n  );\n}\n\nfunction useVideoPlayerApi(ref: React.ForwardedRef<MediaRef>, props: OwnProps) {\n  const player = useVideoPlayer(props);\n  const videoRef = player.videoRef;\n\n  const getCurrentTime = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.currentTime;\n    }\n    return 0;\n  }, [videoRef]);\n  const setCurrentTime = useCallback(\n    (currentTime: number) => {\n      if (videoRef.current) {\n        videoRef.current.currentTime = currentTime;\n      }\n    },\n    [videoRef],\n  );\n  const getPlaybackRate = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.playbackRate;\n    }\n    return 1;\n  }, [videoRef]);\n  const setPlaybackRate = useCallback(\n    (playbackRate: number) => {\n      if (videoRef.current) {\n        videoRef.current.playbackRate = playbackRate;\n      }\n    },\n    [videoRef],\n  );\n  const getPaused = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.paused;\n    }\n    return false;\n  }, [videoRef]);\n  const getDuration = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.duration;\n    }\n    return 0;\n  }, [videoRef]);\n  const getError = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.networkState === videoRef.current.NETWORK_NO_SOURCE;\n    }\n    return false;\n  }, [videoRef]);\n  const getLoading = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.readyState < videoRef.current.HAVE_ENOUGH_DATA;\n    }\n    return true;\n  }, [videoRef]);\n  const getProportionLoaded = useCallback(() => {\n    if (videoRef.current) {\n      return (\n        videoRef.current.buffered.length && videoRef.current.buffered.end(videoRef.current.buffered.length - 1) / videoRef.current.duration\n      );\n    }\n    return 0;\n  }, [videoRef]);\n  const getProportionPlayed = useCallback(() => {\n    if (videoRef.current) {\n      return videoRef.current.currentTime / videoRef.current.duration;\n    }\n    return 0;\n  }, [videoRef]);\n  const play = useCallback(async () => {\n    await videoRef.current?.play();\n  }, [videoRef]);\n  const pause = useCallback(() => {\n    videoRef.current?.pause();\n  }, [videoRef]);\n  const playPause = useCallback(async () => {\n    if (getPaused()) {\n      await play();\n    } else {\n      pause();\n    }\n  }, [play, pause, getPaused]);\n  const load = useCallback(() => {\n    videoRef.current?.load();\n  }, [videoRef]);\n\n  const api = useMemo<MediaRef>(\n    () => ({\n      play,\n      pause,\n      playPause,\n      load,\n      get currentTime() {\n        return getCurrentTime();\n      },\n      set currentTime(currentTime) {\n        setCurrentTime(currentTime);\n      },\n      get audioTracks() {\n        return player.getAudioTracks();\n      },\n      get audioTrack() {\n        return player.getAudioTrack();\n      },\n      set audioTrack(audioTrack) {\n        player.setAudioTrack(audioTrack);\n      },\n      get sourceTracks() {\n        return player.getSourceTracks();\n      },\n      get sourceTrack() {\n        return player.getSourceTrack();\n      },\n      set sourceTrack(sourceTrack) {\n        player.setSourceTrack(sourceTrack);\n      },\n      get subtitleTracks() {\n        return player.getSubtitleTracks();\n      },\n      get subtitleTrack() {\n        return player.getSubtitleTrack();\n      },\n      set subtitleTrack(subtitleTrack) {\n        player.setSubtitleTrack(subtitleTrack);\n      },\n      get playbackRate() {\n        return getPlaybackRate();\n      },\n      set playbackRate(playbackRate) {\n        setPlaybackRate(playbackRate);\n      },\n      get paused() {\n        return getPaused();\n      },\n      get duration() {\n        return getDuration();\n      },\n      get error() {\n        return getError();\n      },\n      get loading() {\n        return getLoading();\n      },\n      get proportionLoaded() {\n        return getProportionLoaded();\n      },\n      get proportionPlayed() {\n        return getProportionPlayed();\n      },\n    }),\n    [\n      player,\n      play,\n      pause,\n      playPause,\n      load,\n      getCurrentTime,\n      setCurrentTime,\n      getPlaybackRate,\n      setPlaybackRate,\n      getPaused,\n      getDuration,\n      getError,\n      getLoading,\n      getProportionLoaded,\n      getProportionPlayed,\n    ],\n  );\n\n  useImperativeHandle(ref, () => api, [api]);\n\n  return useMemo(\n    () => ({\n      api,\n      player,\n    }),\n    [api, player],\n  );\n}\n\nconst MEDIA_EVENTS = [\n  'onAbort',\n  'onCanPlay',\n  'onCanPlayThrough',\n  'onDurationChange',\n  'onEmptied',\n  'onEncrypted',\n  'onEnded',\n  'onError',\n  'onLoadedData',\n  'onLoadedMetadata',\n  'onLoadStart',\n  'onPause',\n  'onPlay',\n  'onPlaying',\n  'onProgress',\n  'onRateChange',\n  'onSeeked',\n  'onSeeking',\n  'onStalled',\n  'onSuspend',\n  'onTimeUpdate',\n  'onVolumeChange',\n  'onWaiting',\n] as const;\n\ntype MediaEvents = keyof typeof MEDIA_EVENTS;\n\nexport type MediaProps = OwnProps & React.HTMLAttributes<HTMLVideoElement>;\n\nconst Media = React.forwardRef<MediaRef, MediaProps>(\n  (\n    { autoPlay, audioTracks, sourceTracks, subtitleTracks, streamingType, isSettingsOpen, onUpdate, className, mediaComponent, ...props },\n    ref,\n  ) => {\n    const handleUpdate = useCallback(() => {\n      onUpdate?.();\n    }, [onUpdate]);\n    const eventProps = useMemo(\n      () =>\n        MEDIA_EVENTS.reduce<Partial<Record<MediaEvents, Function>>>(\n          (result, event) => ({\n            ...result,\n            [event]: (...args: any[]) => {\n              handleUpdate();\n              // @ts-expect-error\n              props[event]?.(...args);\n            },\n          }),\n          {},\n        ),\n      [props, handleUpdate],\n    );\n    const { player } = useVideoPlayerApi(ref, { autoPlay, audioTracks, sourceTracks, subtitleTracks, streamingType, isSettingsOpen });\n\n    return <video {...props} {...eventProps} autoPlay={false} className={cx('w-screen h-screen', className)} ref={player.videoRef} />;\n  },\n);\n\nexport default Media;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { VideoPlayerBase } from '@enact/moonstone/VideoPlayer';\nimport map from 'lodash/map';\n\nimport { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\nimport Popup from 'components/popup';\nimport Select from 'components/select';\n\nconst NONE = 'NONE';\n\ntype Props = {\n  visible: boolean;\n  onClose: () => void;\n  player: React.MutableRefObject<VideoPlayerBase | undefined>;\n};\n\nconst Settings: React.FC<Props> = ({ visible, onClose, player }) => {\n  const [isOpen, setIsOpen] = useState(visible);\n  const [audios, setAudios] = useState<AudioTrack[]>([]);\n  const [currentAudio, setCurrentAudio] = useState<string | null>(null);\n  const [sources, setSources] = useState<SourceTrack[]>([]);\n  const [currentSource, setCurrentSource] = useState<string | null>(null);\n  const [subtitles, setSubtitles] = useState<SubtitleTrack[]>([]);\n  const [currentSubtitle, setCurrentSubtitle] = useState<string | null>(NONE);\n\n  const audioOptions = useMemo(() => map(audios, (audio) => ({ title: audio.name, value: audio.name })), [audios]);\n  const sourceOptions = useMemo(() => map(sources, (source) => ({ title: source.name, value: source.name })), [sources]);\n  const subtitleOptions = useMemo(\n    () => [{ title: 'Нет', value: NONE }, ...map(subtitles, (subtitle) => ({ title: subtitle.name, value: subtitle.name }))],\n    [subtitles],\n  );\n\n  const handleVideoUpdate = useCallback(\n    (name: string, value: string) => {\n      if (player.current) {\n        const video: any = player.current.getVideoNode();\n\n        video[name] = value;\n      }\n    },\n    [player],\n  );\n\n  const handleAudioChange = useCallback(\n    (audio: string) => () => {\n      setCurrentAudio(audio);\n      handleVideoUpdate('audioTrack', audio);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSourceChange = useCallback(\n    (source: string) => () => {\n      setCurrentSource(source);\n      handleVideoUpdate('sourceTrack', source);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSubtitleChange = useCallback(\n    (subtitle: string) => () => {\n      setCurrentSubtitle(subtitle);\n      handleVideoUpdate('subtitleTrack', subtitle);\n    },\n    [handleVideoUpdate],\n  );\n\n  const handleClose = useCallback(() => {\n    onClose();\n  }, [onClose]);\n\n  useEffect(() => {\n    if (visible && player.current) {\n      const video: any = player.current.getVideoNode();\n      const { audioTracks, audioTrack, sourceTracks, sourceTrack, subtitleTracks, subtitleTrack } = video;\n\n      if (audioTracks?.length > 1 || sourceTracks?.length > 1 || subtitleTracks?.length > 0) {\n        setAudios(audioTracks);\n        setCurrentAudio(audioTrack);\n\n        setSources(sourceTracks);\n        setCurrentSource(sourceTrack);\n\n        setSubtitles(subtitleTracks);\n        setCurrentSubtitle(subtitleTrack || NONE);\n      } else {\n        handleClose();\n      }\n    }\n  }, [visible, player, handleClose]);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n\n    if (visible) {\n      timeoutId = setTimeout(() => {\n        setIsOpen(true);\n      }, 100);\n    } else {\n      setIsOpen(false);\n    }\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [visible]);\n\n  return (\n    <Popup visible={isOpen} onClose={handleClose}>\n      {audioOptions.length > 1 && (\n        <Select\n          className=\"my-4\"\n          label=\"Звук\"\n          value={currentAudio}\n          options={audioOptions}\n          onChange={handleAudioChange}\n          splitIn={2}\n          closeOnChange\n        />\n      )}\n      {sourceOptions.length > 1 && (\n        <Select\n          className=\"my-4\"\n          label=\"Качество\"\n          value={currentSource}\n          options={sourceOptions}\n          onChange={handleSourceChange}\n          splitIn={5}\n          closeOnChange\n        />\n      )}\n      {subtitleOptions.length > 1 && (\n        <Select\n          className=\"my-4\"\n          label=\"Субтитры\"\n          value={currentSubtitle}\n          options={subtitleOptions}\n          onChange={handleSubtitleChange}\n          splitIn={5}\n          closeOnChange\n        />\n      )}\n    </Popup>\n  );\n};\n\nexport default Settings;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { VideoPlayerBase } from '@enact/moonstone/VideoPlayer';\n\nimport Button from 'components/button';\n\nimport { secondsToDuration } from 'utils/date';\n\ntype Props = {\n  player: React.MutableRefObject<VideoPlayerBase | undefined>;\n  startTime?: number;\n  startInDelay?: number;\n};\n\nconst StartFrom: React.FC<Props> = ({ startTime, startInDelay = 5, player }) => {\n  const [visible, setVisible] = useState(true);\n  const [startIn, setStartIn] = useState(startInDelay);\n  const startFrom = useMemo(() => secondsToDuration(startTime), [startTime]);\n\n  const handleStartFromClick = useCallback(() => {\n    if (player.current) {\n      setVisible(false);\n      const video: any = player.current.getVideoNode();\n\n      video.currentTime = startTime;\n    }\n  }, [startTime, player]);\n  const handleStartFromBeginingClick = useCallback(() => {\n    setVisible(false);\n  }, []);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n\n    if (visible) {\n      intervalId = setInterval(() => {\n        setStartIn((prevStartIn) => {\n          const newStartIn = prevStartIn - 1;\n\n          if (newStartIn <= 0) {\n            handleStartFromClick();\n          }\n\n          return newStartIn;\n        });\n      }, 1000);\n    }\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [visible, handleStartFromClick]);\n\n  if (!startTime || !visible) {\n    return null;\n  }\n\n  return (\n    <div className=\"flex justify-center absolute w-full z-101 bottom-32\">\n      <Button onClick={handleStartFromClick}>\n        Смотреть с {startFrom} через {startIn}\n      </Button>\n      <Button autoFocus onClick={handleStartFromBeginingClick}>\n        Смотреть с начала\n      </Button>\n    </div>\n  );\n};\n\nexport default StartFrom;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport VideoPlayer, { VideoPlayerBase, VideoPlayerBaseProps } from '@enact/moonstone/VideoPlayer';\n\nimport Button from 'components/button';\nimport Media, { AudioTrack, SourceTrack, StreamingType, SubtitleTrack } from 'components/media';\nimport Text from 'components/text';\nimport useButtonEffect from 'hooks/useButtonEffect';\n\nimport Settings from './settings';\nimport StartFrom from './startFrom';\n\nexport type PlayerProps = {\n  title: string;\n  description?: string;\n  poster: string;\n  audios?: AudioTrack[];\n  sources: SourceTrack[];\n  subtitles?: SubtitleTrack[];\n  startTime?: number;\n  timeSyncInterval?: number;\n  streamingType?: StreamingType;\n  onPlay?: () => void;\n  onPause?: (currentTime: number) => void;\n  onEnded?: (currentTime: number) => void;\n  onTimeSync?: (currentTime: number) => void | Promise<void>;\n} & VideoPlayerBaseProps;\n\nconst Player: React.FC<PlayerProps> = ({\n  title,\n  description,\n  poster,\n  audios,\n  sources,\n  subtitles,\n  startTime,\n  timeSyncInterval = 30,\n  streamingType,\n  onPlay,\n  onPause,\n  onEnded,\n  onTimeSync,\n  ...props\n}) => {\n  const playerRef = useRef<VideoPlayerBase>();\n  const [isPaused, setIsPaused] = useState(true);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n\n  const handlePlay = useCallback(() => {\n    setIsPaused(false);\n    setIsSettingsOpen(false);\n    onPlay?.();\n  }, [onPlay]);\n  const handlePause = useCallback(\n    (e) => {\n      setIsPaused(true);\n      onPause?.(e.currentTime);\n    },\n    [onPause],\n  );\n  const handleEnded = useCallback(\n    (e) => {\n      onEnded?.(e.target.currentTime);\n    },\n    [onEnded],\n  );\n  const handleTimeSync = useCallback(async () => {\n    if (playerRef.current && onTimeSync) {\n      const video: any = playerRef.current.getVideoNode();\n\n      const currentTime = video['currentTime'];\n\n      await onTimeSync(currentTime);\n    }\n  }, [onTimeSync, playerRef]);\n  const handleLoadedMetadata = useCallback(() => {\n    setIsLoaded(true);\n  }, []);\n  const handleSettingsOpen = useCallback(() => {\n    if (playerRef.current) {\n      setIsSettingsOpen(true);\n\n      const video: any = playerRef.current.getVideoNode();\n      video.pause();\n    }\n  }, [playerRef]);\n  const handleSettingsClose = useCallback(() => {\n    if (playerRef.current) {\n      setIsSettingsOpen(false);\n\n      const video: any = playerRef.current.getVideoNode();\n      video.play();\n    }\n  }, []);\n  const handlePauseButton = useCallback(() => {\n    if (playerRef.current) {\n      const video: any = playerRef.current.getVideoNode();\n      video.pause();\n    }\n  }, [playerRef]);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n\n    if (isPaused) {\n      timeoutId = setTimeout(() => {\n        setIsPaused(false);\n      }, 5 * 1000);\n    }\n\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [isPaused]);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n\n    if (onTimeSync) {\n      intervalId = setInterval(handleTimeSync, timeSyncInterval * 1000);\n    }\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [timeSyncInterval, onTimeSync, handleTimeSync]);\n\n  useButtonEffect('Back', handleTimeSync);\n  useButtonEffect('Blue', handleSettingsOpen);\n  useButtonEffect('Play', handleSettingsClose);\n  useButtonEffect('Pause', handlePauseButton);\n  useButtonEffect('ArrowUp', handleSettingsOpen);\n\n  return (\n    <>\n      <Settings visible={isSettingsOpen} onClose={handleSettingsClose} player={playerRef} />\n      {isPaused && <Text className=\"absolute z-10 top-0 p-4\">{title}</Text>}\n      {isPaused && (\n        <Button className=\"absolute z-101 bottom-8 right-10 text-blue-600\" icon=\"settings\" iconOnly onClick={handleSettingsOpen} />\n      )}\n      {isLoaded && startTime! > 0 && <StartFrom startTime={startTime} player={playerRef} />}\n\n      <VideoPlayer\n        {...props}\n        //@ts-expect-error\n        ref={playerRef}\n        poster={poster}\n        title={description}\n        onPlay={handlePlay}\n        onPause={handlePause}\n        onEnded={handleEnded}\n        onLoadedMetadata={handleLoadedMetadata}\n        streamingType={streamingType}\n        isSettingsOpen={isSettingsOpen}\n        audioTracks={audios}\n        sourceTracks={sources}\n        subtitleTracks={subtitles}\n        videoComponent={<Media />}\n      />\n    </>\n  );\n};\n\nexport default Player;\n"],"sourceRoot":""}