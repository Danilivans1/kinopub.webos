{"version":3,"sources":["components/text/text.tsx","hooks/useApi.ts","../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../node_modules/react-query/es/react/useBaseQuery.js","../node_modules/react-query/es/react/useQuery.js","components/popup/popup.tsx","../node_modules/react-query/es/core/queryObserver.js","utils/video.ts","utils/subtitles.ts","components/media/media.tsx","components/player/settings.tsx","components/player/player.tsx","utils/item.ts","views/video/video.tsx"],"names":["Text","styled","BodyText","useApi","method","params","options","client","useMemo","ApiClient","query","useQuery","createValue","_isReset","clearReset","reset","isReset","QueryErrorResetBoundaryContext","React","createContext","useBaseQuery","Observer","mountedRef","useRef","forceUpdate","useState","queryClient","useQueryClient","errorResetBoundary","useContext","defaultedOptions","defaultQueryObserverOptions","optimisticResults","onError","notifyManager","batchCalls","onSuccess","onSettled","suspense","staleTime","useErrorBoundary","retryOnMount","observer","result","getOptimisticResult","useEffect","current","unsubscribe","subscribe","x","updateResult","setOptions","listeners","isLoading","fetchOptimistic","then","_ref","data","catch","error","undefined","isError","isFetching","notifyOnChangeProps","trackResult","arg1","arg2","arg3","parsedOptions","parseQueryArgs","QueryObserver","Popup","visible","onVisibilityChange","props","handleShow","useCallback","handleClose","handleCloseOnBackButton","useBackButtonEffect","open","onShow","onClose","_Subscribable","_this","call","this","trackedProps","previousSelectError","bindMethods","_inheritsLoose","_proto","prototype","remove","bind","refetch","onSubscribe","length","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","shouldFetchOnReconnect","enabled","refetchOnReconnect","isStale","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearTimers","removeObserver","notifyOptions","prevOptions","prevQuery","Error","queryKey","updateQuery","mounted","hasListeners","shouldFetchOptionally","updateStaleTimeout","refetchInterval","updateRefetchInterval","getQueryCache","build","createResult","getCurrentResult","currentResult","_this2","trackedResult","Object","keys","forEach","key","defineProperty","configurable","enumerable","get","typedKey","includes","push","getNextResult","_this3","Promise","resolve","reject","throwOnError","getCurrentQuery","fetch","_this4","fetchOptions","_this5","promise","noop","_this6","clearStaleTimeout","isServer","isValidTimeout","timeout","timeUntilStale","dataUpdatedAt","staleTimeoutId","setTimeout","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","clearInterval","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","state","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","status","isPreviousData","isPlaceholderData","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","isSuccess","select","structuralSharing","replaceEqualDeep","selectError","getLogger","Date","now","placeholderData","isIdle","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangePropsExclusions","includedProps","some","changed","isIncluded","isExcluded","shallowEqualObjects","defaultNotifyOptions","cache","notify","_extends","onQueryUpdate","action","type","isCancelledError","_this8","batch","listener","Subscribable","shouldLoadOnMount","refetchOnMount","shouldRefetchOnMount","isStaleByTime","formatIdx","idx","mapAudios","audios","map","audio","lang","name","filter","title","author","toUpper","codec","join","mapSources","files","streamingType","file","src","url","http","quality","mapSubtitles","subtitles","subtitle","WebVTTConverter","resource","objectURL","reader","FileReader","addEventListener","event","buf","target","Uint8Array","readAsArrayBuffer","Blob","TextDecoder","blobToString","decoded","text","concat","toVTT","blob","URL","createObjectURL","blobToBuffer","buffer","utf8str","decode","success","fail","readAsText","replace","str","split","each","parseInt","charCodeAt","from","a","converter","getURL","Media","hls","media","startTime","currentTime","setState","handleLoaded","play","HLS","isSupported","attachMedia","on","Events","MEDIA_ATTACHED","loadSource","MANIFEST_PARSED","uniq","audioTracks","audioTrack","find","id","audioTracksIndex","Array","findIndex","uniqBy","sourceTracks","sourceTrack","load","subtitleTracks","subtitleTrack","textTracks","textTrack","mode","label","track","document","createElement","kind","srclang","showTrack","endsWith","convertToVTT","appendChild","UIMedia","NONE","Wrapper","div","Section","SectionTitle","SectionContent","SectionContentItem","width","Settings","player","setVisible","setAudios","currentAudio","setCurrentAudio","sources","setSources","currentSource","setCurrentSource","setSubtitles","currentSubtitle","setCurrentSubtitle","handleVideoUpdate","value","getVideoNode","handleAudioChange","handleSourceChange","source","handleSubtitleChange","handleVisibilityChange","newVisible","listiner","e","isArrowUpButton","video","pause","isPlayButton","window","removeEventListener","selected","onToggle","Title","Player","description","poster","timeSyncInterval","onPlay","onPause","onEnded","onTimeSync","playerRef","titleVisible","setTitleVisible","handlePlay","handlePause","handleEnded","handleTimeSync","timeoutId","intervalId","ref","jumpBy","videoComponent","getItemTitle","item","season","number","usePrevNextVideos","nextVideo","videos","episodes","nextSeason","seasons","useNextVideo","previousVideo","previousSeason","usePreviousVideo","VideoView","history","useHistory","location","useLocation","watchingMarkTimeAsync","useApiMutation","useStorageState","currentVideo","setCurrentVideo","currentVideoLinks","saveCurrentTime","playerProps","posters","wide","big","watching","WatchingStatus","Watching","time","handleOnEnded","goBack","handleJumpBackward","handleJumpForward","onJumpBackward","onJumpForward"],"mappings":"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","file":"static/js/15.25edd97f.chunk.js","sourcesContent":["import BodyText from '@enact/moonstone/BodyText';\nimport styled from 'styled-components';\n\nconst Text = styled(BodyText)``;\n\nexport default Text;\n","import { useMemo } from 'react';\nimport { UseQueryOptions, useQuery } from 'react-query';\n\nimport ApiClient from 'api';\n\ntype Unpromise<T> = T extends Promise<infer U> ? U : T;\n\nexport type Methods = {\n  [method in keyof ApiClient]: ApiClient[method] extends Function ? Unpromise<ReturnType<ApiClient[method]>> : never;\n};\n\nexport type Method = keyof ApiClient & string;\n\nfunction useApi<T extends Method>(\n  method: T,\n  params: Parameters<ApiClient[T]> = [] as Parameters<ApiClient[T]>,\n  options?: UseQueryOptions<Methods[T]>,\n) {\n  const client = useMemo(() => new ApiClient(), []);\n  const query = useQuery<Methods[T]>(\n    [method, ...params],\n    () =>\n      // @ts-expect-error\n      client[method](...params) as Methods[T],\n    options,\n  );\n\n  return query;\n}\n\nexport default useApi;\n","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var _React$useState2 = React.useState(function () {\n    return new Observer(queryClient, defaultedOptions);\n  }),\n      observer = _React$useState2[0];\n\n  var result = observer.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary, observer]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if ((defaultedOptions.suspense || defaultedOptions.useErrorBoundary) && result.isError && !result.isFetching) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = observer.trackResult(result);\n  }\n\n  return result;\n}","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}","import { useCallback } from 'react';\nimport MoonstonePopup, { PopupProps } from '@enact/moonstone/Popup';\n\nimport useBackButtonEffect from 'hooks/useBackButtonEffect';\n\ntype Props = {\n  visible: boolean;\n  onVisibilityChange: (visible: boolean) => void;\n} & Omit<PopupProps, 'open' | 'onShow' | 'onClose'>;\n\nconst Popup: React.FC<Props> = ({ visible, onVisibilityChange, ...props }) => {\n  const handleShow = useCallback(() => {\n    onVisibilityChange(true);\n  }, [onVisibilityChange]);\n  const handleClose = useCallback(() => {\n    onVisibilityChange(false);\n  }, [onVisibilityChange]);\n\n  const handleCloseOnBackButton = useCallback(() => {\n    if (visible) {\n      onVisibilityChange(false);\n\n      return false;\n    }\n  }, [visible, onVisibilityChange]);\n\n  useBackButtonEffect(handleCloseOnBackButton);\n\n  return <MoonstonePopup {...props} open={visible} onShow={handleShow} onClose={handleClose} />;\n};\n\nexport default Popup;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.previousSelectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval)) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result) {\n    var _this2 = this;\n\n    var trackedResult = {};\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          var typedKey = key;\n\n          if (!_this2.trackedProps.includes(typedKey)) {\n            _this2.trackedProps.push(typedKey);\n          }\n\n          return result[typedKey];\n        }\n      });\n    });\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(options);\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select) && !this.previousSelectError) {\n          data = prevResult.data;\n        } else {\n          try {\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    if (result === prevResult) {\n      return false;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","import filter from 'lodash/filter';\nimport map from 'lodash/map';\nimport toUpper from 'lodash/toUpper';\n\nimport { Audio, Streaming, Subtitle } from 'api';\nimport { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\n\nconst formatIdx = (idx: number) => (idx < 10 ? `0${idx}` : idx);\n\nexport function mapAudios(audios: Audio[]): AudioTrack[] {\n  return map(audios, (audio, idx) => ({\n    lang: audio.lang,\n    name: filter([\n      `${formatIdx(idx + 1)}.`,\n      audio.type?.title && audio.author?.title ? `${audio.type?.title}.` : audio.type?.title,\n      audio.author?.title,\n      audio.type?.title || audio.author?.title ? `(${toUpper(audio.lang)})` : toUpper(audio.lang),\n      audio.codec !== 'aac' && toUpper(audio.codec),\n    ]).join(' '),\n  }));\n}\n\nexport function mapSources(\n  files: { url: string | { [key in Streaming]?: string }; quality?: string }[],\n  streamingType?: Streaming,\n): SourceTrack[] {\n  return map(files, (file) => ({\n    src: (typeof file.url === 'string' ? file.url : file.url[streamingType!] || file.url.http) as string,\n    name: file.quality!,\n  }));\n}\n\nexport function mapSubtitles(subtitles: Subtitle[]): SubtitleTrack[] {\n  return map(subtitles, (subtitle, idx) => ({\n    src: subtitle.url,\n    lang: subtitle.lang,\n    name: `${toUpper(subtitle.lang)} #${formatIdx(idx + 1)}`,\n  }));\n}\n","class WebVTTConverter {\n  resource: Blob;\n\n  private objectURL?: string;\n\n  constructor(resource: Blob) {\n    this.resource = resource;\n  }\n\n  blobToBuffer() {\n    return new Promise<ArrayBuffer>((resolve, reject) => {\n      const reader = new FileReader();\n      reader.addEventListener('loadend', (event) => {\n        const buf = event.target?.result;\n        resolve(new Uint8Array(buf as ArrayBuffer));\n      });\n      reader.addEventListener('error', () => reject('Error while reading the Blob object'));\n      reader.readAsArrayBuffer(this.resource);\n    });\n  }\n\n  static blobToString(blob: Blob, success: (text: string) => void, fail: () => void) {\n    const reader = new FileReader();\n    reader.addEventListener('loadend', (event) => {\n      const text = event.target?.result;\n      success(text as string);\n    });\n    reader.addEventListener('error', () => fail());\n    reader.readAsText(blob);\n  }\n\n  /**\n   * @param {*} utf8str\n   */\n  static toVTT(utf8str: string) {\n    return utf8str\n      .replace(/\\{\\\\([ibu])\\}/g, '</$1>')\n      .replace(/\\{\\\\([ibu])1\\}/g, '<$1>')\n      .replace(/\\{([ibu])\\}/g, '<$1>')\n      .replace(/\\{\\/([ibu])\\}/g, '</$1>')\n      .replace(/(\\d\\d:\\d\\d:\\d\\d),(\\d\\d\\d)/g, '$1.$2')\n      .concat('\\r\\n\\r\\n');\n  }\n\n  static toTypedArray(str: string) {\n    const result: number[] = [];\n    str.split('').forEach((each) => {\n      result.push(parseInt(`${each.charCodeAt(0)}`, 16));\n    });\n    return Uint8Array.from(result);\n  }\n\n  getURL() {\n    return new Promise<string>((resolve, reject) => {\n      if (!(this.resource instanceof Blob)) return reject('Expecting resource to be a Blob but something else found.');\n      if (!FileReader) return reject('No FileReader constructor found');\n      if (!TextDecoder) return reject('No TextDecoder constructor found');\n      return WebVTTConverter.blobToString(\n        this.resource,\n        (decoded) => {\n          const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n          const text = vttString.concat(WebVTTConverter.toVTT(decoded));\n          const blob = new Blob([text], { type: 'text/vtt' });\n          this.objectURL = URL.createObjectURL(blob);\n\n          return resolve(this.objectURL);\n        },\n        () => {\n          this.blobToBuffer().then((buffer) => {\n            const utf8str = new TextDecoder('utf-8').decode(buffer);\n            const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n            const text = vttString.concat(WebVTTConverter.toVTT(utf8str));\n            const blob = new Blob([text], { type: 'text/vtt' });\n            this.objectURL = URL.createObjectURL(blob);\n\n            return resolve(this.objectURL);\n          });\n        },\n      );\n    });\n  }\n\n  release() {\n    URL.createObjectURL(this.objectURL);\n  }\n}\n\nexport async function convertToVTT(src: string) {\n  const file = await (await fetch(src)).blob();\n  const converter = new WebVTTConverter(file);\n\n  return converter.getURL();\n}\n","import UIMedia, { MediaProps } from '@enact/ui/Media';\nimport HLS from 'hls.js';\nimport uniq from 'lodash/uniq';\nimport uniqBy from 'lodash/uniqBy';\n\nimport { convertToVTT } from 'utils/subtitles';\n\nexport type AudioTrack = {\n  name: string;\n  lang: string;\n};\n\nexport type SourceTrack = {\n  src: string;\n  name: string;\n};\n\nexport type SubtitleTrack = {\n  src: string;\n  name: string;\n  lang: string;\n};\n\nclass Media extends UIMedia {\n  hls?: HLS;\n\n  media!: HTMLMediaElement & {\n    audioTracks?: { enabled?: boolean; label: string }[];\n  };\n\n  state!: {\n    src: string;\n  };\n\n  props!: MediaProps & {\n    startTime?: number;\n    audioTracks?: AudioTrack[];\n    sourceTracks: SourceTrack[];\n    subtitleTracks?: SubtitleTrack[];\n  };\n\n  load(src: string) {\n    let startTime = this.props.startTime;\n\n    if (this.state?.src && this.state.src !== src) {\n      startTime = this.media.currentTime;\n    }\n\n    this.destroy();\n\n    const media = this.media;\n\n    this.setState({ src });\n\n    const handleLoaded = () => {\n      if (startTime) {\n        media.currentTime = startTime;\n      }\n\n      media.play();\n    };\n\n    if (src.includes('.m3u8') && HLS.isSupported()) {\n      const hls = (this.hls = new HLS());\n\n      hls.attachMedia(media);\n      hls.on(HLS.Events.MEDIA_ATTACHED, () => {\n        hls.loadSource(src);\n        hls.on(HLS.Events.MANIFEST_PARSED, handleLoaded);\n      });\n\n      return;\n    }\n\n    media.src = src;\n    media.addEventListener('loadedmetadata', handleLoaded);\n  }\n\n  get audioTracks() {\n    if (this.hls) {\n      return uniq(this.hls.audioTracks.map((audioTrack) => audioTrack.name));\n    }\n\n    return this.props.audioTracks?.map((audioTrack) => audioTrack.name);\n  }\n\n  get audioTrack() {\n    if (this.hls) {\n      return this.hls.audioTracks.find((audioTrack) => audioTrack.id === this.hls?.audioTrack)?.name!;\n    }\n\n    const audioTracksIndex = Array.from(this.media.audioTracks || []).findIndex((audioTrack) => audioTrack.enabled);\n\n    return this.props.audioTracks?.[audioTracksIndex]?.name!;\n  }\n\n  set audioTrack(name: string) {\n    if (this.hls) {\n      const audioTrack = this.hls.audioTracks.find((audioTrack) => audioTrack.name === name);\n\n      if (audioTrack) {\n        this.hls.audioTrack = audioTrack.id;\n      }\n    } else {\n      const audioTracks = Array.from(this.media.audioTracks || []);\n      let audioTracksIndex = this.props.audioTracks?.findIndex((audioTrack) => audioTrack.name === name);\n\n      if (!audioTracksIndex || audioTracksIndex > audioTracks.length - 1) {\n        audioTracksIndex = 0;\n      }\n\n      audioTracks.forEach((audioTrack, idx) => {\n        audioTrack.enabled = idx === audioTracksIndex;\n      });\n    }\n  }\n\n  get sourceTracks() {\n    return uniqBy(this.props.sourceTracks, 'src').map((sourceTrack) => sourceTrack.name);\n  }\n\n  get sourceTrack() {\n    return this.props.sourceTracks.find((sourceTrack) => sourceTrack.src === this.state.src)?.name!;\n  }\n\n  set sourceTrack(name: string) {\n    const sourceTrack = this.props.sourceTracks.find((sourceTrack) => sourceTrack.name === name);\n\n    if (sourceTrack) {\n      this.load(sourceTrack.src);\n    }\n  }\n\n  get subtitleTracks() {\n    if (this.hls) {\n      return this.hls.subtitleTracks.map((subtitleTrack) => subtitleTrack.name);\n    }\n\n    return this.props.subtitleTracks?.map((subtitleTrack) => subtitleTrack.name);\n  }\n\n  get subtitleTrack() {\n    if (this.hls) {\n      return this.hls.subtitleTracks.find((subtitleTrack) => subtitleTrack.id === this.hls?.subtitleTrack)?.name!;\n    }\n\n    return Array.from(this.media.textTracks || []).find((textTrack) => textTrack.mode === 'showing')?.label!;\n  }\n\n  set subtitleTrack(name: string) {\n    if (this.hls) {\n      this.hls.subtitleTrack = this.hls.subtitleTracks.find((subtitle) => subtitle.name === name)?.id ?? -1;\n    } else {\n      const textTracks = Array.from(this.media.textTracks || []);\n\n      textTracks.forEach((textTrack) => {\n        textTrack.mode = 'disabled';\n      });\n\n      const subtitleTrack = textTracks.find((textTrack) => textTrack.label === name);\n\n      if (subtitleTrack) {\n        subtitleTrack.mode = 'showing';\n      } else {\n        const subtitleTrack = this.props.subtitleTracks?.find((subtitleTrack) => subtitleTrack.name === name);\n\n        if (subtitleTrack) {\n          const track = document.createElement('track');\n\n          track.kind = 'captions';\n          track.id = subtitleTrack.name;\n          track.srclang = subtitleTrack.lang;\n          track.label = subtitleTrack.name;\n\n          const showTrack = (src: string) => {\n            track.src = src;\n            track.track.mode = 'showing';\n          };\n\n          if (subtitleTrack.src.endsWith('.srt')) {\n            convertToVTT(subtitleTrack.src).then(showTrack);\n          } else {\n            showTrack(subtitleTrack.src);\n          }\n\n          this.media.appendChild(track);\n        }\n      }\n    }\n  }\n\n  private destroy() {\n    if (this.hls) {\n      this.hls.destroy();\n    } else {\n      this.media.src = '';\n    }\n  }\n\n  componentDidMount() {\n    this.load(this.props.sourceTracks[0].src);\n\n    super.componentDidMount?.();\n  }\n\n  componentDidUpdate() {}\n\n  componentWillUnmount() {\n    this.destroy();\n\n    super.componentWillUnmount?.();\n  }\n}\n\nexport default Media;\n","import { useCallback, useEffect, useState } from 'react';\nimport CheckboxItem from '@enact/moonstone/CheckboxItem';\nimport { VideoPlayerBase } from '@enact/moonstone/VideoPlayer';\nimport map from 'lodash/map';\nimport styled from 'styled-components';\n\nimport Popup from 'components/popup';\nimport Text from 'components/text';\n\nimport { isArrowUpButton, isPlayButton } from 'utils/keyboard';\n\nconst NONE = 'NONE';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Section = styled.div`\n  padding: 0 1rem;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SectionTitle = styled(Text)`\n  width: 5rem;\n`;\n\nconst SectionContent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst SectionContentItem = styled.div<{ width?: string | number }>`\n  width: ${(props) => props.width};\n  padding-right: 1rem;\n  box-sizing: border-box;\n`;\n\ntype Props = {\n  player: React.MutableRefObject<VideoPlayerBase | undefined>;\n};\n\nconst Settings: React.FC<Props> = ({ player }) => {\n  const [visible, setVisible] = useState(false);\n\n  const [audios, setAudios] = useState<string[]>([]);\n  const [currentAudio, setCurrentAudio] = useState<string | null>(null);\n  const [sources, setSources] = useState<string[]>([]);\n  const [currentSource, setCurrentSource] = useState<string | null>(null);\n  const [subtitles, setSubtitles] = useState<string[]>([]);\n  const [currentSubtitle, setCurrentSubtitle] = useState<string | null>(null);\n\n  const handleVideoUpdate = useCallback(\n    (name: string, value: string) => {\n      if (player.current) {\n        const video: any = player.current.getVideoNode();\n\n        video[name] = value;\n      }\n    },\n    [player],\n  );\n\n  const handleAudioChange = useCallback(\n    (audio: string) => () => {\n      setCurrentAudio(audio);\n      handleVideoUpdate('audioTrack', audio);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSourceChange = useCallback(\n    (source: string) => () => {\n      setCurrentSource(source);\n      handleVideoUpdate('sourceTrack', source);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSubtitleChange = useCallback(\n    (subtitle: string) => () => {\n      setCurrentSubtitle(subtitle);\n      handleVideoUpdate('subtitleTrack', subtitle);\n    },\n    [handleVideoUpdate],\n  );\n\n  const handleVisibilityChange = useCallback(\n    (newVisible: boolean) => {\n      setVisible(newVisible);\n\n      if (player.current && !newVisible) {\n        player.current.play();\n      }\n    },\n    [player],\n  );\n\n  useEffect(() => {\n    const listiner = (e: KeyboardEvent) => {\n      if (isArrowUpButton(e)) {\n        if (player.current) {\n          const video: any = player.current.getVideoNode();\n          const { audioTracks, audioTrack, sourceTracks, sourceTrack, subtitleTracks, subtitleTrack } = video;\n\n          if (audioTracks?.length > 1 || sourceTracks?.length > 1 || subtitleTracks?.length > 0) {\n            setAudios(audioTracks);\n            setCurrentAudio(audioTrack);\n\n            setSources(sourceTracks);\n            setCurrentSource(sourceTrack);\n\n            setSubtitles(subtitleTracks);\n            setCurrentSubtitle(subtitleTrack);\n\n            player.current.pause();\n\n            setVisible(true);\n          }\n        }\n      } else if (isPlayButton(e)) {\n        setVisible(false);\n      }\n    };\n\n    window.addEventListener('keydown', listiner);\n\n    return () => {\n      window.removeEventListener('keydown', listiner);\n    };\n  }, [visible, player]);\n\n  return (\n    <Popup visible={visible} onVisibilityChange={handleVisibilityChange}>\n      <Wrapper>\n        {audios?.length > 1 && (\n          <Section>\n            <SectionTitle>Звук</SectionTitle>\n\n            <SectionContent>\n              {map(audios, (audio) => (\n                <SectionContentItem key={audio} width=\"50%\">\n                  <CheckboxItem selected={audio === currentAudio} onToggle={handleAudioChange(audio)}>\n                    {audio}\n                  </CheckboxItem>\n                </SectionContentItem>\n              ))}\n            </SectionContent>\n          </Section>\n        )}\n        {sources?.length > 1 && (\n          <Section>\n            <SectionTitle>Качество</SectionTitle>\n\n            <SectionContent>\n              {map(sources, (source) => (\n                <SectionContentItem key={source} width=\"15%\">\n                  <CheckboxItem selected={source === currentSource} onToggle={handleSourceChange(source)}>\n                    {source}\n                  </CheckboxItem>\n                </SectionContentItem>\n              ))}\n            </SectionContent>\n          </Section>\n        )}\n        {subtitles?.length > 0 && (\n          <Section>\n            <SectionTitle>Субтитры</SectionTitle>\n\n            <SectionContent>\n              <SectionContentItem width=\"15%\">\n                <CheckboxItem selected={!currentSubtitle || currentSubtitle === NONE} onToggle={handleSubtitleChange(NONE)}>\n                  Нет\n                </CheckboxItem>\n              </SectionContentItem>\n\n              {map(subtitles, (subtitle) => (\n                <SectionContentItem key={subtitle} width=\"15%\">\n                  <CheckboxItem selected={subtitle === currentSubtitle} onToggle={handleSubtitleChange(subtitle)}>\n                    {subtitle}\n                  </CheckboxItem>\n                </SectionContentItem>\n              ))}\n            </SectionContent>\n          </Section>\n        )}\n      </Wrapper>\n    </Popup>\n  );\n};\n\nexport default Settings;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport VideoPlayer, { VideoPlayerBase, VideoPlayerBaseProps } from '@enact/moonstone/VideoPlayer';\nimport styled from 'styled-components';\n\nimport Media, { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\nimport Text from 'components/text';\nimport useBackButtonEffect from 'hooks/useBackButtonEffect';\n\nimport Settings from './settings';\n\nconst Wrapper = styled.div`\n  video {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n`;\n\nconst Title = styled(Text)<{ visible?: boolean }>`\n  position: absolute;\n  padding: 0 1rem;\n  z-index: 1;\n  visibility: ${(props) => (props.visible ? 'visible' : 'hidden')};\n`;\n\nexport type PlayerProps = {\n  title: string;\n  description?: string;\n  poster: string;\n  audios?: AudioTrack[];\n  sources: SourceTrack[];\n  subtitles?: SubtitleTrack[];\n  startTime?: number;\n  timeSyncInterval?: number;\n  onPlay?: () => void;\n  onPause?: (currentTime: number) => void;\n  onEnded?: (currentTime: number) => void;\n  onTimeSync?: (currentTime: number) => void | Promise<void>;\n} & VideoPlayerBaseProps;\n\nconst Player: React.FC<PlayerProps> = ({\n  title,\n  description,\n  poster,\n  audios,\n  sources,\n  subtitles,\n  startTime,\n  timeSyncInterval = 30,\n  onPlay,\n  onPause,\n  onEnded,\n  onTimeSync,\n  ...props\n}) => {\n  const playerRef = useRef<VideoPlayerBase>();\n  const [titleVisible, setTitleVisible] = useState(true);\n\n  const handlePlay = useCallback(() => {\n    setTitleVisible(false);\n    onPlay?.();\n  }, [onPlay]);\n  const handlePause = useCallback(\n    (e) => {\n      setTitleVisible(true);\n      onPause?.(e.currentTime);\n    },\n    [onPause],\n  );\n  const handleEnded = useCallback(\n    (e) => {\n      onEnded?.(e.target.currentTime);\n    },\n    [onEnded],\n  );\n  const handleTimeSync = useCallback(async () => {\n    if (playerRef.current && onTimeSync) {\n      const video: any = playerRef.current.getVideoNode();\n\n      const currentTime = video['currentTime'];\n\n      await onTimeSync(currentTime);\n    }\n  }, [onTimeSync, playerRef]);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n\n    if (titleVisible) {\n      timeoutId = setTimeout(() => {\n        setTitleVisible(false);\n      }, 5 * 1000);\n    }\n\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [titleVisible]);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n\n    if (onTimeSync) {\n      intervalId = setInterval(handleTimeSync, timeSyncInterval * 1000);\n    }\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [timeSyncInterval, onTimeSync, handleTimeSync]);\n\n  useBackButtonEffect(handleTimeSync);\n\n  return (\n    <Wrapper>\n      <Title visible={titleVisible}>{title}</Title>\n      <Settings player={playerRef} />\n\n      {\n        <VideoPlayer\n          {...props}\n          //@ts-expect-error\n          ref={playerRef}\n          title={description}\n          poster={poster}\n          jumpBy={10}\n          onPlay={handlePlay}\n          onPause={handlePause}\n          onEnded={handleEnded}\n          startTime={startTime}\n          audioTracks={audios}\n          sourceTracks={sources}\n          subtitleTracks={subtitles}\n          videoComponent={Media}\n        />\n      }\n    </Wrapper>\n  );\n};\n\nexport default Player;\n","import { ItemDetails, Season, Video } from 'api';\n\nexport function getItemTitle(item?: ItemDetails, video?: Video, season?: Season) {\n  return season ? `${item?.title} (s${season.number}e${video?.number || 1})` : item?.title!;\n}\n","import { useCallback, useMemo, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { ItemDetails, Season, Streaming, Video, WatchingStatus } from 'api';\nimport Player, { PlayerProps } from 'components/player';\nimport useApi from 'hooks/useApi';\nimport useApiMutation from 'hooks/useApiMutation';\nimport useStorageState from 'hooks/useStorageState';\n\nimport { getItemTitle } from 'utils/item';\nimport { mapAudios, mapSources, mapSubtitles } from 'utils/video';\n\nconst useNextVideo = (item: ItemDetails, season: Season, video: Video) =>\n  useMemo(() => {\n    const nextVideo = (item.videos || season?.episodes)?.find(({ number }) => number === video.number + 1);\n\n    if (nextVideo) {\n      return nextVideo;\n    }\n\n    const nextSeason = item.seasons?.find(({ number }) => number === season.number + 1);\n    if (nextSeason) {\n      return nextSeason.episodes[0];\n    }\n  }, [item, season, video]);\n\nconst usePreviousVideo = (item: ItemDetails, season: Season, video: Video) =>\n  useMemo(() => {\n    const previousVideo = (item.videos || season?.episodes)?.find(({ number }) => number === video.number - 1);\n\n    if (previousVideo) {\n      return previousVideo;\n    }\n\n    const previousSeason = item.seasons?.find(({ number }) => number === season.number - 1);\n    if (previousSeason) {\n      return previousSeason.episodes[previousSeason.episodes.length - 1];\n    }\n  }, [item, season, video]);\n\nconst usePrevNextVideos = (item: ItemDetails, season: Season, video: Video) => {\n  const nextVideo = useNextVideo(item, season, video);\n  const previousVideo = usePreviousVideo(item, season, video);\n\n  return [previousVideo, nextVideo] as const;\n};\n\nconst VideoView: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation<{ title: string; item: ItemDetails; video: Video; season: Season }>();\n  const { watchingMarkTimeAsync } = useApiMutation('watchingMarkTime');\n  const [streamingType] = useStorageState<Streaming>('streaming_type');\n  const { item, video, season } = location.state;\n\n  const [currentVideo, setCurrentVideo] = useState(video);\n  const [previousVideo, nextVideo] = usePrevNextVideos(item, season, currentVideo);\n\n  const currentVideoLinks = useApi('itemMediaLinks', [currentVideo.id]);\n\n  const saveCurrentTime = useCallback(\n    async ({ number }: Video, currentTime: number) => {\n      await watchingMarkTimeAsync([item.id, currentTime, number, season?.number]);\n    },\n    [watchingMarkTimeAsync, item, season],\n  );\n\n  const playerProps = useMemo<PlayerProps | null>(\n    () =>\n      currentVideoLinks?.data\n        ? {\n            title: getItemTitle(item, currentVideo, season),\n            description: currentVideo.title,\n            poster: item.posters.wide || item.posters.big,\n            audios: mapAudios(currentVideo.audios),\n            sources: mapSources(currentVideoLinks.data.files, streamingType),\n            subtitles: mapSubtitles(currentVideoLinks.data.subtitles),\n            startTime: currentVideo.watching.status === WatchingStatus.Watching ? currentVideo.watching.time : 0,\n          }\n        : null,\n    [item, season, currentVideo, currentVideoLinks?.data, streamingType],\n  );\n\n  const handlePause = useCallback(\n    (currentTime: number) => {\n      saveCurrentTime(currentVideo, currentTime);\n    },\n    [saveCurrentTime, currentVideo],\n  );\n\n  const handleOnEnded = useCallback(\n    (currentTime: number) => {\n      saveCurrentTime(currentVideo, currentTime);\n\n      if (nextVideo) {\n        setCurrentVideo(nextVideo);\n        return;\n      }\n\n      history.goBack();\n    },\n    [saveCurrentTime, history, currentVideo, nextVideo],\n  );\n\n  const handleJumpBackward = useCallback(\n    ({ currentTime }: { currentTime: number }) => {\n      saveCurrentTime(currentVideo, currentTime);\n\n      if (previousVideo) {\n        setCurrentVideo(previousVideo);\n      }\n    },\n    [saveCurrentTime, currentVideo, previousVideo],\n  );\n\n  const handleJumpForward = useCallback(\n    ({ currentTime }: { currentTime: number }) => {\n      saveCurrentTime(currentVideo, currentTime);\n\n      if (nextVideo) {\n        setCurrentVideo(nextVideo);\n      }\n    },\n    [saveCurrentTime, currentVideo, nextVideo],\n  );\n\n  const handleTimeSync = useCallback(\n    async (currentTime: number) => {\n      await saveCurrentTime(currentVideo, currentTime);\n    },\n    [saveCurrentTime, currentVideo],\n  );\n\n  return (\n    <>\n      {playerProps && (\n        <Player\n          key={currentVideo.id}\n          {...playerProps}\n          onPause={handlePause}\n          onEnded={handleOnEnded}\n          onJumpBackward={handleJumpBackward}\n          onJumpForward={handleJumpForward}\n          onTimeSync={handleTimeSync}\n        />\n      )}\n    </>\n  );\n};\n\nexport default VideoView;\n"],"sourceRoot":""}