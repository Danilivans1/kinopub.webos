{"version":3,"sources":["views/booksmark/booksmark.tsx","components/text/text.tsx","hooks/useInViewport.ts","components/scrollable/scrollable.tsx","components/imageItem/imageItem.tsx","components/videoItem/videoItem.tsx","components/itemsList/itemsList.tsx","hooks/useInfiniteItems.ts","hooks/useApiInfinite.ts","containers/itemsListInfinite/itemsListInfinite.tsx"],"names":["BookmarkView","bookmarkId","useParams","queryResult","useApiInfinite","title","data","pages","folder","Text","className","props","cx","useInViewport","target","options","config","disconnectOnLeave","onEnterViewport","onLeaveViewport","useState","forceUpdate","observer","useRef","inViewportRef","intersected","enterCountRef","leaveCountRef","startObserver","useCallback","current","node","findDOMNode","observe","stopObserver","unobserve","disconnect","handleIntersection","entries","entry","isIntersecting","intersectionRatio","isInViewport","initIntersectionObserver","IntersectionObserver","useEffect","inViewport","enterCount","leaveCount","Scrollable","children","onScrollToEnd","footerRef","ref","ImageItem","wrapperClassName","source","caption","loading","src","alt","VideoItem","item","history","useHistory","useMemo","split","handleOnClick","id","push","generatePath","PATHS","Item","itemId","onClick","posters","medium","new","ItemsList","items","scrollable","content","map","Array","_","idx","useInfiniteItems","processItems","isLoading","isFetchingNextPage","fetchNextPage","canFetchNextPage","setCanFetchNextPage","uniqBy","filter","flatMap","page","processedItems","handleLoadMore","length","method","params","client","ApiClient","query","useInfiniteQuery","pageParam","getNextPageParam","lastPage","pagination","ItemsListInfinite","fetchMore"],"mappings":"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","file":"static/js/15.3ce234ad.chunk.js","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport ItemsListInfinite from 'containers/itemsListInfinite';\nimport useApiInfinite from 'hooks/useApiInfinite';\nimport { RouteParams } from 'routes';\n\nconst BookmarkView: React.FC = () => {\n  const { bookmarkId } = useParams<RouteParams>();\n  const queryResult = useApiInfinite('bookmarkItems', [bookmarkId!]);\n\n  return <ItemsListInfinite title={queryResult?.data?.pages?.[0]?.folder?.title} queryResult={queryResult} />;\n};\n\nexport default BookmarkView;\n","import cx from 'classnames';\n\ntype Props = {\n  className?: string;\n};\n\nconst Text: React.FC<Props> = ({ className, ...props }) => {\n  return <p {...props} className={cx('text-primary', className)} />;\n};\n\nexport default Text;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { findDOMNode } from 'react-dom';\n\ntype Props = {\n  onEnterViewport?: () => void;\n  onLeaveViewport?: () => void;\n};\n\nconst useInViewport = (\n  target: React.MutableRefObject<React.ReactInstance | null | undefined>,\n  props: Props,\n  options?: IntersectionObserverInit,\n  config = { disconnectOnLeave: false },\n) => {\n  const { onEnterViewport, onLeaveViewport } = props;\n  const [, forceUpdate] = useState();\n\n  const observer = useRef<IntersectionObserver | null>(null);\n\n  const inViewportRef = useRef(false);\n  const intersected = useRef(false);\n\n  const enterCountRef = useRef(0);\n  const leaveCountRef = useRef(0);\n\n  const startObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.observe(node);\n      }\n    }\n  }, [target, observer]);\n\n  const stopObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.unobserve(node);\n        observer.current.disconnect();\n        observer.current = null;\n      }\n    }\n  }, [target, observer]);\n\n  const handleIntersection = useCallback(\n    (entries) => {\n      const entry = entries[0] || {};\n      const { isIntersecting, intersectionRatio } = entry;\n      const isInViewport = typeof isIntersecting !== 'undefined' ? isIntersecting : intersectionRatio > 0;\n\n      // enter\n      if (!intersected.current && isInViewport) {\n        intersected.current = true;\n\n        onEnterViewport?.();\n\n        enterCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n\n        return;\n      }\n\n      // leave\n      if (intersected.current && !isInViewport) {\n        intersected.current = false;\n\n        onLeaveViewport?.();\n\n        if (config.disconnectOnLeave && observer.current) {\n          // disconnect obsever on leave\n          observer.current.disconnect();\n        }\n\n        leaveCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n      }\n    },\n    [observer, config.disconnectOnLeave, onEnterViewport, onLeaveViewport],\n  );\n\n  const initIntersectionObserver = useCallback(() => {\n    if (!observer.current) {\n      observer.current = new IntersectionObserver(handleIntersection, options);\n    }\n  }, [observer, options, handleIntersection]);\n\n  useEffect(() => {\n    initIntersectionObserver();\n    startObserver();\n\n    return () => {\n      stopObserver();\n    };\n  }, [initIntersectionObserver, startObserver, stopObserver]);\n\n  return {\n    inViewport: inViewportRef.current,\n    enterCount: enterCountRef.current,\n    leaveCount: leaveCountRef.current,\n  };\n};\n\nexport default useInViewport;\n","import { useRef } from 'react';\nimport cx from 'classnames';\n\nimport useInViewport from 'hooks/useInViewport';\n\ntype Props = {\n  onScrollToEnd?: () => void;\n  className?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Scrollable: React.FC<Props> = ({ children, className, onScrollToEnd, ...props }) => {\n  const footerRef = useRef<HTMLDivElement>(null);\n\n  useInViewport(footerRef, { onEnterViewport: onScrollToEnd });\n\n  return (\n    <div className={cx('overflow-y-auto h-full', className)} {...props}>\n      {children}\n      <div className=\"h-40\" ref={footerRef} />\n    </div>\n  );\n};\n\nexport default Scrollable;\n","import cx from 'classnames';\n\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  className?: string;\n  wrapperClassName?: string;\n  source?: string;\n  caption?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst ImageItem: React.FC<Props> = ({ className, wrapperClassName, source, caption, children, ...props }) => {\n  return (\n    <Spottable {...props} className={cx('rounded-xl w-1/6', wrapperClassName)}>\n      <div className={cx('h-40 m-1 flex flex-col relative overflow-hidden cursor-pointer', className)}>\n        <img loading=\"lazy\" className=\"w-full h-full object-cover rounded-xl bg-gray-300\" src={source} alt={caption} />\n        <div className=\"px-2\">\n          <p className=\"text-primary text-sm text-center overflow-hidden whitespace-nowrap\">{caption}</p>\n        </div>\n\n        {children}\n      </div>\n    </Spottable>\n  );\n};\n\nexport default ImageItem;\n","import { useCallback, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport cx from 'classnames';\n\nimport { Item } from 'api';\nimport ImageItem from 'components/imageItem';\nimport { PATHS, generatePath } from 'routes';\n\ntype Props = {\n  item?: Item;\n  className?: string;\n};\n\nconst VideoItem: React.FC<Props> = ({ item, className }) => {\n  const history = useHistory();\n  const title = useMemo(() => item?.title?.split('/')[0], [item?.title]);\n\n  const handleOnClick = useCallback(() => {\n    if (item?.id) {\n      history.push(\n        generatePath(PATHS.Item, {\n          itemId: item.id,\n        }),\n      );\n    }\n  }, [item?.id, history]);\n\n  return (\n    <ImageItem onClick={handleOnClick} source={item?.posters.medium} caption={title} className={cx('h-72', className)}>\n      {item?.new && <div className=\"absolute bg-red-600 text-primary px-2 py-1 rounded-bl rounded-tr-xl right-0\">{item?.new}</div>}\n    </ImageItem>\n  );\n};\n\nexport default VideoItem;\n","import React from 'react';\nimport cx from 'classnames';\nimport map from 'lodash/map';\n\nimport { Item } from 'api';\nimport Scrollable from 'components/scrollable';\nimport Text from 'components/text';\nimport VideoItem from 'components/videoItem';\n\ntype Props = {\n  title?: string;\n  items?: Item[];\n  loading?: boolean;\n  onScrollToEnd?: () => void;\n  scrollable?: boolean;\n  className?: string;\n};\n\nconst ItemsList: React.FC<Props> = ({ title, items, loading, onScrollToEnd, scrollable = true, className }) => {\n  const content = (\n    <div>\n      {title && <Text className=\"m-1 mb-3\">{title}</Text>}\n      <div className={cx('flex flex-wrap', className)}>\n        {map(items, (item) => (\n          <VideoItem key={item.id} item={item} />\n        ))}\n        {loading && map([...new Array(18)], (_, idx) => <VideoItem key={idx} />)}\n      </div>\n    </div>\n  );\n\n  return scrollable ? <Scrollable onScrollToEnd={onScrollToEnd}>{content}</Scrollable> : content;\n};\n\nexport default ItemsList;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport filter from 'lodash/filter';\nimport flatMap from 'lodash/flatMap';\nimport uniqBy from 'lodash/uniqBy';\n\nimport useApiInfinite from 'hooks/useApiInfinite';\n\ntype PageWithItems<T> = {\n  items: T[];\n};\n\nexport type QueryResult = ReturnType<typeof useApiInfinite>;\n\nfunction useInfiniteItems<T>(queryResult: QueryResult, processItems?: (items: T[]) => T[]) {\n  const { data, isLoading, isFetchingNextPage, fetchNextPage } = queryResult;\n  const [canFetchNextPage, setCanFetchNextPage] = useState(false);\n\n  const items = useMemo(\n    () => uniqBy(filter(flatMap<PageWithItems<T>, T>(data?.pages as unknown as PageWithItems<T>[], (page) => page.items)), 'id'),\n    [data?.pages],\n  );\n  const processedItems = useMemo(() => (processItems ? processItems(items) : items), [items, processItems]);\n\n  const handleLoadMore = useCallback(() => {\n    if (canFetchNextPage) {\n      fetchNextPage();\n      setCanFetchNextPage(false);\n    }\n  }, [canFetchNextPage, fetchNextPage]);\n\n  useEffect(() => {\n    setCanFetchNextPage(true);\n  }, [items.length]);\n\n  return [processedItems, isLoading || isFetchingNextPage, handleLoadMore] as const;\n}\n\nexport default useInfiniteItems;\n","import { useMemo } from 'react';\nimport { UseInfiniteQueryOptions, useInfiniteQuery } from 'react-query';\n\nimport ApiClient, { PaginationResponse } from 'api';\n\nimport { Method, Methods } from './useApi';\n\nfunction useApiInfinite<T extends Method>(\n  method: T,\n  params: Parameters<ApiClient[T]> = [] as Parameters<ApiClient[T]>,\n  options?: UseInfiniteQueryOptions<Methods[T]>,\n) {\n  const client = useMemo(() => new ApiClient(), []);\n  const query = useInfiniteQuery<Methods[T], string, Methods[T]>(\n    [method, ...params],\n    ({ pageParam }) => {\n      // @ts-expect-error\n      return client[method](...params, pageParam) as Methods[T];\n    },\n    {\n      // @ts-expect-error\n      getNextPageParam: (lastPage: PaginationResponse) => {\n        return lastPage?.pagination?.current + 1 || 1;\n      },\n      ...options,\n    },\n  );\n\n  return query;\n}\n\nexport default useApiInfinite;\n","import { Item } from 'api';\nimport ItemsList from 'components/itemsList';\nimport useInfiniteItems, { QueryResult } from 'hooks/useInfiniteItems';\n\ntype Props = {\n  title?: string;\n  queryResult: QueryResult;\n  processItems?: (items: Item[]) => Item[];\n};\n\nconst ItemsListInfinite: React.FC<Props> = ({ title, queryResult, processItems }) => {\n  const [items, isLoading, fetchMore] = useInfiniteItems(queryResult, processItems);\n\n  return <ItemsList title={title} items={items} loading={isLoading} onScrollToEnd={fetchMore} />;\n};\n\nexport default ItemsListInfinite;\n"],"sourceRoot":""}