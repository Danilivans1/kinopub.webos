{"version":3,"sources":["components/channelItem/channelItem.tsx","components/channelsList/channelsList.tsx","views/channels/channels.tsx","hooks/useInViewport.ts","hooks/useUniqueId.ts","components/scrollable/scrollable.tsx","components/lazy/lazy.tsx","components/imageItem/imageItem.tsx","hooks/useApi.ts","../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../node_modules/react-query/es/react/useBaseQuery.js","../node_modules/react-query/es/core/queryObserver.js","../node_modules/react-query/es/react/useQuery.js","../node_modules/react-uid/dist/es2015/uid.js","../node_modules/react-uid/dist/es2015/context.js","../node_modules/react-uid/dist/es2015/hooks.js"],"names":["ChannelItem","channel","className","history","useHistory","handleOnClick","useCallback","id","push","generatePath","PATHS","Channel","channelId","onClick","source","logos","s","caption","title","ChannelsList","channels","loading","onScrollToEnd","scrollable","content","map","Array","_","idx","CollectionsView","useApi","data","isLoading","useInViewport","target","props","options","config","disconnectOnLeave","onEnterViewport","onLeaveViewport","useState","forceUpdate","observer","useRef","inViewportRef","intersected","enterCountRef","leaveCountRef","startObserver","current","node","findDOMNode","observe","stopObserver","unobserve","disconnect","handleIntersection","entries","entry","isIntersecting","intersectionRatio","isInViewport","initIntersectionObserver","IntersectionObserver","useEffect","inViewport","enterCount","leaveCount","useUniqueId","prefix","uid","useUID","useMemo","ScrollableContext","createContext","Scrollable","children","footerRef","value","Provider","cx","ref","Lazy","useContext","ImageItem","wrapperClassName","src","alt","method","params","client","ApiClient","query","useQuery","createValue","_isReset","clearReset","reset","isReset","QueryErrorResetBoundaryContext","React","useBaseQuery","Observer","mountedRef","queryClient","useQueryClient","errorResetBoundary","defaultedOptions","defaultQueryObserverOptions","optimisticResults","onError","notifyManager","batchCalls","onSuccess","onSettled","suspense","staleTime","useErrorBoundary","retryOnMount","result","getOptimisticResult","unsubscribe","subscribe","x","updateResult","setOptions","listeners","fetchOptimistic","then","_ref","catch","error","undefined","isError","isFetching","notifyOnChangeProps","trackResult","QueryObserver","_Subscribable","_this","call","this","trackedProps","previousSelectError","bindMethods","_inheritsLoose","_proto","prototype","remove","bind","refetch","onSubscribe","length","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","shouldFetchOnReconnect","enabled","refetchOnReconnect","isStale","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearTimers","removeObserver","notifyOptions","prevOptions","prevQuery","Error","queryKey","updateQuery","mounted","hasListeners","shouldFetchOptionally","updateStaleTimeout","refetchInterval","updateRefetchInterval","getQueryCache","build","createResult","getCurrentResult","currentResult","_this2","trackedResult","Object","keys","forEach","key","defineProperty","configurable","enumerable","get","typedKey","includes","getNextResult","_this3","Promise","resolve","reject","throwOnError","getCurrentQuery","fetch","_this4","fetchOptions","_this5","promise","noop","_this6","clearStaleTimeout","isServer","isValidTimeout","timeout","timeUntilStale","dataUpdatedAt","staleTimeoutId","setTimeout","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","clearInterval","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","state","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","status","isPreviousData","isPlaceholderData","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","isSuccess","select","structuralSharing","replaceEqualDeep","selectError","getLogger","Date","now","placeholderData","isIdle","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangePropsExclusions","includedProps","some","changed","isIncluded","isExcluded","shallowEqualObjects","defaultNotifyOptions","cache","notify","_extends","onQueryUpdate","action","type","isCancelledError","_this8","batch","listener","Subscribable","shouldLoadOnMount","refetchOnMount","shouldRefetchOnMount","isStaleByTime","arg1","arg2","arg3","parsedOptions","parseQueryArgs","generateUID","counter","WeakMap","item","index","has","set","createSource","useUIDState","context","quartz","getPrefix","getId","gen"],"mappings":"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","file":"static/js/16.0bd99a7e.chunk.js","sourcesContent":["import { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Channel } from 'api';\nimport ImageItem from 'components/imageItem';\nimport { PATHS, generatePath } from 'routes';\n\ntype Props = {\n  channel?: Channel;\n  className?: string;\n};\n\nconst ChannelItem: React.FC<Props> = ({ channel, className }) => {\n  const history = useHistory();\n  const handleOnClick = useCallback(() => {\n    if (channel?.id) {\n      history.push(\n        generatePath(PATHS.Channel, {\n          channelId: channel.id,\n        }),\n        {\n          channel,\n        },\n      );\n    }\n  }, [channel, history]);\n\n  return <ImageItem onClick={handleOnClick} source={channel?.logos.s} caption={channel?.title} className={className} />;\n};\n\nexport default ChannelItem;\n","import React from 'react';\nimport map from 'lodash/map';\n\nimport { Channel } from 'api';\nimport ChannelItem from 'components/channelItem';\nimport Scrollable from 'components/scrollable';\n\ntype Props = {\n  channels?: Channel[];\n  loading?: boolean;\n  onScrollToEnd?: () => void;\n  scrollable?: boolean;\n};\n\nconst ChannelsList: React.FC<Props> = ({ channels, loading, onScrollToEnd, scrollable = true }) => {\n  const content = (\n    <div className=\"flex flex-wrap pr-2\">\n      {map(channels, (channel) => (\n        <ChannelItem key={channel.id} channel={channel} />\n      ))}\n      {loading && map([...new Array(20)], (_, idx) => <ChannelItem key={idx} />)}\n    </div>\n  );\n\n  return scrollable ? <Scrollable onScrollToEnd={onScrollToEnd}>{content}</Scrollable> : content;\n};\n\nexport default ChannelsList;\n","import React from 'react';\n\nimport ChannelsList from 'components/channelsList';\nimport useApi from 'hooks/useApi';\n\nconst CollectionsView: React.FC = () => {\n  const { data, isLoading } = useApi('channels');\n\n  return (\n    <>\n      <ChannelsList channels={data?.channels} loading={isLoading} />\n    </>\n  );\n};\n\nexport default CollectionsView;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { findDOMNode } from 'react-dom';\n\ntype Props = {\n  onEnterViewport?: () => void;\n  onLeaveViewport?: () => void;\n};\n\nconst useInViewport = (\n  target: React.MutableRefObject<React.ReactInstance | null | undefined>,\n  props: Props,\n  options?: IntersectionObserverInit,\n  config = { disconnectOnLeave: false },\n) => {\n  const { onEnterViewport, onLeaveViewport } = props;\n  const [, forceUpdate] = useState();\n\n  const observer = useRef<IntersectionObserver | null>(null);\n\n  const inViewportRef = useRef(false);\n  const intersected = useRef(false);\n\n  const enterCountRef = useRef(0);\n  const leaveCountRef = useRef(0);\n\n  const startObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.observe(node);\n      }\n    }\n  }, [target, observer]);\n\n  const stopObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.unobserve(node);\n        observer.current.disconnect();\n        observer.current = null;\n      }\n    }\n  }, [target, observer]);\n\n  const handleIntersection = useCallback(\n    (entries) => {\n      const entry = entries[0] || {};\n      const { isIntersecting, intersectionRatio } = entry;\n      const isInViewport = typeof isIntersecting !== 'undefined' ? isIntersecting : intersectionRatio > 0;\n\n      // enter\n      if (!intersected.current && isInViewport) {\n        intersected.current = true;\n\n        onEnterViewport?.();\n\n        enterCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n\n        return;\n      }\n\n      // leave\n      if (intersected.current && !isInViewport) {\n        intersected.current = false;\n\n        onLeaveViewport?.();\n\n        if (config.disconnectOnLeave && observer.current) {\n          // disconnect obsever on leave\n          observer.current.disconnect();\n        }\n\n        leaveCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n      }\n    },\n    [observer, config.disconnectOnLeave, onEnterViewport, onLeaveViewport],\n  );\n\n  const initIntersectionObserver = useCallback(() => {\n    if (!observer.current) {\n      observer.current = new IntersectionObserver(handleIntersection, options);\n    }\n  }, [observer, options, handleIntersection]);\n\n  useEffect(() => {\n    initIntersectionObserver();\n    startObserver();\n\n    return () => {\n      stopObserver();\n    };\n  }, [initIntersectionObserver, startObserver, stopObserver]);\n\n  return {\n    inViewport: inViewportRef.current,\n    enterCount: enterCountRef.current,\n    leaveCount: leaveCountRef.current,\n  };\n};\n\nexport default useInViewport;\n","import { useMemo } from 'react';\nimport { useUID } from 'react-uid';\n\nfunction useUniqueId(prefix: string) {\n  const uid = useUID();\n  const id = useMemo(() => `${prefix}-${uid}`, [prefix, uid]);\n\n  return id;\n}\n\nexport default useUniqueId;\n","import { createContext, useMemo, useRef } from 'react';\nimport cx from 'classnames';\n\nimport useInViewport from 'hooks/useInViewport';\nimport useUniqueId from 'hooks/useUniqueId';\n\nexport const ScrollableContext = createContext<{ id?: string }>({});\n\ntype Props = {\n  onScrollToEnd?: () => void;\n  className?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Scrollable: React.FC<Props> = ({ children, className, onScrollToEnd, ...props }) => {\n  const footerRef = useRef<HTMLDivElement>(null);\n  const id = useUniqueId('scrollable');\n  const value = useMemo(\n    () => ({\n      id,\n    }),\n    [id],\n  );\n\n  useInViewport(footerRef, { onEnterViewport: onScrollToEnd });\n\n  return (\n    <div id={id} className=\"overflow-hidden h-screen\" {...props}>\n      <ScrollableContext.Provider value={value}>\n        <div className={cx('overflow-y-auto h-full', className)}>\n          {children}\n          <div className=\"h-40\" ref={footerRef} />\n        </div>\n      </ScrollableContext.Provider>\n    </div>\n  );\n};\n\nexport default Scrollable;\n","import { useContext } from 'react';\n// eslint-disable-next-line\nimport LazyLoad, { LazyLoadProps } from 'react-lazyload';\n\nimport { ScrollableContext } from 'components/scrollable';\n\ntype Props = {\n  className?: string;\n} & LazyLoadProps;\n\nconst Lazy: React.FC<Props> = (props) => {\n  // eslint-disable-next-line\n  const { id: scrollableId } = useContext(ScrollableContext);\n\n  // return <LazyLoad once offset={100} scrollContainer={scrollableId && `#${scrollableId}`} {...props} />;\n\n  // @ts-expect-error\n  return <div {...props} />;\n};\n\nexport function withLazy(options: Props) {\n  return function WithLazy<P>(Component: React.ComponentType<P>): React.FC<P> {\n    return (props: P) => (\n      <Lazy {...options}>\n        <Component {...props} />\n      </Lazy>\n    );\n  };\n}\n\nexport default Lazy;\n","import cx from 'classnames';\n\nimport Lazy from 'components/lazy';\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  className?: string;\n  wrapperClassName?: string;\n  source?: string;\n  caption?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst ImageItem: React.FC<Props> = ({ className, wrapperClassName, source, caption, children, ...props }) => {\n  return (\n    <Spottable {...props} className={cx('rounded-xl w-1/6', wrapperClassName)}>\n      <Lazy className={cx('h-40 m-1 flex flex-col relative overflow-hidden cursor-pointer', className)}>\n        <img loading=\"lazy\" className=\"w-full h-full object-cover rounded-xl bg-gray-300\" src={source} alt={caption} />\n        <div className=\"px-2\">\n          <p className=\"text-primary text-sm text-center overflow-hidden whitespace-nowrap\">{caption}</p>\n        </div>\n\n        {children}\n      </Lazy>\n    </Spottable>\n  );\n};\n\nexport default ImageItem;\n","import { useMemo } from 'react';\nimport { UseQueryOptions, useQuery } from 'react-query';\n\nimport ApiClient from 'api';\n\ntype Unpromise<T> = T extends Promise<infer U> ? U : T;\n\nexport type Methods = {\n  [method in keyof ApiClient]: ApiClient[method] extends Function ? Unpromise<ReturnType<ApiClient[method]>> : never;\n};\n\nexport type Method = keyof ApiClient & string;\n\nfunction useApi<T extends Method>(\n  method: T,\n  params: Parameters<ApiClient[T]> = [] as Parameters<ApiClient[T]>,\n  options?: UseQueryOptions<Methods[T]>,\n) {\n  const client = useMemo(() => new ApiClient(), []);\n  const query = useQuery<Methods[T]>(\n    [method, ...params],\n    () =>\n      // @ts-expect-error\n      client[method](...params) as Methods[T],\n    options,\n  );\n\n  return query;\n}\n\nexport default useApi;\n","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var _React$useState2 = React.useState(function () {\n    return new Observer(queryClient, defaultedOptions);\n  }),\n      observer = _React$useState2[0];\n\n  var result = observer.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary, observer]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if ((defaultedOptions.suspense || defaultedOptions.useErrorBoundary) && result.isError && !result.isFetching) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = observer.trackResult(result);\n  }\n\n  return result;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.previousSelectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval)) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result) {\n    var _this2 = this;\n\n    var trackedResult = {};\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          var typedKey = key;\n\n          if (!_this2.trackedProps.includes(typedKey)) {\n            _this2.trackedProps.push(typedKey);\n          }\n\n          return result[typedKey];\n        }\n      });\n    });\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(options);\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select) && !this.previousSelectError) {\n          data = prevResult.data;\n        } else {\n          try {\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    if (result === prevResult) {\n      return false;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}","/**\n * generates a UID factory\n * @internal\n * @example\n * const uid = generateUID();\n * uid(object) = 1;\n * uid(object) = 1;\n * uid(anotherObject) = 2;\n */\nexport var generateUID = function () {\n    var counter = 1;\n    var map = new WeakMap();\n    /**\n     * @borrows {uid}\n     */\n    var uid = function (item, index) {\n        if (typeof item === 'number' ||\n            typeof item === 'string') {\n            return index ? \"idx-\" + index : \"val-\" + item;\n        }\n        if (!map.has(item)) {\n            map.set(item, counter++);\n            return uid(item);\n        }\n        return 'uid' + map.get(item);\n    };\n    return uid;\n};\n/**\n * @name uid\n * returns an UID associated with {item}\n * @param {Object} item - object to generate UID for\n * @param {Number} index, a fallback index\n * @example\n * uid(object) == 1;\n * uid(object) == 1;\n * uid(anotherObject) == 2;\n * uid(\"not object\", 42) == 42\n *\n * @see {@link useUID}\n */\nexport var uid = generateUID();\n","import * as React from 'react';\nimport { generateUID } from \"./uid\";\nexport var createSource = function (prefix) {\n    if (prefix === void 0) { prefix = ''; }\n    return ({\n        value: 1,\n        prefix: prefix,\n        uid: generateUID()\n    });\n};\nexport var counter = createSource();\nexport var source = React.createContext(createSource());\nexport var getId = function (source) { return source.value++; };\nexport var getPrefix = function (source) { return source ? source.prefix : ''; };\n","import * as React from \"react\";\nimport { counter, getId, getPrefix, source } from \"./context\";\nvar generateUID = function (context) {\n    var quartz = context || counter;\n    var prefix = getPrefix(quartz);\n    var id = getId(quartz);\n    var uid = prefix + id;\n    var gen = function (item) { return uid + quartz.uid(item); };\n    return { uid: uid, gen: gen };\n};\nvar useUIDState = function () {\n    if (process.env.NODE_ENV !== \"production\") {\n        if (!('useContext' in React)) {\n            throw new Error('Hooks API requires React 16.8+');\n        }\n    }\n    // @ts-ignore\n    return React.useState(generateUID(React.useContext(source)));\n};\n/**\n * returns and unique id. SSR friendly\n * returns {String}\n * @see {@link UIDConsumer}\n * @see https://github.com/thearnica/react-uid#hooks-168\n * @example\n * const id = useUID();\n * id == 1; // for example\n */\nexport var useUID = function () {\n    var uid = useUIDState()[0].uid;\n    return uid;\n};\n/**\n * returns an uid generator\n * @see {@link UIDConsumer}\n * @see https://github.com/thearnica/react-uid#hooks-168\n * @example\n * const uid = useUIDSeed();\n * return (\n *  <>\n *    <label for={seed('email')}>Email: </label>\n *    <input id={seed('email')} name=\"email\" />\n *    {data.map(item => <div key={seed(item)}>...</div>\n *  </>\n * )\n */\nexport var useUIDSeed = function () {\n    var gen = useUIDState()[0].gen;\n    return gen;\n};\n"],"sourceRoot":""}