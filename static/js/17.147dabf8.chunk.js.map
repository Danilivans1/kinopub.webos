{"version":3,"sources":["components/text/text.tsx","hooks/useApi.ts","components/button/button.tsx","components/radio/radio.tsx","hooks/useChangebleState.ts","components/checkbox/checkbox.tsx","components/accordion/accordion.tsx","components/select/select.tsx","views/settings/settings.tsx"],"names":["Text","className","props","cx","useApi","method","params","options","client","useMemo","ApiClient","query","useQuery","Button","icon","iconOnly","children","autoFocus","wrapperRef","useRef","useEffect","frameId","requestAnimationFrame","current","node","focus","cancelAnimationFrame","ref","role","name","Radio","defaultChecked","checked","onChange","handleChange","useCallback","e","target","component","type","useChangebleState","initialState","useState","state","setState","Checkbox","Accordion","open","onToggle","title","subtitle","visible","setVisible","handleClick","newVisible","onClick","Select","label","defaultValue","value","closeOnChange","setOpen","val","setVal","opts","Array","isArray","map","option","idx","selectedOption","find","o","handleChanged","handleChecked","opt","SettingBool","setting","Bool","True","SettingList","description","findIndex","selected","SettingsView","data","deviceInfo","saveDeviceSettingsAsync","useApiMutation","deactivate","newSettings","setNewSettings","useDeviceInfo","software","hardware","boolSettings","filter","device","settings","key","listSettings","handleBoolSettingToggle","a","handleListSettingSelect","id","handleSaveClick","window","location","reload","handleLogoutClick","updated","user","profile","username","Math","floor","subscription","days"],"mappings":"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","file":"static/js/17.147dabf8.chunk.js","sourcesContent":["import cx from 'classnames';\n\ntype Props = {\n  className?: string;\n};\n\nconst Text: React.FC<Props> = ({ className, ...props }) => {\n  return <p {...props} className={cx('text-primary', className)} />;\n};\n\nexport default Text;\n","import { useMemo } from 'react';\nimport { UseQueryOptions, useQuery } from 'react-query';\n\nimport ApiClient from 'api';\n\ntype Unpromise<T> = T extends Promise<infer U> ? U : T;\n\nexport type Methods = {\n  [method in keyof ApiClient]: ApiClient[method] extends Function ? Unpromise<ReturnType<ApiClient[method]>> : never;\n};\n\nexport type Method = keyof ApiClient & string;\n\nfunction useApi<T extends Method>(\n  method: T,\n  params: Parameters<ApiClient[T]> = [] as Parameters<ApiClient[T]>,\n  options?: UseQueryOptions<Methods[T]>,\n) {\n  const client = useMemo(() => new ApiClient(), []);\n  const query = useQuery<Methods[T]>(\n    [method, ...params],\n    () =>\n      // @ts-expect-error\n      client[method](...params) as Methods[T],\n    options,\n  );\n\n  return query;\n}\n\nexport default useApi;\n","import { useEffect, useRef } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  icon?: string;\n  iconOnly?: boolean;\n  autoFocus?: boolean;\n  className?: string;\n  onClick?: React.MouseEventHandler;\n};\n\nconst Button: React.FC<Props> = ({ icon, iconOnly, children, autoFocus, className, ...props }) => {\n  const wrapperRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    let frameId: number;\n\n    if (autoFocus) {\n      frameId = requestAnimationFrame(() => {\n        // @ts-expect-error\n        wrapperRef.current?.node?.focus();\n      });\n    }\n\n    return () => {\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n    };\n  }, [wrapperRef, autoFocus]);\n\n  return (\n    <Spottable\n      {...props}\n      ref={wrapperRef}\n      className={cx(\n        'text-primary whitespace-nowrap cursor-pointer rounded px-2 py-1',\n        {\n          'pr-3': !!icon,\n        },\n        className,\n      )}\n      role=\"button\"\n    >\n      <div className=\"flex items-center\">\n        {icon && <Icon name={icon} />}\n        {!iconOnly && children}\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Button;\n","import { useCallback } from 'react';\nimport cx from 'classnames';\n\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  defaultChecked?: boolean;\n  checked?: boolean;\n  onChange?: (checked: boolean, e: React.ChangeEvent<HTMLInputElement>) => void;\n  className?: string;\n  type?: string;\n} & Omit<React.HTMLAttributes<HTMLInputElement>, 'onChange'>;\n\nconst Radio: React.FC<Props> = ({ defaultChecked, checked, onChange, className, children, ...props }) => {\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>(\n    (e) => {\n      onChange?.(e.target.checked, e);\n    },\n    [onChange],\n  );\n\n  return (\n    <Spottable component=\"label\" className={cx('text-primary p-2', className)}>\n      <div className=\"inline-flex items-center cursor-pointer\">\n        <input\n          {...props}\n          type=\"radio\"\n          className=\"inline-block w-4 h-4\"\n          defaultChecked={defaultChecked}\n          checked={checked}\n          onChange={handleChange}\n        />\n        <span className=\"inline-block ml-2 whitespace-nowrap\">{children}</span>\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Radio;\n","import { useEffect, useState } from 'react';\n\nfunction useChangebleState<T>(initialState?: T) {\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    setState(initialState);\n  }, [initialState]);\n\n  return [state, setState] as const;\n}\n\nexport default useChangebleState;\n","import { useCallback } from 'react';\nimport cx from 'classnames';\n\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  defaultChecked?: boolean;\n  checked?: boolean;\n  onChange?: (checked: boolean, e: React.ChangeEvent<HTMLInputElement>) => void;\n  className?: string;\n  type?: string;\n} & Omit<React.HTMLAttributes<HTMLInputElement>, 'onChange'>;\n\nconst Checkbox: React.FC<Props> = ({ defaultChecked, checked, onChange, className, children, ...props }) => {\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>(\n    (e) => {\n      onChange?.(e.target.checked, e);\n    },\n    [onChange],\n  );\n\n  return (\n    <Spottable component=\"label\" className={cx('text-primary p-2', className)}>\n      <div className=\"inline-flex items-center cursor-pointer\">\n        <input\n          {...props}\n          type=\"checkbox\"\n          className=\"inline-block w-4 h-4\"\n          defaultChecked={defaultChecked}\n          checked={checked}\n          onChange={handleChange}\n        />\n        <span className=\"inline-block ml-2 whitespace-nowrap\">{children}</span>\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Checkbox;\n","import { useCallback } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\nimport Text from 'components/text';\nimport useChangebleState from 'hooks/useChangebleState';\n\ntype Props = {\n  title: string;\n  subtitle?: string;\n  className?: string;\n  open?: boolean;\n  onToggle?: (open: boolean) => void;\n};\n\nconst Accordion: React.FC<Props> = ({ open, onToggle, title, subtitle, className, children }) => {\n  const [visible, setVisible] = useChangebleState(open);\n\n  const handleClick = useCallback(() => {\n    setVisible((visible) => {\n      const newVisible = !visible;\n\n      onToggle?.(newVisible);\n\n      return newVisible;\n    });\n  }, [setVisible, onToggle]);\n\n  return (\n    <div className=\"flex flex-col w-full\">\n      <Spottable onClick={handleClick} className={cx('p-1 cursor-pointer', className)}>\n        <div className=\"flex flex-col\">\n          <div className=\"flex items-center\">\n            <Text>{title}</Text>\n\n            <Icon name={visible ? 'expand_less' : 'expand_more'} />\n          </div>\n          {!visible && <Text className=\"mt-2\">{subtitle}</Text>}\n        </div>\n      </Spottable>\n      {visible && children}\n    </div>\n  );\n};\n\nexport default Accordion;\n","import { useCallback, useMemo, useState } from 'react';\nimport map from 'lodash/map';\n\nimport Accordion from 'components/accordion';\nimport Radio from 'components/radio';\nimport useChangebleState from 'hooks/useChangebleState';\n\ntype Option<T = any> = {\n  title: string;\n  value: T;\n};\n\ntype Props<T = any> = {\n  label: string;\n  options: Option<T>[] | string[];\n  value?: T;\n  defaultValue?: T;\n  onChange?: (value: T) => void;\n  closeOnChange?: boolean;\n};\n\nconst Select: React.FC<Props> = ({ label, options, defaultValue, value, onChange, closeOnChange }) => {\n  const [open, setOpen] = useState(false);\n  const [val, setVal] = useChangebleState(value || defaultValue);\n  const opts = useMemo(\n    () =>\n      Array.isArray(options) ? options.map((option, idx) => (typeof option === 'string' ? { title: option, value: idx } : option)) : [],\n    [options],\n  );\n  const selectedOption = useMemo(() => opts.find((o) => o.value === val), [opts, val]);\n\n  const handleChanged = useCallback(\n    (value) => {\n      setVal(value);\n      onChange?.(value);\n\n      if (closeOnChange) {\n        setOpen(false);\n      }\n    },\n    [setVal, onChange, closeOnChange],\n  );\n  const handleChecked = useCallback(\n    (option: Option) => (checked: boolean) => {\n      if (checked) {\n        handleChanged(option.value);\n      }\n    },\n    [handleChanged],\n  );\n\n  return (\n    <Accordion open={open} onToggle={setOpen} title={label} subtitle={selectedOption?.title}>\n      <div className=\"flex flex-col\">\n        {map(opts, (opt) => (\n          <Radio key={opt.value} checked={opt.value === val} onChange={handleChecked(opt)}>\n            {opt.title}\n          </Radio>\n        ))}\n      </div>\n    </Accordion>\n  );\n};\n\nexport default Select;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport filter from 'lodash/filter';\nimport findIndex from 'lodash/findIndex';\nimport map from 'lodash/map';\n\nimport { Bool, DeviceSettingBoolean, DeviceSettingList, DeviceSettingsParams } from 'api';\nimport Button from 'components/button';\nimport Checkbox from 'components/checkbox';\nimport Select from 'components/select';\nimport Text from 'components/text';\nimport useApi from 'hooks/useApi';\nimport useApiMutation from 'hooks/useApiMutation';\nimport useDeviceInfo from 'hooks/useDeviceInfo';\n\nconst SettingBool: React.FC<{ setting: DeviceSettingBoolean; onChange?: (checked: boolean) => void }> = ({ setting, onChange }) => {\n  return (\n    <Checkbox className=\"w-full\" defaultChecked={setting.value === Bool.True} onChange={onChange}>\n      {setting.label}\n    </Checkbox>\n  );\n};\n\nconst SettingList: React.FC<{ setting: DeviceSettingList; onChange?: (value: number) => void }> = ({ setting, onChange }) => {\n  const options = useMemo(\n    () => map(setting.value, (value) => `${value.label} ${value.description ? `(${value.description})` : ''}`),\n    [setting.value],\n  );\n\n  return (\n    <Select\n      defaultValue={findIndex(setting.value, (value) => value.selected === Bool.True)}\n      label={setting.label}\n      onChange={onChange}\n      options={options}\n      closeOnChange\n    />\n  );\n};\n\nconst SettingsView: React.FC = () => {\n  const { data } = useApi('user');\n  const { data: deviceInfo } = useApi('deviceInfo');\n  const { saveDeviceSettingsAsync } = useApiMutation('saveDeviceSettings');\n  const { deactivate } = useApiMutation('deactivate');\n  const [newSettings, setNewSettings] = useState<DeviceSettingsParams>({});\n  const { software, hardware } = useDeviceInfo();\n\n  const boolSettings = useMemo(\n    () =>\n      filter(\n        map(deviceInfo?.device?.settings, (setting, key) => ({ ...setting, key })),\n        (setting: DeviceSettingBoolean) => typeof setting['type'] === 'undefined',\n      ) as (DeviceSettingBoolean & { key: string })[],\n    [deviceInfo?.device?.settings],\n  );\n  const listSettings = useMemo(\n    () =>\n      filter(\n        map(deviceInfo?.device?.settings, (setting, key) => ({ ...setting, key })),\n        (setting: DeviceSettingList) => setting['type'] === 'list',\n      ) as (DeviceSettingList & { key: string })[],\n    [deviceInfo?.device?.settings],\n  );\n\n  const handleBoolSettingToggle = useCallback(\n    (setting: typeof boolSettings[0]) => async (checked: boolean) => {\n      setNewSettings({ ...newSettings, [setting['key']]: checked });\n    },\n    [newSettings],\n  );\n  const handleListSettingSelect = useCallback(\n    (setting: typeof listSettings[0]) => (value: number) => {\n      setNewSettings({ ...newSettings, [setting['key']]: setting.value[value].id });\n    },\n    [newSettings],\n  );\n\n  const handleSaveClick = useCallback(async () => {\n    await saveDeviceSettingsAsync([deviceInfo?.device.id!, newSettings]);\n\n    window.location.reload();\n  }, [newSettings, deviceInfo?.device, saveDeviceSettingsAsync]);\n  const handleLogoutClick = useCallback(() => {\n    deactivate([]);\n  }, [deactivate]);\n\n  return (\n    <div className=\"h-screen relative\">\n      <Text className=\"m-1 mb-3\">Настройки устройства</Text>\n\n      <div className=\"flex flex-col\">\n        {deviceInfo?.device && (\n          <>\n            <div>\n              <div className=\"flex flex-wrap pb-4\" key={`bool-${deviceInfo?.device.updated}`}>\n                {map(boolSettings, (setting) => (\n                  <div className=\"flex w-1/2 pr-4\" key={setting['key']}>\n                    <SettingBool setting={setting} onChange={handleBoolSettingToggle(setting)} />\n                  </div>\n                ))}\n              </div>\n              <div className=\"flex flex-wrap pb-4\" key={`list-${deviceInfo?.device.updated}`}>\n                {map(listSettings, (setting) => (\n                  <div className=\"flex w-1/2 pr-4\" key={setting['key']}>\n                    <SettingList setting={setting} onChange={handleListSettingSelect(setting)} />\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"flex my-8\">\n              <Button icon=\"done\" onClick={handleSaveClick}>\n                Сохранить\n              </Button>\n            </div>\n          </>\n        )}\n      </div>\n\n      <div className=\"flex justify-between absolute bottom-0 left-0 right-0 py-2\">\n        <div>\n          <Text>Пользователь</Text>\n          <div className=\"flex items-center\">\n            {data?.user && (\n              <Text className=\"mr-4\">\n                {data.user.profile.name || data.user.username} ({Math.floor(data.user.subscription.days)} дн.)\n              </Text>\n            )}\n\n            <Button icon=\"logout\" onClick={handleLogoutClick}>\n              Выход\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"flex flex-col items-end pr-4\">\n          <Text>{hardware}</Text>\n          <Text>{software}</Text>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsView;\n"],"sourceRoot":""}