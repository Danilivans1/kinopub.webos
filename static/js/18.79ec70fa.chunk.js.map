{"version":3,"sources":["views/channel/channel.tsx","components/text/text.tsx","components/button/button.tsx","components/popup/popup.tsx","components/radio/radio.tsx","utils/video.ts","utils/subtitles.ts","components/media/media.tsx","components/player/settings.tsx","components/player/startFrom.tsx","components/player/player.tsx"],"names":["ChannelView","history","useHistory","channel","useLocation","state","playerProps","useMemo","title","poster","logos","m","sources","mapSources","url","http","stream","hls4","handleOnEnded","useCallback","goBack","onEnded","Text","className","props","cx","Button","icon","iconOnly","children","autoFocus","wrapperRef","useRef","useEffect","frameId","requestAnimationFrame","current","node","focus","cancelAnimationFrame","ref","role","name","Popup","visible","onClose","handleClose","handleCloseOnBackButton","useBackButtonEffect","handleClickOutside","clickOutsideConfig","onClickOutside","Radio","defaultChecked","checked","onChange","onClick","handleChange","e","target","component","type","formatIdx","idx","mapAudios","audios","map","audio","lang","filter","author","toUpper","codec","join","files","streamingType","orderBy","file","src","quality","parseInt","mapSubtitles","subtitles","subtitle","WebVTTConverter","resource","objectURL","this","Promise","resolve","reject","reader","FileReader","addEventListener","event","buf","result","Uint8Array","readAsArrayBuffer","Blob","TextDecoder","blobToString","decoded","text","concat","toVTT","blob","URL","createObjectURL","blobToBuffer","then","buffer","utf8str","decode","success","fail","readAsText","replace","str","split","forEach","each","push","charCodeAt","from","a","fetch","converter","getURL","Media","hls","media","startTime","currentTime","destroy","setState","handleLoaded","play","includes","HLS","isSupported","attachMedia","on","Events","MEDIA_ATTACHED","loadSource","MANIFEST_PARSED","uniq","audioTracks","audioTrack","find","id","audioTracksIndex","Array","findIndex","enabled","length","uniqBy","sourceTracks","sourceTrack","load","subtitleTracks","subtitleTrack","textTracks","textTrack","mode","label","track","document","createElement","kind","srclang","showTrack","endsWith","convertToVTT","appendChild","UIMedia","NONE","Settings","player","useState","popupVisible","setPopupVisible","setAudios","currentAudio","setCurrentAudio","setSources","currentSource","setCurrentSource","setSubtitles","currentSubtitle","setCurrentSubtitle","handleVideoUpdate","value","getVideoNode","handleAudioChange","handleSourceChange","source","handleSubtitleChange","handlePopupClose","listiner","isArrowUpButton","video","pause","isPlayButton","window","removeEventListener","StartFrom","startInDelay","setVisible","startIn","setStartIn","startFrom","Date","toISOString","substr","handleStartFromClick","handleStartFromBeginingClick","intervalId","setInterval","prevStartIn","newStartIn","clearInterval","Player","description","timeSyncInterval","onPlay","onPause","onTimeSync","playerRef","isLoaded","setIsLoaded","titleVisible","setTitleVisible","handlePlay","handlePause","handleEnded","handleTimeSync","handleLoadedMetadata","timeoutId","setTimeout","clearTimeout","jumpBy","onLoadedMetadata","videoComponent"],"mappings":"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","file":"static/js/18.79ec70fa.chunk.js","sourcesContent":["import { useCallback, useMemo } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { Channel } from 'api';\nimport Player, { PlayerProps } from 'components/player';\n\nimport { mapSources } from 'utils/video';\n\nconst ChannelView: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation<{ channel: Channel }>();\n  const { channel } = location.state;\n\n  const playerProps = useMemo<PlayerProps>(() => {\n    return {\n      title: channel.title,\n      poster: channel.logos.m,\n      sources: mapSources([\n        {\n          url: {\n            http: channel.stream,\n            hls4: channel.stream,\n          },\n        },\n      ]),\n    };\n  }, [channel]);\n\n  const handleOnEnded = useCallback(() => {\n    history.goBack();\n  }, [history]);\n\n  return (\n    <>\n      <Player {...playerProps} onEnded={handleOnEnded} />\n    </>\n  );\n};\n\nexport default ChannelView;\n","import cx from 'classnames';\n\ntype Props = {\n  className?: string;\n};\n\nconst Text: React.FC<Props> = ({ className, ...props }) => {\n  return <p {...props} className={cx('text-primary', className)} />;\n};\n\nexport default Text;\n","import { useEffect, useRef } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  icon?: string;\n  iconOnly?: boolean;\n  autoFocus?: boolean;\n  className?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Button: React.FC<Props> = ({ icon, iconOnly, children, autoFocus, className, ...props }) => {\n  const wrapperRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    let frameId: number;\n\n    if (autoFocus) {\n      frameId = requestAnimationFrame(() => {\n        // @ts-expect-error\n        wrapperRef.current?.node?.focus();\n      });\n    }\n\n    return () => {\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n    };\n  }, [wrapperRef, autoFocus]);\n\n  return (\n    <Spottable\n      {...props}\n      ref={wrapperRef}\n      className={cx(\n        'text-primary whitespace-nowrap cursor-pointer rounded px-2 py-1',\n        {\n          'pr-3': !!icon,\n        },\n        className,\n      )}\n      role=\"button\"\n    >\n      <div className=\"flex items-center\">\n        {icon && <Icon name={icon} />}\n        {!iconOnly && children}\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Button;\n","import { useCallback } from 'react';\nimport onClickOutside from 'react-onclickoutside';\nimport cx from 'classnames';\n\nimport useBackButtonEffect from 'hooks/useBackButtonEffect';\n\ntype Props = {\n  visible: boolean;\n  onClose: (visible: boolean) => void;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Popup: React.FC<Props> = ({ visible, onClose, className, ...props }) => {\n  const handleClose = useCallback(() => {\n    onClose(false);\n  }, [onClose]);\n\n  const handleCloseOnBackButton = useCallback(() => {\n    if (visible) {\n      handleClose();\n\n      return false;\n    }\n  }, [visible, handleClose]);\n\n  useBackButtonEffect(handleCloseOnBackButton);\n\n  // @ts-expect-error\n  Popup.handleClickOutside = handleClose;\n\n  if (!visible) {\n    return null;\n  }\n\n  return <div {...props} className={cx('fixed z-999 bottom-0 left-0 right-0 p-4 bg-primary ring', className)} />;\n};\n\nconst clickOutsideConfig = {\n  handleClickOutside: () =>\n    // @ts-expect-error\n    Popup.handleClickOutside,\n};\n\nexport default onClickOutside(Popup, clickOutsideConfig);\n","import { useCallback } from 'react';\nimport cx from 'classnames';\n\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  defaultChecked?: boolean;\n  checked?: boolean;\n  onChange?: (checked: boolean, e: React.ChangeEvent<HTMLInputElement>) => void;\n  className?: string;\n  type?: string;\n} & Omit<React.HTMLAttributes<HTMLInputElement>, 'onChange'>;\n\nconst Radio: React.FC<Props> = ({ defaultChecked, checked, onChange, onClick, className, children, ...props }) => {\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>(\n    (e) => {\n      onChange?.(e.target.checked, e);\n    },\n    [onChange],\n  );\n\n  return (\n    <Spottable component=\"label\" className={cx('text-primary p-2', className)} onClick={onClick}>\n      <div className=\"inline-flex items-center cursor-pointer\">\n        <input\n          {...props}\n          type=\"radio\"\n          className=\"inline-block w-4 h-4\"\n          defaultChecked={defaultChecked}\n          checked={checked}\n          onChange={handleChange}\n        />\n        <span className=\"inline-block ml-2 whitespace-nowrap\">{children}</span>\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Radio;\n","import filter from 'lodash/filter';\nimport map from 'lodash/map';\nimport orderBy from 'lodash/orderBy';\nimport toUpper from 'lodash/toUpper';\n\nimport { Audio, Streaming, Subtitle } from 'api';\nimport { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\n\nconst formatIdx = (idx: number) => (idx < 10 ? `0${idx}` : idx);\n\nexport function mapAudios(audios: Audio[]): AudioTrack[] {\n  return map(audios, (audio, idx) => ({\n    lang: audio.lang,\n    name: filter([\n      `${formatIdx(idx + 1)}.`,\n      audio.type?.title && audio.author?.title ? `${audio.type?.title}.` : audio.type?.title,\n      audio.author?.title,\n      audio.type?.title || audio.author?.title ? `(${toUpper(audio.lang)})` : toUpper(audio.lang),\n      audio.codec !== 'aac' && toUpper(audio.codec),\n    ]).join(' '),\n  }));\n}\n\nexport function mapSources(\n  files: { url: string | { [key in Streaming]?: string }; quality?: string }[],\n  streamingType?: Streaming,\n): SourceTrack[] {\n  return orderBy(\n    map(files, (file) => ({\n      src: (typeof file.url === 'string' ? file.url : file.url[streamingType!] || file.url.http) as string,\n      name: file.quality!,\n    })),\n    ({ name }) => parseInt(name),\n    'desc',\n  );\n}\n\nexport function mapSubtitles(subtitles: Subtitle[]): SubtitleTrack[] {\n  return map(subtitles, (subtitle, idx) => ({\n    src: subtitle.url,\n    lang: subtitle.lang,\n    name: `${toUpper(subtitle.lang)} #${formatIdx(idx + 1)}`,\n  }));\n}\n","class WebVTTConverter {\n  resource: Blob;\n\n  private objectURL?: string;\n\n  constructor(resource: Blob) {\n    this.resource = resource;\n  }\n\n  blobToBuffer() {\n    return new Promise<ArrayBuffer>((resolve, reject) => {\n      const reader = new FileReader();\n      reader.addEventListener('loadend', (event) => {\n        const buf = event.target?.result;\n        resolve(new Uint8Array(buf as ArrayBuffer));\n      });\n      reader.addEventListener('error', () => reject('Error while reading the Blob object'));\n      reader.readAsArrayBuffer(this.resource);\n    });\n  }\n\n  static blobToString(blob: Blob, success: (text: string) => void, fail: () => void) {\n    const reader = new FileReader();\n    reader.addEventListener('loadend', (event) => {\n      const text = event.target?.result;\n      success(text as string);\n    });\n    reader.addEventListener('error', () => fail());\n    reader.readAsText(blob);\n  }\n\n  /**\n   * @param {*} utf8str\n   */\n  static toVTT(utf8str: string) {\n    return utf8str\n      .replace(/\\{\\\\([ibu])\\}/g, '</$1>')\n      .replace(/\\{\\\\([ibu])1\\}/g, '<$1>')\n      .replace(/\\{([ibu])\\}/g, '<$1>')\n      .replace(/\\{\\/([ibu])\\}/g, '</$1>')\n      .replace(/(\\d\\d:\\d\\d:\\d\\d),(\\d\\d\\d)/g, '$1.$2')\n      .concat('\\r\\n\\r\\n');\n  }\n\n  static toTypedArray(str: string) {\n    const result: number[] = [];\n    str.split('').forEach((each) => {\n      result.push(parseInt(`${each.charCodeAt(0)}`, 16));\n    });\n    return Uint8Array.from(result);\n  }\n\n  getURL() {\n    return new Promise<string>((resolve, reject) => {\n      if (!(this.resource instanceof Blob)) return reject('Expecting resource to be a Blob but something else found.');\n      if (!FileReader) return reject('No FileReader constructor found');\n      if (!TextDecoder) return reject('No TextDecoder constructor found');\n      return WebVTTConverter.blobToString(\n        this.resource,\n        (decoded) => {\n          const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n          const text = vttString.concat(WebVTTConverter.toVTT(decoded));\n          const blob = new Blob([text], { type: 'text/vtt' });\n          this.objectURL = URL.createObjectURL(blob);\n\n          return resolve(this.objectURL);\n        },\n        () => {\n          this.blobToBuffer().then((buffer) => {\n            const utf8str = new TextDecoder('utf-8').decode(buffer);\n            const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n            const text = vttString.concat(WebVTTConverter.toVTT(utf8str));\n            const blob = new Blob([text], { type: 'text/vtt' });\n            this.objectURL = URL.createObjectURL(blob);\n\n            return resolve(this.objectURL);\n          });\n        },\n      );\n    });\n  }\n\n  release() {\n    URL.createObjectURL(this.objectURL);\n  }\n}\n\nexport async function convertToVTT(src: string) {\n  const file = await (await fetch(src)).blob();\n  const converter = new WebVTTConverter(file);\n\n  return converter.getURL();\n}\n","import UIMedia, { MediaProps } from '@enact/ui/Media';\nimport HLS from 'hls.js';\nimport uniq from 'lodash/uniq';\nimport uniqBy from 'lodash/uniqBy';\n\nimport { convertToVTT } from 'utils/subtitles';\n\nexport type AudioTrack = {\n  name: string;\n  lang: string;\n};\n\nexport type SourceTrack = {\n  src: string;\n  name: string;\n};\n\nexport type SubtitleTrack = {\n  src: string;\n  name: string;\n  lang: string;\n};\n\nclass Media extends UIMedia {\n  hls?: HLS;\n\n  media!: HTMLMediaElement & {\n    audioTracks?: { enabled?: boolean; label: string }[];\n  };\n\n  state!: {\n    src: string;\n  };\n\n  props!: MediaProps & {\n    startTime?: number;\n    audioTracks?: AudioTrack[];\n    sourceTracks: SourceTrack[];\n    subtitleTracks?: SubtitleTrack[];\n  };\n\n  load(src: string) {\n    let startTime = this.props.startTime;\n\n    if (this.state?.src && this.state.src !== src) {\n      startTime = this.media.currentTime;\n    }\n\n    this.destroy();\n\n    const media = this.media;\n\n    this.setState({ src });\n\n    const handleLoaded = () => {\n      if (startTime) {\n        media.currentTime = startTime;\n      }\n\n      media.play();\n    };\n\n    if (src.includes('.m3u8') && HLS.isSupported()) {\n      const hls = (this.hls = new HLS());\n\n      hls.attachMedia(media);\n      hls.on(HLS.Events.MEDIA_ATTACHED, () => {\n        hls.loadSource(src);\n        hls.on(HLS.Events.MANIFEST_PARSED, handleLoaded);\n      });\n\n      return;\n    }\n\n    media.src = src;\n    media.addEventListener('loadedmetadata', handleLoaded);\n  }\n\n  get audioTracks() {\n    if (this.hls) {\n      return uniq(this.hls.audioTracks.map((audioTrack) => audioTrack.name));\n    }\n\n    return this.props.audioTracks?.map((audioTrack) => audioTrack.name);\n  }\n\n  get audioTrack() {\n    if (this.hls) {\n      return this.hls.audioTracks.find((audioTrack) => audioTrack.id === this.hls?.audioTrack)?.name!;\n    }\n\n    const audioTracksIndex = Array.from(this.media.audioTracks || []).findIndex((audioTrack) => audioTrack.enabled);\n\n    return this.props.audioTracks?.[audioTracksIndex]?.name!;\n  }\n\n  set audioTrack(name: string) {\n    if (this.hls) {\n      const audioTrack = this.hls.audioTracks.find((audioTrack) => audioTrack.name === name);\n\n      if (audioTrack) {\n        this.hls.audioTrack = audioTrack.id;\n      }\n    } else {\n      const audioTracks = Array.from(this.media.audioTracks || []);\n      let audioTracksIndex = this.props.audioTracks?.findIndex((audioTrack) => audioTrack.name === name);\n\n      if (!audioTracksIndex || audioTracksIndex > audioTracks.length - 1) {\n        audioTracksIndex = 0;\n      }\n\n      audioTracks.forEach((audioTrack, idx) => {\n        audioTrack.enabled = idx === audioTracksIndex;\n      });\n    }\n  }\n\n  get sourceTracks() {\n    return uniqBy(this.props.sourceTracks, 'src').map((sourceTrack) => sourceTrack.name);\n  }\n\n  get sourceTrack() {\n    return this.props.sourceTracks.find((sourceTrack) => sourceTrack.src === this.state.src)?.name!;\n  }\n\n  set sourceTrack(name: string) {\n    const sourceTrack = this.props.sourceTracks.find((sourceTrack) => sourceTrack.name === name);\n\n    if (sourceTrack) {\n      this.load(sourceTrack.src);\n    }\n  }\n\n  get subtitleTracks() {\n    if (this.hls) {\n      return this.hls.subtitleTracks.map((subtitleTrack) => subtitleTrack.name);\n    }\n\n    return this.props.subtitleTracks?.map((subtitleTrack) => subtitleTrack.name);\n  }\n\n  get subtitleTrack() {\n    if (this.hls) {\n      return this.hls.subtitleTracks.find((subtitleTrack) => subtitleTrack.id === this.hls?.subtitleTrack)?.name!;\n    }\n\n    return Array.from(this.media.textTracks || []).find((textTrack) => textTrack.mode === 'showing')?.label!;\n  }\n\n  set subtitleTrack(name: string) {\n    if (this.hls) {\n      this.hls.subtitleTrack = this.hls.subtitleTracks.find((subtitle) => subtitle.name === name)?.id ?? -1;\n    } else {\n      const textTracks = Array.from(this.media.textTracks || []);\n\n      textTracks.forEach((textTrack) => {\n        textTrack.mode = 'disabled';\n      });\n\n      const subtitleTrack = textTracks.find((textTrack) => textTrack.label === name);\n\n      if (subtitleTrack) {\n        subtitleTrack.mode = 'showing';\n      } else {\n        const subtitleTrack = this.props.subtitleTracks?.find((subtitleTrack) => subtitleTrack.name === name);\n\n        if (subtitleTrack) {\n          const track = document.createElement('track');\n\n          track.kind = 'captions';\n          track.id = subtitleTrack.name;\n          track.srclang = subtitleTrack.lang;\n          track.label = subtitleTrack.name;\n\n          const showTrack = (src: string) => {\n            track.src = src;\n            track.track.mode = 'showing';\n          };\n\n          if (subtitleTrack.src.endsWith('.srt')) {\n            convertToVTT(subtitleTrack.src).then(showTrack);\n          } else {\n            showTrack(subtitleTrack.src);\n          }\n\n          this.media.appendChild(track);\n        }\n      }\n    }\n  }\n\n  private destroy() {\n    if (this.hls) {\n      this.hls.destroy();\n    } else {\n      this.media.src = '';\n    }\n  }\n\n  componentDidMount() {\n    this.load(this.props.sourceTracks[0].src);\n\n    super.componentDidMount?.();\n  }\n\n  componentDidUpdate() {}\n\n  componentWillUnmount() {\n    this.destroy();\n\n    super.componentWillUnmount?.();\n  }\n}\n\nexport default Media;\n","import { useCallback, useEffect, useState } from 'react';\nimport { VideoPlayerBase } from '@enact/moonstone/VideoPlayer';\nimport map from 'lodash/map';\n\nimport Popup from 'components/popup';\nimport Radio from 'components/radio';\nimport Text from 'components/text';\n\nimport { isArrowUpButton, isPlayButton } from 'utils/keyboard';\n\nconst NONE = 'NONE';\n\ntype Props = {\n  player: React.MutableRefObject<VideoPlayerBase | undefined>;\n};\n\nconst Settings: React.FC<Props> = ({ player }) => {\n  const [popupVisible, setPopupVisible] = useState(false);\n\n  const [audios, setAudios] = useState<string[]>([]);\n  const [currentAudio, setCurrentAudio] = useState<string | null>(null);\n  const [sources, setSources] = useState<string[]>([]);\n  const [currentSource, setCurrentSource] = useState<string | null>(null);\n  const [subtitles, setSubtitles] = useState<string[]>([]);\n  const [currentSubtitle, setCurrentSubtitle] = useState<string | null>(null);\n\n  const handleVideoUpdate = useCallback(\n    (name: string, value: string) => {\n      if (player.current) {\n        const video: any = player.current.getVideoNode();\n\n        video[name] = value;\n      }\n    },\n    [player],\n  );\n\n  const handleAudioChange = useCallback(\n    (audio: string) => () => {\n      setCurrentAudio(audio);\n      handleVideoUpdate('audioTrack', audio);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSourceChange = useCallback(\n    (source: string) => () => {\n      setCurrentSource(source);\n      handleVideoUpdate('sourceTrack', source);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSubtitleChange = useCallback(\n    (subtitle: string) => () => {\n      setCurrentSubtitle(subtitle);\n      handleVideoUpdate('subtitleTrack', subtitle);\n    },\n    [handleVideoUpdate],\n  );\n\n  const handlePopupClose = useCallback(() => {\n    setPopupVisible(false);\n\n    if (player.current) {\n      player.current.play();\n    }\n  }, [player]);\n\n  useEffect(() => {\n    const listiner = (e: KeyboardEvent) => {\n      if (isArrowUpButton(e)) {\n        if (player.current) {\n          const video: any = player.current.getVideoNode();\n          const { audioTracks, audioTrack, sourceTracks, sourceTrack, subtitleTracks, subtitleTrack } = video;\n\n          if (audioTracks?.length > 1 || sourceTracks?.length > 1 || subtitleTracks?.length > 0) {\n            setAudios(audioTracks);\n            setCurrentAudio(audioTrack);\n\n            setSources(sourceTracks);\n            setCurrentSource(sourceTrack);\n\n            setSubtitles(subtitleTracks);\n            setCurrentSubtitle(subtitleTrack);\n\n            player.current.pause();\n\n            setPopupVisible(true);\n          }\n        }\n      } else if (isPlayButton(e)) {\n        setPopupVisible(false);\n      }\n    };\n\n    window.addEventListener('keydown', listiner);\n\n    return () => {\n      window.removeEventListener('keydown', listiner);\n    };\n  }, [popupVisible, player]);\n\n  return (\n    <Popup visible={popupVisible} onClose={handlePopupClose}>\n      <div className=\"flex flex-col\">\n        {audios?.length > 1 && (\n          <div className=\"flex flex-col py-4\">\n            <Text>Звук</Text>\n\n            <div className=\"flex flex-wrap mt-2\">\n              {map(audios, (audio) => (\n                <div key={audio} className=\"w-1/2\">\n                  <Radio checked={audio === currentAudio} onChange={handleAudioChange(audio)}>\n                    {audio}\n                  </Radio>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n        {sources?.length > 1 && (\n          <div className=\"flex flex-col py-4\">\n            <Text>Качество</Text>\n\n            <div className=\"flex flex-wrap mt-2\">\n              {map(sources, (source) => (\n                <div key={source} className=\"w-1/6\">\n                  <Radio checked={source === currentSource} onChange={handleSourceChange(source)}>\n                    {source}\n                  </Radio>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n        {subtitles?.length > 0 && (\n          <div className=\"flex flex-col py-4\">\n            <Text>Субтитры</Text>\n\n            <div className=\"flex flex-wrap mt-2\">\n              <div className=\"w-1/6\">\n                <Radio checked={!currentSubtitle || currentSubtitle === NONE} onChange={handleSubtitleChange(NONE)}>\n                  Нет\n                </Radio>\n              </div>\n\n              {map(subtitles, (subtitle) => (\n                <div key={subtitle} className=\"w-1/6\">\n                  <Radio checked={subtitle === currentSubtitle} onChange={handleSubtitleChange(subtitle)}>\n                    {subtitle}\n                  </Radio>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </Popup>\n  );\n};\n\nexport default Settings;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { VideoPlayerBase } from '@enact/moonstone/VideoPlayer';\n\nimport Button from 'components/button';\n\ntype Props = {\n  player: React.MutableRefObject<VideoPlayerBase | undefined>;\n  startTime?: number;\n  startInDelay?: number;\n};\n\nconst StartFrom: React.FC<Props> = ({ startTime, startInDelay = 5, player }) => {\n  const [visible, setVisible] = useState(true);\n  const [startIn, setStartIn] = useState(startInDelay);\n  const startFrom = useMemo(() => new Date((startTime || 0) * 1000).toISOString().substr(11, 8).replace(/^00:/, ''), [startTime]);\n\n  const handleStartFromClick = useCallback(() => {\n    if (player.current) {\n      setVisible(false);\n      const video: any = player.current.getVideoNode();\n\n      video.currentTime = startTime;\n    }\n  }, [startTime, player]);\n  const handleStartFromBeginingClick = useCallback(() => {\n    setVisible(false);\n  }, []);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n\n    if (visible) {\n      intervalId = setInterval(() => {\n        setStartIn((prevStartIn) => {\n          const newStartIn = prevStartIn - 1;\n\n          if (newStartIn <= 0) {\n            handleStartFromClick();\n          }\n\n          return newStartIn;\n        });\n      }, 1000);\n    }\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [visible, handleStartFromClick]);\n\n  if (!startTime || !visible) {\n    return null;\n  }\n\n  return (\n    <div className=\"flex justify-center absolute w-full z-50 bottom-32\">\n      <Button onClick={handleStartFromClick}>\n        Смотреть с {startFrom} через {startIn}\n      </Button>\n      <Button autoFocus onClick={handleStartFromBeginingClick}>\n        Смотреть с начала\n      </Button>\n    </div>\n  );\n};\n\nexport default StartFrom;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport VideoPlayer, { VideoPlayerBase, VideoPlayerBaseProps } from '@enact/moonstone/VideoPlayer';\n\nimport Media, { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\nimport Text from 'components/text';\nimport useBackButtonEffect from 'hooks/useBackButtonEffect';\n\nimport Settings from './settings';\nimport StartFrom from './startFrom';\n\nexport type PlayerProps = {\n  title: string;\n  description?: string;\n  poster: string;\n  audios?: AudioTrack[];\n  sources: SourceTrack[];\n  subtitles?: SubtitleTrack[];\n  startTime?: number;\n  timeSyncInterval?: number;\n  onPlay?: () => void;\n  onPause?: (currentTime: number) => void;\n  onEnded?: (currentTime: number) => void;\n  onTimeSync?: (currentTime: number) => void | Promise<void>;\n} & VideoPlayerBaseProps;\n\nconst Player: React.FC<PlayerProps> = ({\n  title,\n  description,\n  poster,\n  audios,\n  sources,\n  subtitles,\n  startTime,\n  timeSyncInterval = 30,\n  onPlay,\n  onPause,\n  onEnded,\n  onTimeSync,\n  ...props\n}) => {\n  const playerRef = useRef<VideoPlayerBase>();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [titleVisible, setTitleVisible] = useState(true);\n\n  const handlePlay = useCallback(() => {\n    setTitleVisible(false);\n    onPlay?.();\n  }, [onPlay]);\n  const handlePause = useCallback(\n    (e) => {\n      setTitleVisible(true);\n      onPause?.(e.currentTime);\n    },\n    [onPause],\n  );\n  const handleEnded = useCallback(\n    (e) => {\n      onEnded?.(e.target.currentTime);\n    },\n    [onEnded],\n  );\n  const handleTimeSync = useCallback(async () => {\n    if (playerRef.current && onTimeSync) {\n      const video: any = playerRef.current.getVideoNode();\n\n      const currentTime = video['currentTime'];\n\n      await onTimeSync(currentTime);\n    }\n  }, [onTimeSync, playerRef]);\n  const handleLoadedMetadata = useCallback(() => {\n    setIsLoaded(true);\n  }, []);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n\n    if (titleVisible) {\n      timeoutId = setTimeout(() => {\n        setTitleVisible(false);\n      }, 5 * 1000);\n    }\n\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [titleVisible]);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n\n    if (onTimeSync) {\n      intervalId = setInterval(handleTimeSync, timeSyncInterval * 1000);\n    }\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [timeSyncInterval, onTimeSync, handleTimeSync]);\n\n  useBackButtonEffect(handleTimeSync);\n\n  return (\n    <>\n      {titleVisible && <Text className=\"p-4 absolute top-0 z-10\">{title}</Text>}\n      <Settings player={playerRef} />\n      {isLoaded && startTime! > 0 && <StartFrom startTime={startTime} player={playerRef} />}\n\n      <VideoPlayer\n        {...props}\n        //@ts-expect-error\n        ref={playerRef}\n        title={description}\n        poster={poster}\n        jumpBy={10}\n        onPlay={handlePlay}\n        onPause={handlePause}\n        onEnded={handleEnded}\n        onLoadedMetadata={handleLoadedMetadata}\n        audioTracks={audios}\n        sourceTracks={sources}\n        subtitleTracks={subtitles}\n        videoComponent={Media}\n      />\n    </>\n  );\n};\n\nexport default Player;\n"],"sourceRoot":""}