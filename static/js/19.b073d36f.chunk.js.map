{"version":3,"sources":["views/releases/releases.tsx","components/seo/seo.tsx","hooks/useInViewport.ts","components/scrollable/scrollable.tsx","components/title/title.tsx","components/imageItem/imageItem.tsx","components/videoItem/videoItem.tsx","components/itemsList/itemsList.tsx","hooks/useInfiniteItems.ts","hooks/useApiInfinite.ts","containers/itemsListInfinite/itemsListInfinite.tsx"],"names":["RELEASES_MAP","itemsPopular","itemsFresh","itemsHot","ReleasesView","useParams","releaseId","queryResult","useApiInfinite","total","useMemo","data","pages","pagination","total_items","seoTitle","getReleaseById","title","className","map","releaseName","releaseKey","active","href","generatePath","PATHS","Releases","Seo","props","Helmet","defaultTitle","titleTemplate","useInViewport","target","options","config","disconnectOnLeave","onEnterViewport","onLeaveViewport","useState","forceUpdate","observer","useRef","inViewportRef","intersected","enterCountRef","leaveCountRef","startObserver","useCallback","current","node","findDOMNode","observe","stopObserver","unobserve","disconnect","handleIntersection","entries","entry","isIntersecting","intersectionRatio","isInViewport","initIntersectionObserver","IntersectionObserver","useEffect","inViewport","enterCount","leaveCount","Scrollable","children","onScrollToEnd","footerRef","cx","ref","Title","ImageItem","wrapperClassName","source","caption","loading","src","alt","VideoItem","item","history","useHistory","split","handleOnClick","id","push","Item","itemId","onClick","posters","medium","new","ItemsList","items","scrollable","content","Array","_","idx","useInfiniteItems","processItems","isLoading","isFetchingNextPage","fetchNextPage","canFetchNextPage","setCanFetchNextPage","uniqBy","filter","flatMap","page","processedItems","handleLoadMore","length","method","params","client","ApiClient","query","useInfiniteQuery","pageParam","getNextPageParam","lastPage","ItemsListInfinite","fetchMore"],"mappings":"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","file":"static/js/19.b073d36f.chunk.js","sourcesContent":["import { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport map from 'lodash/map';\n\nimport Link from 'components/link';\nimport Seo from 'components/seo';\nimport ItemsListInfinite from 'containers/itemsListInfinite';\nimport useApiInfinite from 'hooks/useApiInfinite';\nimport { PATHS, RouteParams, generatePath } from 'routes';\n\nconst RELEASES_MAP = {\n  itemsPopular: 'Популярные',\n  itemsFresh: 'Свежие',\n  itemsHot: 'Горячие',\n} as const;\n\ntype Releases = keyof typeof RELEASES_MAP;\n\nconst getReleaseById = (releaseId?: string) => {\n  return releaseId\n    ? // @ts-expect-error\n      RELEASES_MAP[releaseId]\n    : RELEASES_MAP.itemsPopular;\n};\n\nconst ReleasesView: React.FC = () => {\n  const { releaseId = 'itemsPopular' } = useParams<RouteParams>();\n  const queryResult = useApiInfinite(releaseId as Releases, ['1']);\n  const total = useMemo(() => queryResult.data?.pages?.[0]?.pagination?.total_items, [queryResult.data?.pages]);\n  const seoTitle = getReleaseById(releaseId);\n  const title = total ? `${seoTitle} (${total})` : seoTitle;\n\n  return (\n    <>\n      <Seo title={seoTitle} />\n      <div className=\"flex\">\n        {map(RELEASES_MAP, (releaseName, releaseKey) => (\n          <Link\n            key={releaseKey}\n            className=\"mr-2\"\n            active={releaseId === releaseKey}\n            href={generatePath(PATHS.Releases, { releaseId: releaseKey })}\n          >\n            {releaseName}\n          </Link>\n        ))}\n      </div>\n      <ItemsListInfinite title={title} queryResult={queryResult} />\n    </>\n  );\n};\n\nexport default ReleasesView;\n","import { Helmet, HelmetProps } from 'react-helmet';\n\ntype Props = {} & HelmetProps;\n\nconst Seo: React.FC<Props> = (props) => {\n  return <Helmet defaultTitle=\"Unknown\" titleTemplate=\"%s | Kinopub WebOS\" {...props} />;\n};\n\nexport default Seo;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { findDOMNode } from 'react-dom';\n\ntype Props = {\n  onEnterViewport?: () => void;\n  onLeaveViewport?: () => void;\n};\n\nconst useInViewport = (\n  target: React.MutableRefObject<React.ReactInstance | null | undefined>,\n  props: Props,\n  options?: IntersectionObserverInit,\n  config = { disconnectOnLeave: false },\n) => {\n  const { onEnterViewport, onLeaveViewport } = props;\n  const [, forceUpdate] = useState();\n\n  const observer = useRef<IntersectionObserver | null>(null);\n\n  const inViewportRef = useRef(false);\n  const intersected = useRef(false);\n\n  const enterCountRef = useRef(0);\n  const leaveCountRef = useRef(0);\n\n  const startObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.observe(node);\n      }\n    }\n  }, [target, observer]);\n\n  const stopObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.unobserve(node);\n        observer.current.disconnect();\n        observer.current = null;\n      }\n    }\n  }, [target, observer]);\n\n  const handleIntersection = useCallback(\n    (entries) => {\n      const entry = entries[0] || {};\n      const { isIntersecting, intersectionRatio } = entry;\n      const isInViewport = typeof isIntersecting !== 'undefined' ? isIntersecting : intersectionRatio > 0;\n\n      // enter\n      if (!intersected.current && isInViewport) {\n        intersected.current = true;\n\n        onEnterViewport?.();\n\n        enterCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n\n        return;\n      }\n\n      // leave\n      if (intersected.current && !isInViewport) {\n        intersected.current = false;\n\n        onLeaveViewport?.();\n\n        if (config.disconnectOnLeave && observer.current) {\n          // disconnect obsever on leave\n          observer.current.disconnect();\n        }\n\n        leaveCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n      }\n    },\n    [observer, config.disconnectOnLeave, onEnterViewport, onLeaveViewport],\n  );\n\n  const initIntersectionObserver = useCallback(() => {\n    if (!observer.current) {\n      observer.current = new IntersectionObserver(handleIntersection, options);\n    }\n  }, [observer, options, handleIntersection]);\n\n  useEffect(() => {\n    initIntersectionObserver();\n    startObserver();\n\n    return () => {\n      stopObserver();\n    };\n  }, [initIntersectionObserver, startObserver, stopObserver]);\n\n  return {\n    inViewport: inViewportRef.current,\n    enterCount: enterCountRef.current,\n    leaveCount: leaveCountRef.current,\n  };\n};\n\nexport default useInViewport;\n","import { useRef } from 'react';\nimport cx from 'classnames';\n\nimport useInViewport from 'hooks/useInViewport';\n\ntype Props = {\n  onScrollToEnd?: () => void;\n  className?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Scrollable: React.FC<Props> = ({ children, className, onScrollToEnd, ...props }) => {\n  const footerRef = useRef<HTMLDivElement>(null);\n\n  useInViewport(footerRef, { onEnterViewport: onScrollToEnd });\n\n  return (\n    <div className={cx('overflow-y-auto h-full', className)} {...props}>\n      {children}\n      <div className=\"h-40\" ref={footerRef} />\n    </div>\n  );\n};\n\nexport default Scrollable;\n","import cx from 'classnames';\n\nimport Text from 'components/text';\n\ntype Props = {\n  title?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Title: React.FC<Props> = ({ title, className, ...props }) => {\n  if (!title) {\n    return null;\n  }\n\n  return (\n    <Text {...props} className={cx('m-1 mb-3', className)}>\n      {title}\n    </Text>\n  );\n};\n\nexport default Title;\n","import cx from 'classnames';\n\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  className?: string;\n  wrapperClassName?: string;\n  source?: string;\n  caption?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst ImageItem: React.FC<Props> = ({ className, wrapperClassName, source, caption, children, ...props }) => {\n  return (\n    <Spottable {...props} className={cx('rounded-xl w-1/5', wrapperClassName)}>\n      <div className={cx('h-40 m-1 flex flex-col relative overflow-hidden cursor-pointer', className)}>\n        <img\n          loading=\"lazy\"\n          className=\"w-full h-full object-cover rounded-xl border-2 border-gray-300 bg-gray-300\"\n          src={source}\n          alt={caption}\n        />\n        <div className=\"px-2\">\n          <p className=\"text-gray-200 text-sm text-center overflow-hidden whitespace-nowrap\">{caption}</p>\n        </div>\n\n        {children}\n      </div>\n    </Spottable>\n  );\n};\n\nexport default ImageItem;\n","import { useCallback, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport cx from 'classnames';\n\nimport { Item } from 'api';\nimport ImageItem from 'components/imageItem';\nimport { PATHS, generatePath } from 'routes';\n\ntype Props = {\n  item?: Item;\n  className?: string;\n};\n\nconst VideoItem: React.FC<Props> = ({ item, className }) => {\n  const history = useHistory();\n  const title = useMemo(() => item?.title?.split('/')[0], [item?.title]);\n\n  const handleOnClick = useCallback(() => {\n    if (item?.id) {\n      history.push(\n        generatePath(PATHS.Item, {\n          itemId: item.id,\n        }),\n      );\n    }\n  }, [item?.id, history]);\n\n  return (\n    <ImageItem onClick={handleOnClick} source={item?.posters.medium} caption={title} className={cx('h-72', className)}>\n      {item?.new && (\n        <div className=\"absolute bg-red-600 border-gray-300 border-t-2 border-r-2 text-gray-200 px-2 py-1 rounded-bl rounded-tr-xl top-0 right-0\">\n          {item?.new}\n        </div>\n      )}\n    </ImageItem>\n  );\n};\n\nexport default VideoItem;\n","import React from 'react';\nimport cx from 'classnames';\nimport map from 'lodash/map';\n\nimport { Item } from 'api';\nimport Scrollable from 'components/scrollable';\nimport Title from 'components/title';\nimport VideoItem from 'components/videoItem';\n\ntype Props = {\n  title?: string;\n  items?: Item[];\n  loading?: boolean;\n  onScrollToEnd?: () => void;\n  scrollable?: boolean;\n  className?: string;\n};\n\nconst ItemsList: React.FC<Props> = ({ title, items, loading, onScrollToEnd, scrollable = true, className }) => {\n  const content = (\n    <div>\n      <Title title={title} />\n      <div className={cx('flex flex-wrap', className)}>\n        {map(items, (item) => (\n          <VideoItem key={item.id} item={item} />\n        ))}\n        {loading && map([...new Array(15)], (_, idx) => <VideoItem key={idx} />)}\n      </div>\n    </div>\n  );\n\n  return scrollable ? <Scrollable onScrollToEnd={onScrollToEnd}>{content}</Scrollable> : content;\n};\n\nexport default ItemsList;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport filter from 'lodash/filter';\nimport flatMap from 'lodash/flatMap';\nimport uniqBy from 'lodash/uniqBy';\n\nimport useApiInfinite from 'hooks/useApiInfinite';\n\ntype PageWithItems<T> = {\n  items: T[];\n};\n\nexport type QueryResult = ReturnType<typeof useApiInfinite>;\n\nfunction useInfiniteItems<T>(queryResult: QueryResult, processItems?: (items: T[]) => T[]) {\n  const { data, isLoading, isFetchingNextPage, fetchNextPage } = queryResult;\n  const [canFetchNextPage, setCanFetchNextPage] = useState(false);\n\n  const items = useMemo(\n    () => uniqBy(filter(flatMap<PageWithItems<T>, T>(data?.pages as unknown as PageWithItems<T>[], (page) => page.items)), 'id'),\n    [data?.pages],\n  );\n  const processedItems = useMemo(() => (processItems ? processItems(items) : items), [items, processItems]);\n\n  const handleLoadMore = useCallback(() => {\n    if (canFetchNextPage) {\n      fetchNextPage();\n      setCanFetchNextPage(false);\n    }\n  }, [canFetchNextPage, fetchNextPage]);\n\n  useEffect(() => {\n    setCanFetchNextPage(true);\n  }, [items.length]);\n\n  return [processedItems, isLoading || isFetchingNextPage, handleLoadMore] as const;\n}\n\nexport default useInfiniteItems;\n","import { useMemo } from 'react';\nimport { UseInfiniteQueryOptions, useInfiniteQuery } from 'react-query';\n\nimport ApiClient, { PaginationResponse } from 'api';\n\nimport { Method, Methods } from './useApi';\n\nfunction useApiInfinite<T extends Method>(\n  method: T,\n  params: Parameters<ApiClient[T]> = [] as Parameters<ApiClient[T]>,\n  options?: UseInfiniteQueryOptions<Methods[T]>,\n) {\n  const client = useMemo(() => new ApiClient(), []);\n  const query = useInfiniteQuery<Methods[T], string, Methods[T]>(\n    [method, ...params],\n    ({ pageParam }) => {\n      // @ts-expect-error\n      return client[method](...params, pageParam) as Methods[T];\n    },\n    {\n      // @ts-expect-error\n      getNextPageParam: (lastPage: PaginationResponse) => {\n        return lastPage?.pagination?.current + 1 || 1;\n      },\n      ...options,\n    },\n  );\n\n  return query;\n}\n\nexport default useApiInfinite;\n","import { Item } from 'api';\nimport ItemsList from 'components/itemsList';\nimport useInfiniteItems, { QueryResult } from 'hooks/useInfiniteItems';\n\ntype Props = {\n  title?: string;\n  queryResult: QueryResult;\n  processItems?: (items: Item[]) => Item[];\n};\n\nconst ItemsListInfinite: React.FC<Props> = ({ title, queryResult, processItems }) => {\n  const [items, isLoading, fetchMore] = useInfiniteItems(queryResult, processItems);\n\n  return <ItemsList title={title} items={items} loading={isLoading} onScrollToEnd={fetchMore} />;\n};\n\nexport default ItemsListInfinite;\n"],"sourceRoot":""}