{"version":3,"sources":["views/speed/speed.tsx","hooks/useApi.ts","../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../node_modules/react-query/es/react/useBaseQuery.js","../node_modules/react-query/es/core/queryObserver.js","../node_modules/react-query/es/react/useQuery.js","components/button/button.tsx"],"names":["updateSpeedReducer","state","action","type","payload","SpeedView","data","useApi","useReducer","speed","setSpeed","useState","started","setStarted","servers","useMemo","map","items","name","location","server","dlURL","ulURL","pingURL","getIpURL","workers","worker","window","_settings","test_order","xhr_dlMultistream","setSelectedServer","onupdate","testState","dlStatus","currentWorkerIndex","setCurrentWorkerIndex","handleStart","useCallback","handleStop","useEffect","onend","_state","start","abort","script","document","createElement","src","async","head","appendChild","removeChild","className","id","icon","onClick","method","params","options","client","ApiClient","query","useQuery","createValue","_isReset","clearReset","reset","isReset","QueryErrorResetBoundaryContext","React","createContext","useBaseQuery","Observer","mountedRef","useRef","forceUpdate","queryClient","useQueryClient","errorResetBoundary","useContext","defaultedOptions","defaultQueryObserverOptions","optimisticResults","onError","notifyManager","batchCalls","onSuccess","onSettled","suspense","staleTime","useErrorBoundary","retryOnMount","observer","result","getOptimisticResult","current","unsubscribe","subscribe","x","updateResult","setOptions","listeners","isLoading","fetchOptimistic","then","_ref","catch","error","undefined","isError","isFetching","notifyOnChangeProps","trackResult","QueryObserver","_Subscribable","_this","call","this","trackedProps","previousSelectError","bindMethods","_inheritsLoose","_proto","prototype","remove","bind","refetch","onSubscribe","length","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","shouldFetchOnReconnect","enabled","refetchOnReconnect","isStale","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearTimers","removeObserver","notifyOptions","prevOptions","prevQuery","Error","queryKey","updateQuery","mounted","hasListeners","shouldFetchOptionally","updateStaleTimeout","refetchInterval","updateRefetchInterval","getQueryCache","build","createResult","getCurrentResult","currentResult","_this2","trackedResult","Object","keys","forEach","key","defineProperty","configurable","enumerable","get","typedKey","includes","push","getNextResult","_this3","Promise","resolve","reject","throwOnError","getCurrentQuery","fetch","_this4","fetchOptions","_this5","promise","noop","_this6","clearStaleTimeout","isServer","isValidTimeout","timeout","timeUntilStale","dataUpdatedAt","staleTimeoutId","setTimeout","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","clearInterval","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","status","isPreviousData","isPlaceholderData","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","isSuccess","select","structuralSharing","replaceEqualDeep","selectError","getLogger","Date","now","placeholderData","isIdle","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangePropsExclusions","includedProps","some","changed","isIncluded","isExcluded","shallowEqualObjects","defaultNotifyOptions","cache","notify","_extends","onQueryUpdate","isCancelledError","_this8","batch","listener","Subscribable","shouldLoadOnMount","refetchOnMount","shouldRefetchOnMount","isStaleByTime","arg1","arg2","arg3","parsedOptions","parseQueryArgs","Button","iconOnly","children","autoFocus","props","wrapperRef","frameId","requestAnimationFrame","node","focus","cancelAnimationFrame","ref","cx","role"],"mappings":"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","file":"static/js/19.c43205e4.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useMemo, useReducer, useState } from 'react';\nimport map from 'lodash/map';\n\nimport Button from 'components/button';\nimport Text from 'components/text';\nimport useApi from 'hooks/useApi';\n\nfunction updateSpeedReducer(state: { [location: string]: string }, action: { type: string; payload: string }) {\n  return {\n    ...state,\n    [action.type]: action.payload,\n  };\n}\n\nconst SpeedView: React.FC = () => {\n  const { data } = useApi('serverLocations');\n  const [speed, setSpeed] = useReducer(updateSpeedReducer, {});\n  const [started, setStarted] = useState(false);\n\n  const servers = useMemo(\n    () =>\n      map(data?.items, ({ name, location }) => ({\n        name,\n        location,\n        server: `https://${location}-speed.streambox.in`,\n        dlURL: `/garbage.php`,\n        ulURL: `/empty.php`,\n        pingURL: `/empty.php`,\n        getIpURL: `/getIP.php`,\n      })),\n    [data?.items],\n  );\n  const workers = useMemo(\n    () =>\n      map(servers, (server) => {\n        // @ts-expect-error\n        const worker = new window['Speedtest']();\n\n        worker._settings.test_order = 'IP_D';\n        worker._settings.xhr_dlMultistream = 1;\n\n        worker.setSelectedServer(server);\n\n        worker.onupdate = ({ testState, dlStatus }: { testState: number; dlStatus: string }) => {\n          setSpeed({\n            type: server.location,\n            payload: dlStatus || ((testState === 1 || testState === 2) && 'Начинаем') || '',\n          });\n        };\n\n        return worker;\n      }),\n    [servers, setSpeed],\n  );\n  const [currentWorkerIndex, setCurrentWorkerIndex] = useState(0);\n\n  const handleStart = useCallback(() => {\n    setStarted(true);\n    setCurrentWorkerIndex(0);\n  }, []);\n\n  const handleStop = useCallback(() => {\n    setStarted(false);\n  }, []);\n\n  useEffect(() => {\n    if (workers[currentWorkerIndex]) {\n      if (started) {\n        workers[currentWorkerIndex].onend = () => {\n          setCurrentWorkerIndex(currentWorkerIndex + 1);\n        };\n\n        if (workers[currentWorkerIndex]._state !== 3) {\n          workers[currentWorkerIndex].start();\n        }\n      } else {\n        if (workers[currentWorkerIndex]._state === 3) {\n          workers[currentWorkerIndex].abort();\n        }\n      }\n    } else {\n      handleStop();\n    }\n  }, [started, workers, currentWorkerIndex, handleStop]);\n\n  useEffect(() => {\n    return () => {\n      handleStop();\n    };\n  }, [handleStop]);\n\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = './speedtest.js';\n    script.async = true;\n\n    document.head.appendChild(script);\n\n    return () => {\n      document.head.removeChild(script);\n    };\n  }, []);\n\n  return (\n    <>\n      <Text className=\"m-1 mb-3\">Проверка скорости</Text>\n\n      <div className=\"flex justify-around\">\n        {map(data?.items, (location) => (\n          <div className=\"flex flex-col items-center\" key={location.id}>\n            <Text>{location.name}</Text>\n            {speed[location.location] || '0.00'}\n            <Text>Mbit/s</Text>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"flex justify-center pt-12\">\n        {started ? (\n          <Button icon=\"stop\" onClick={handleStop}>\n            Стоп\n          </Button>\n        ) : (\n          <Button icon=\"play_arrow\" onClick={handleStart}>\n            Начать\n          </Button>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default SpeedView;\n","import { useMemo } from 'react';\nimport { UseQueryOptions, useQuery } from 'react-query';\n\nimport ApiClient from 'api';\n\ntype Unpromise<T> = T extends Promise<infer U> ? U : T;\n\nexport type Methods = {\n  [method in keyof ApiClient]: ApiClient[method] extends Function ? Unpromise<ReturnType<ApiClient[method]>> : never;\n};\n\nexport type Method = keyof ApiClient & string;\n\nfunction useApi<T extends Method>(\n  method: T,\n  params: Parameters<ApiClient[T]> = [] as Parameters<ApiClient[T]>,\n  options?: UseQueryOptions<Methods[T]>,\n) {\n  const client = useMemo(() => new ApiClient(), []);\n  const query = useQuery<Methods[T]>(\n    [method, ...params],\n    () =>\n      // @ts-expect-error\n      client[method](...params) as Methods[T],\n    options,\n  );\n\n  return query;\n}\n\nexport default useApi;\n","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var _React$useState2 = React.useState(function () {\n    return new Observer(queryClient, defaultedOptions);\n  }),\n      observer = _React$useState2[0];\n\n  var result = observer.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary, observer]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if ((defaultedOptions.suspense || defaultedOptions.useErrorBoundary) && result.isError && !result.isFetching) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = observer.trackResult(result);\n  }\n\n  return result;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.previousSelectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval)) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result) {\n    var _this2 = this;\n\n    var trackedResult = {};\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          var typedKey = key;\n\n          if (!_this2.trackedProps.includes(typedKey)) {\n            _this2.trackedProps.push(typedKey);\n          }\n\n          return result[typedKey];\n        }\n      });\n    });\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(options);\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select) && !this.previousSelectError) {\n          data = prevResult.data;\n        } else {\n          try {\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    if (result === prevResult) {\n      return false;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}","import { useEffect, useRef } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  icon?: string;\n  iconOnly?: boolean;\n  autoFocus?: boolean;\n  className?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Button: React.FC<Props> = ({ icon, iconOnly, children, autoFocus, className, ...props }) => {\n  const wrapperRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    let frameId: number;\n\n    if (autoFocus) {\n      frameId = requestAnimationFrame(() => {\n        // @ts-expect-error\n        wrapperRef.current?.node?.focus();\n      });\n    }\n\n    return () => {\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n    };\n  }, [wrapperRef, autoFocus]);\n\n  return (\n    <Spottable\n      {...props}\n      ref={wrapperRef}\n      className={cx('text-primary whitespace-nowrap cursor-pointer rounded px-2 py-1', className)}\n      role=\"button\"\n    >\n      <div className=\"flex items-center\">\n        {icon && <Icon className={cx({ 'mr-2': !iconOnly })} name={icon} />}\n        {!iconOnly && children}\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Button;\n"],"sourceRoot":""}