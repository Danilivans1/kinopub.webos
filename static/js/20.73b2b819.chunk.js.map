{"version":3,"sources":["hooks/useInViewport.ts","hooks/useUniqueId.ts","components/scrollable/scrollable.tsx","components/lazy/lazy.tsx","hooks/useApi.ts","components/videoItem/videoItem.tsx","components/itemsList/itemsList.tsx","../node_modules/react-query/es/react/useQuery.js","views/home/home.tsx"],"names":["useInViewport","target","props","options","config","disconnectOnLeave","onEnterViewport","onLeaveViewport","useState","forceUpdate","observer","useRef","inViewportRef","intersected","enterCountRef","leaveCountRef","startObserver","useCallback","current","node","findDOMNode","observe","stopObserver","unobserve","disconnect","handleIntersection","entries","entry","isIntersecting","intersectionRatio","isInViewport","initIntersectionObserver","IntersectionObserver","useEffect","inViewport","enterCount","leaveCount","useUniqueId","prefix","uid","useUID","useMemo","Footer","styled","div","ScrollableContext","createContext","Scrollable","children","onScrollToEnd","footerRef","id","value","direction","verticalScrollbar","horizontalScrollbar","Provider","ref","Lazy","scrollableId","useContext","once","offset","scrollContainer","useApi","method","params","client","ApiClient","query","useQuery","Wrapper","GridItem","GridListImageItem","New","VideoItem","item","history","useHistory","handleOnClick","push","generatePath","PATHS","Item","itemId","height","new","source","posters","medium","caption","title","onClick","ItemsList","items","loading","scrollable","content","map","Array","_","idx","arg1","arg2","arg3","parsedOptions","parseQueryArgs","useBaseQuery","QueryObserver","ItemsSectionWrapper","ItemsSection","data","isLoading","href","Category","categoryId","type","state","now","Date","lastMonth","setMonth","getMonth","PopularMovies","sort","conditions","NewMovies","PopularSerials","NewSerials","NewConcerts","NewDocuMovies","NewDocuSerials","NewTVShows","HomeView"],"mappings":"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","file":"static/js/20.73b2b819.chunk.js","sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\nimport { findDOMNode } from 'react-dom';\n\ntype Props = {\n  onEnterViewport?: () => void;\n  onLeaveViewport?: () => void;\n};\n\nconst useInViewport = (\n  target: React.MutableRefObject<React.ReactInstance | null | undefined>,\n  props: Props,\n  options?: IntersectionObserverInit,\n  config = { disconnectOnLeave: false },\n) => {\n  const { onEnterViewport, onLeaveViewport } = props;\n  const [, forceUpdate] = useState();\n\n  const observer = useRef<IntersectionObserver | null>(null);\n\n  const inViewportRef = useRef(false);\n  const intersected = useRef(false);\n\n  const enterCountRef = useRef(0);\n  const leaveCountRef = useRef(0);\n\n  const startObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.observe(node);\n      }\n    }\n  }, [target, observer]);\n\n  const stopObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.unobserve(node);\n        observer.current.disconnect();\n        observer.current = null;\n      }\n    }\n  }, [target, observer]);\n\n  const handleIntersection = useCallback(\n    (entries) => {\n      const entry = entries[0] || {};\n      const { isIntersecting, intersectionRatio } = entry;\n      const isInViewport = typeof isIntersecting !== 'undefined' ? isIntersecting : intersectionRatio > 0;\n\n      // enter\n      if (!intersected.current && isInViewport) {\n        intersected.current = true;\n\n        onEnterViewport?.();\n\n        enterCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n\n        return;\n      }\n\n      // leave\n      if (intersected.current && !isInViewport) {\n        intersected.current = false;\n\n        onLeaveViewport?.();\n\n        if (config.disconnectOnLeave && observer.current) {\n          // disconnect obsever on leave\n          observer.current.disconnect();\n        }\n\n        leaveCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n      }\n    },\n    [observer, config.disconnectOnLeave, onEnterViewport, onLeaveViewport],\n  );\n\n  const initIntersectionObserver = useCallback(() => {\n    if (!observer.current) {\n      observer.current = new IntersectionObserver(handleIntersection, options);\n    }\n  }, [observer, options, handleIntersection]);\n\n  useEffect(() => {\n    initIntersectionObserver();\n    startObserver();\n\n    return () => {\n      stopObserver();\n    };\n  }, [initIntersectionObserver, startObserver, stopObserver]);\n\n  return {\n    inViewport: inViewportRef.current,\n    enterCount: enterCountRef.current,\n    leaveCount: leaveCountRef.current,\n  };\n};\n\nexport default useInViewport;\n","import { useMemo } from 'react';\nimport { useUID } from 'react-uid';\n\nfunction useUniqueId(prefix: string) {\n  const uid = useUID();\n  const id = useMemo(() => `${prefix}-${uid}`, [prefix, uid]);\n\n  return id;\n}\n\nexport default useUniqueId;\n","import { createContext, useMemo, useRef } from 'react';\nimport Scroller, { ScrollerProps } from '@enact/moonstone/Scroller';\nimport styled from 'styled-components';\n\nimport useInViewport from 'hooks/useInViewport';\nimport useUniqueId from 'hooks/useUniqueId';\n\nconst Footer = styled.div`\n  height: 5rem;\n`;\n\nexport const ScrollableContext = createContext<{ id?: string }>({});\n\ntype Props = {\n  onScrollToEnd?: () => void;\n} & ScrollerProps;\n\nconst Scrollable: React.FC<Props> = ({ children, onScrollToEnd, ...props }) => {\n  const footerRef = useRef<HTMLDivElement>(null);\n  const id = useUniqueId('scrollable');\n  const value = useMemo(\n    () => ({\n      id,\n    }),\n    [id],\n  );\n\n  useInViewport(footerRef, { onEnterViewport: onScrollToEnd });\n\n  return (\n    <Scroller id={id} direction=\"vertical\" verticalScrollbar=\"hidden\" horizontalScrollbar=\"hidden\" {...props}>\n      <ScrollableContext.Provider value={value}>{children}</ScrollableContext.Provider>\n      <Footer ref={footerRef} />\n    </Scroller>\n  );\n};\n\nexport default Scrollable;\n","import { useContext } from 'react';\nimport LazyLoad, { LazyLoadProps } from 'react-lazyload';\n\nimport { ScrollableContext } from 'components/scrollable';\n\ntype Props = {} & LazyLoadProps;\n\nconst Lazy: React.FC<Props> = (props) => {\n  const { id: scrollableId } = useContext(ScrollableContext);\n\n  return <LazyLoad once offset={100} scrollContainer={scrollableId && `#${scrollableId}`} {...props} />;\n};\n\nexport function withLazy(options: Props) {\n  return function WithLazy<P>(Component: React.ComponentType<P>): React.FC<P> {\n    return (props: P) => (\n      <Lazy {...options}>\n        <Component {...props} />\n      </Lazy>\n    );\n  };\n}\n\nexport default Lazy;\n","import { useMemo } from 'react';\nimport { UseQueryOptions, useQuery } from 'react-query';\n\nimport ApiClient from 'api';\n\ntype Unpromise<T> = T extends Promise<infer U> ? U : T;\n\nexport type Methods = {\n  [method in keyof ApiClient]: ApiClient[method] extends Function ? Unpromise<ReturnType<ApiClient[method]>> : never;\n};\n\nexport type Method = keyof ApiClient & string;\n\nfunction useApi<T extends Method>(\n  method: T,\n  params: Parameters<ApiClient[T]> = [] as Parameters<ApiClient[T]>,\n  options?: UseQueryOptions<Methods[T]>,\n) {\n  const client = useMemo(() => new ApiClient(), []);\n  const query = useQuery<Methods[T]>(\n    [method, ...params],\n    () =>\n      // @ts-expect-error\n      client[method](...params) as Methods[T],\n    options,\n  );\n\n  return query;\n}\n\nexport default useApi;\n","import { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport GridListImageItem from '@enact/moonstone/GridListImageItem';\nimport styled from 'styled-components';\n\nimport { Item } from 'api';\nimport Lazy from 'components/lazy';\nimport { PATHS, generatePath } from 'routes';\n\nconst Wrapper = styled(Lazy)`\n  display: inline-flex;\n  position: relative;\n  height: 20rem !important;\n  width: 20%;\n`;\n\nconst GridItem = styled(GridListImageItem)`\n  width: 100%;\n`;\n\nconst New = styled.div`\n  position: absolute;\n  background: var(--main-color);\n  right: 0;\n  z-index: 1;\n  padding: 0 0.5em;\n  font-size: 0.75rem;\n  margin-top: 0.25rem;\n  margin-right: 0.25rem;\n`;\n\ntype Props = {\n  item?: Item;\n};\n\nconst VideoItem: React.FC<Props> = ({ item }) => {\n  const history = useHistory();\n\n  const handleOnClick = useCallback(() => {\n    if (item?.id) {\n      history.push(\n        generatePath(PATHS.Item, {\n          itemId: item.id,\n        }),\n      );\n    }\n  }, [item?.id, history]);\n\n  return (\n    <Wrapper height=\"20rem\">\n      <New>{item?.new}</New>\n      <GridItem source={item?.posters.medium} caption={item?.title} onClick={handleOnClick} />\n    </Wrapper>\n  );\n};\n\nexport default VideoItem;\n","import React from 'react';\nimport map from 'lodash/map';\n\nimport { Item } from 'api';\nimport Scrollable from 'components/scrollable';\nimport VideoItem from 'components/videoItem';\n\ntype Props = {\n  items?: Item[];\n  loading?: boolean;\n  onScrollToEnd?: () => void;\n  scrollable?: boolean;\n};\n\nconst ItemsList: React.FC<Props> = ({ items, loading, onScrollToEnd, scrollable = true }) => {\n  const content = (\n    <>\n      {map(items, (item) => (\n        <VideoItem key={item.id} item={item} />\n      ))}\n      {loading && map([...new Array(15)], (_, idx) => <VideoItem key={idx} />)}\n    </>\n  );\n\n  return scrollable ? <Scrollable onScrollToEnd={onScrollToEnd}>{content}</Scrollable> : content;\n};\n\nexport default ItemsList;\n","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}","import { useMemo } from 'react';\nimport styled from 'styled-components';\n\nimport { ItemsParams } from 'api';\nimport ItemsList from 'components/itemsList';\nimport Lazy from 'components/lazy';\nimport Link from 'components/link';\nimport Scrollable from 'components/scrollable';\nimport useApi from 'hooks/useApi';\nimport { PATHS, generatePath } from 'routes';\n\nconst ItemsSectionWrapper = styled.div`\n  padding-bottom: 1rem;\n`;\n\nconst ItemsSection: React.FC<{ title: string; params: ItemsParams }> = ({ title, params }) => {\n  const { data, isLoading } = useApi('items', [params, 0, 10]);\n  const href = useMemo(() => generatePath(PATHS.Category, { categoryId: params.type }), [params]);\n\n  return (\n    <ItemsSectionWrapper>\n      <Link href={href} state={{ params, title }}>\n        {title}\n      </Link>\n      <ItemsList items={data?.items} loading={isLoading} scrollable={false} />\n    </ItemsSectionWrapper>\n  );\n};\n\nconst now = new Date();\nconst lastMonth = now.setMonth(now.getMonth() - 1) / 1000;\n\nconst PopularMovies: React.FC = () => {\n  return <ItemsSection title=\"Популярные фильмы\" params={{ type: 'movie', sort: 'views-', conditions: [`created>${lastMonth}`] }} />;\n};\n\nconst NewMovies: React.FC = () => {\n  return <ItemsSection title=\"Новые фильмы\" params={{ type: 'movie', sort: 'created-' }} />;\n};\n\nconst PopularSerials: React.FC = () => {\n  return <ItemsSection title=\"Популярные сериалы\" params={{ type: 'serial', sort: 'watchers-' }} />;\n};\n\nconst NewSerials: React.FC = () => {\n  return <ItemsSection title=\"Новые сериалы\" params={{ type: 'serial', sort: 'created-' }} />;\n};\n\nconst NewConcerts: React.FC = () => {\n  return <ItemsSection title=\"Новые концерты\" params={{ type: 'concert', sort: 'created-' }} />;\n};\n\nconst NewDocuMovies: React.FC = () => {\n  return <ItemsSection title=\"Новые документальные фильмы\" params={{ type: 'documovie', sort: 'created-' }} />;\n};\n\nconst NewDocuSerials: React.FC = () => {\n  return <ItemsSection title=\"Новые документальные сериалы\" params={{ type: 'docuserial', sort: 'created-' }} />;\n};\n\nconst NewTVShows: React.FC = () => {\n  return <ItemsSection title=\"Новые ТВ шоу\" params={{ type: 'tvshow', sort: 'created-' }} />;\n};\n\nconst HomeView: React.FC = () => {\n  return (\n    <>\n      <Scrollable>\n        <Lazy height=\"50rem\">\n          <PopularMovies />\n        </Lazy>\n        <Lazy height=\"50rem\">\n          <NewMovies />\n        </Lazy>\n\n        <Lazy height=\"50rem\">\n          <PopularSerials />\n        </Lazy>\n        <Lazy height=\"50rem\">\n          <NewSerials />\n        </Lazy>\n\n        <Lazy height=\"50rem\">\n          <NewConcerts />\n        </Lazy>\n        <Lazy height=\"50rem\">\n          <NewDocuMovies />\n        </Lazy>\n        <Lazy height=\"50rem\">\n          <NewDocuSerials />\n        </Lazy>\n        <Lazy height=\"50rem\">\n          <NewTVShows />\n        </Lazy>\n      </Scrollable>\n    </>\n  );\n};\n\nexport default HomeView;\n"],"sourceRoot":""}