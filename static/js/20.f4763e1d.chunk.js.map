{"version":3,"sources":["components/text/text.tsx","components/popup/popup.tsx","utils/video.ts","utils/subtitles.ts","components/media/media.tsx","components/player/settings.tsx","components/player/player.tsx","utils/item.ts","views/video/video.tsx"],"names":["Text","styled","BodyText","Popup","visible","onVisibilityChange","props","handleShow","useCallback","handleClose","useEffect","listiner","e","isBackButton","stopPropagation","window","addEventListener","removeEventListener","open","onShow","onClose","formatIdx","idx","mapAudios","audios","map","audio","lang","name","filter","type","title","author","toUpper","codec","join","mapSources","files","streamingType","file","src","url","http","quality","mapSubtitles","subtitles","subtitle","WebVTTConverter","resource","objectURL","this","Promise","resolve","reject","reader","FileReader","event","buf","target","result","Uint8Array","readAsArrayBuffer","Blob","TextDecoder","blobToString","decoded","text","concat","toVTT","blob","URL","createObjectURL","blobToBuffer","then","buffer","utf8str","decode","success","fail","readAsText","replace","str","split","forEach","each","push","parseInt","charCodeAt","from","a","fetch","converter","getURL","Media","hls","media","state","destroy","setState","includes","HLS","isSupported","attachMedia","on","Events","MEDIA_ATTACHED","loadSource","MANIFEST_PARSED","uniq","audioTracks","audioTrack","find","id","audioTracksIndex","Array","findIndex","enabled","length","uniqBy","sourceTracks","sourceTrack","load","subtitleTracks","subtitleTrack","textTracks","textTrack","mode","label","track","document","createElement","kind","srclang","showTrack","endsWith","convertToVTT","appendChild","UIMedia","NONE","Wrapper","div","Section","SectionTitle","SectionContent","SectionContentItem","width","Settings","player","useState","setVisible","setAudios","currentAudio","setCurrentAudio","sources","setSources","currentSource","setCurrentSource","setSubtitles","currentSubtitle","setCurrentSubtitle","handleVideoUpdate","value","current","video","getVideoNode","currentTime","setTimeout","handleAudioChange","handleSourceChange","source","handleSubtitleChange","handleVisibilityChange","newVisible","play","isArrowUpButton","pause","isPlayButton","selected","onToggle","Title","Player","description","poster","onPlay","onPause","onEnded","playerRef","useRef","titleVisible","setTitleVisible","handlePlay","handlePause","handleEnded","ref","jumpBy","videoComponent","getItemTitle","item","season","number","usePrevNextVideos","nextVideo","useMemo","videos","episodes","nextSeason","seasons","useNextVideo","previousVideo","previousSeason","usePreviousVideo","VideoView","history","useHistory","location","useLocation","watchingMarkTime","useApiMutation","useStorageState","currentVideo","setCurrentVideo","saveCurrentTime","playerProps","posters","wide","big","handleOnEnded","goBack","handleJumpBackward","handleJumpForward","onJumpBackward","onJumpForward"],"mappings":"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","file":"static/js/20.f4763e1d.chunk.js","sourcesContent":["import BodyText from '@enact/moonstone/BodyText';\nimport styled from 'styled-components';\n\nconst Text = styled(BodyText)``;\n\nexport default Text;\n","import { useCallback, useEffect } from 'react';\nimport MoonstonePopup, { PopupProps } from '@enact/moonstone/Popup';\n\nimport { isBackButton } from 'utils/keyboard';\n\ntype Props = {\n  visible: boolean;\n  onVisibilityChange: (visible: boolean) => void;\n} & Omit<PopupProps, 'open' | 'onShow' | 'onClose'>;\n\nconst Popup: React.FC<Props> = ({ visible, onVisibilityChange, ...props }) => {\n  const handleShow = useCallback(() => {\n    onVisibilityChange(true);\n  }, [onVisibilityChange]);\n  const handleClose = useCallback(() => {\n    onVisibilityChange(false);\n  }, [onVisibilityChange]);\n\n  useEffect(() => {\n    const listiner = (e: KeyboardEvent) => {\n      if (isBackButton(e) && visible) {\n        e.stopPropagation();\n        onVisibilityChange(false);\n      }\n    };\n\n    window.addEventListener('keydown', listiner, true);\n\n    return () => {\n      window.removeEventListener('keydown', listiner, true);\n    };\n  }, [visible, onVisibilityChange]);\n\n  return <MoonstonePopup {...props} open={visible} onShow={handleShow} onClose={handleClose} />;\n};\n\nexport default Popup;\n","import filter from 'lodash/filter';\nimport map from 'lodash/map';\nimport toUpper from 'lodash/toUpper';\n\nimport { Audio, Streaming, Subtitle } from 'api';\nimport { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\n\nconst formatIdx = (idx: number) => (idx < 10 ? `0${idx}` : idx);\n\nexport function mapAudios(audios: Audio[]): AudioTrack[] {\n  return map(audios, (audio, idx) => ({\n    lang: audio.lang,\n    name: filter([\n      `${formatIdx(idx + 1)}.`,\n      audio.type?.title && audio.author?.title ? `${audio.type?.title}.` : audio.type?.title,\n      audio.author?.title,\n      audio.type?.title || audio.author?.title ? `(${toUpper(audio.lang)})` : toUpper(audio.lang),\n      audio.codec !== 'aac' && toUpper(audio.codec),\n    ]).join(' '),\n  }));\n}\n\nexport function mapSources(\n  files: { url: string | { [key in Streaming]?: string }; quality?: string }[],\n  streamingType?: Streaming,\n): SourceTrack[] {\n  return map(files, (file) => ({\n    src: (typeof file.url === 'string' ? file.url : file.url[streamingType!] || file.url.http) as string,\n    name: file.quality!,\n  }));\n}\n\nexport function mapSubtitles(subtitles: Subtitle[]): SubtitleTrack[] {\n  return map(subtitles, (subtitle, idx) => ({\n    src: subtitle.url,\n    lang: subtitle.lang,\n    name: `${toUpper(subtitle.lang)} #${formatIdx(idx + 1)}`,\n  }));\n}\n","class WebVTTConverter {\n  resource: Blob;\n\n  private objectURL?: string;\n\n  constructor(resource: Blob) {\n    this.resource = resource;\n  }\n\n  blobToBuffer() {\n    return new Promise<ArrayBuffer>((resolve, reject) => {\n      const reader = new FileReader();\n      reader.addEventListener('loadend', (event) => {\n        const buf = event.target?.result;\n        resolve(new Uint8Array(buf as ArrayBuffer));\n      });\n      reader.addEventListener('error', () => reject('Error while reading the Blob object'));\n      reader.readAsArrayBuffer(this.resource);\n    });\n  }\n\n  static blobToString(blob: Blob, success: (text: string) => void, fail: () => void) {\n    const reader = new FileReader();\n    reader.addEventListener('loadend', (event) => {\n      const text = event.target?.result;\n      success(text as string);\n    });\n    reader.addEventListener('error', () => fail());\n    reader.readAsText(blob);\n  }\n\n  /**\n   * @param {*} utf8str\n   */\n  static toVTT(utf8str: string) {\n    return utf8str\n      .replace(/\\{\\\\([ibu])\\}/g, '</$1>')\n      .replace(/\\{\\\\([ibu])1\\}/g, '<$1>')\n      .replace(/\\{([ibu])\\}/g, '<$1>')\n      .replace(/\\{\\/([ibu])\\}/g, '</$1>')\n      .replace(/(\\d\\d:\\d\\d:\\d\\d),(\\d\\d\\d)/g, '$1.$2')\n      .concat('\\r\\n\\r\\n');\n  }\n\n  static toTypedArray(str: string) {\n    const result: number[] = [];\n    str.split('').forEach((each) => {\n      result.push(parseInt(`${each.charCodeAt(0)}`, 16));\n    });\n    return Uint8Array.from(result);\n  }\n\n  getURL() {\n    return new Promise<string>((resolve, reject) => {\n      if (!(this.resource instanceof Blob)) return reject('Expecting resource to be a Blob but something else found.');\n      if (!FileReader) return reject('No FileReader constructor found');\n      if (!TextDecoder) return reject('No TextDecoder constructor found');\n      return WebVTTConverter.blobToString(\n        this.resource,\n        (decoded) => {\n          const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n          const text = vttString.concat(WebVTTConverter.toVTT(decoded));\n          const blob = new Blob([text], { type: 'text/vtt' });\n          this.objectURL = URL.createObjectURL(blob);\n\n          return resolve(this.objectURL);\n        },\n        () => {\n          this.blobToBuffer().then((buffer) => {\n            const utf8str = new TextDecoder('utf-8').decode(buffer);\n            const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n            const text = vttString.concat(WebVTTConverter.toVTT(utf8str));\n            const blob = new Blob([text], { type: 'text/vtt' });\n            this.objectURL = URL.createObjectURL(blob);\n\n            return resolve(this.objectURL);\n          });\n        },\n      );\n    });\n  }\n\n  release() {\n    URL.createObjectURL(this.objectURL);\n  }\n}\n\nexport async function convertToVTT(src: string) {\n  const file = await (await fetch(src)).blob();\n  const converter = new WebVTTConverter(file);\n\n  return converter.getURL();\n}\n","import UIMedia, { MediaProps } from '@enact/ui/Media';\nimport HLS from 'hls.js';\nimport uniq from 'lodash/uniq';\nimport uniqBy from 'lodash/uniqBy';\n\nimport { convertToVTT } from 'utils/subtitles';\n\nexport type AudioTrack = {\n  name: string;\n  lang: string;\n};\n\nexport type SourceTrack = {\n  src: string;\n  name: string;\n};\n\nexport type SubtitleTrack = {\n  src: string;\n  name: string;\n  lang: string;\n};\n\nclass Media extends UIMedia {\n  hls?: HLS;\n\n  media!: HTMLMediaElement & {\n    audioTracks?: { enabled?: boolean; label: string }[];\n  };\n\n  state!: {\n    src: string;\n  };\n\n  props!: MediaProps & {\n    audioTracks?: AudioTrack[];\n    sourceTracks: SourceTrack[];\n    subtitleTracks?: SubtitleTrack[];\n  };\n\n  load(src: string) {\n    this.destroy();\n\n    const media = this.media;\n\n    this.setState({ src });\n\n    if (src.includes('.m3u8') && HLS.isSupported()) {\n      const hls = (this.hls = new HLS());\n\n      hls.attachMedia(media);\n      hls.on(HLS.Events.MEDIA_ATTACHED, () => {\n        hls.loadSource(src);\n        hls.on(HLS.Events.MANIFEST_PARSED, () => {\n          // @ts-expect-error\n          this['play']();\n        });\n      });\n\n      return;\n    }\n\n    media.src = src;\n    media.addEventListener('loadedmetadata', () => {\n      // @ts-expect-error\n      this['play']();\n    });\n  }\n\n  get audioTracks() {\n    if (this.hls) {\n      return uniq(this.hls.audioTracks.map((audioTrack) => audioTrack.name));\n    }\n\n    return this.props.audioTracks?.map((audioTrack) => audioTrack.name);\n  }\n\n  get audioTrack() {\n    if (this.hls) {\n      return this.hls.audioTracks.find((audioTrack) => audioTrack.id === this.hls?.audioTrack)?.name!;\n    }\n\n    const audioTracksIndex = Array.from(this.media.audioTracks || []).findIndex((audioTrack) => audioTrack.enabled);\n\n    return this.props.audioTracks?.[audioTracksIndex]?.name!;\n  }\n\n  set audioTrack(name: string) {\n    if (this.hls) {\n      const audioTrack = this.hls.audioTracks.find((audioTrack) => audioTrack.name === name);\n\n      if (audioTrack) {\n        this.hls.audioTrack = audioTrack.id;\n      }\n    } else {\n      const audioTracks = Array.from(this.media.audioTracks || []);\n      let audioTracksIndex = this.props.audioTracks?.findIndex((audioTrack) => audioTrack.name === name);\n\n      if (!audioTracksIndex || audioTracksIndex > audioTracks.length - 1) {\n        audioTracksIndex = 0;\n      }\n\n      audioTracks.forEach((audioTrack, idx) => {\n        audioTrack.enabled = idx === audioTracksIndex;\n      });\n    }\n  }\n\n  get sourceTracks() {\n    return uniqBy(this.props.sourceTracks, 'src').map((sourceTrack) => sourceTrack.name);\n  }\n\n  get sourceTrack() {\n    return this.props.sourceTracks.find((sourceTrack) => sourceTrack.src === this.state.src)?.name!;\n  }\n\n  set sourceTrack(name: string) {\n    const sourceTrack = this.props.sourceTracks.find((sourceTrack) => sourceTrack.name === name);\n\n    if (sourceTrack) {\n      this.load(sourceTrack.src);\n    }\n  }\n\n  get subtitleTracks() {\n    if (this.hls) {\n      return this.hls.subtitleTracks.map((subtitleTrack) => subtitleTrack.name);\n    }\n\n    return this.props.subtitleTracks?.map((subtitleTrack) => subtitleTrack.name);\n  }\n\n  get subtitleTrack() {\n    if (this.hls) {\n      return this.hls.subtitleTracks.find((subtitleTrack) => subtitleTrack.id === this.hls?.subtitleTrack)?.name!;\n    }\n\n    return Array.from(this.media.textTracks || []).find((textTrack) => textTrack.mode === 'showing')?.label!;\n  }\n\n  set subtitleTrack(name: string) {\n    if (this.hls) {\n      this.hls.subtitleTrack = this.hls.subtitleTracks.find((subtitle) => subtitle.name === name)?.id ?? -1;\n    } else {\n      const textTracks = Array.from(this.media.textTracks || []);\n\n      textTracks.forEach((textTrack) => {\n        textTrack.mode = 'disabled';\n      });\n\n      const subtitleTrack = textTracks.find((textTrack) => textTrack.label === name);\n\n      if (subtitleTrack) {\n        subtitleTrack.mode = 'showing';\n      } else {\n        const subtitleTrack = this.props.subtitleTracks?.find((subtitleTrack) => subtitleTrack.name === name);\n\n        if (subtitleTrack) {\n          const track = document.createElement('track');\n\n          track.kind = 'captions';\n          track.id = subtitleTrack.name;\n          track.srclang = subtitleTrack.lang;\n          track.label = subtitleTrack.name;\n\n          const showTrack = (src: string) => {\n            track.src = src;\n            track.track.mode = 'showing';\n          };\n\n          if (subtitleTrack.src.endsWith('.srt')) {\n            convertToVTT(subtitleTrack.src).then(showTrack);\n          } else {\n            showTrack(subtitleTrack.src);\n          }\n\n          this.media.appendChild(track);\n        }\n      }\n    }\n  }\n\n  private destroy() {\n    if (this.hls) {\n      this.hls.destroy();\n    } else {\n      this.media.src = '';\n    }\n  }\n\n  componentDidMount() {\n    this.load(this.props.sourceTracks[0].src);\n\n    super.componentDidMount?.();\n  }\n\n  componentDidUpdate() {}\n\n  componentWillUnmount() {\n    this.destroy();\n\n    super.componentWillUnmount?.();\n  }\n}\n\nexport default Media;\n","import { useCallback, useEffect, useState } from 'react';\nimport CheckboxItem from '@enact/moonstone/CheckboxItem';\nimport { VideoPlayerBase } from '@enact/moonstone/VideoPlayer';\nimport map from 'lodash/map';\nimport styled from 'styled-components';\n\nimport Popup from 'components/popup';\nimport Text from 'components/text';\n\nimport { isArrowUpButton, isPlayButton } from 'utils/keyboard';\n\nconst NONE = 'NONE';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Section = styled.div`\n  padding: 0 1rem;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SectionTitle = styled(Text)`\n  width: 5rem;\n`;\n\nconst SectionContent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst SectionContentItem = styled.div<{ width?: string | number }>`\n  width: ${(props) => props.width};\n  padding-right: 1rem;\n  box-sizing: border-box;\n`;\n\ntype Props = {\n  player: React.MutableRefObject<VideoPlayerBase | undefined>;\n};\n\nconst Settings: React.FC<Props> = ({ player }) => {\n  const [visible, setVisible] = useState(false);\n\n  const [audios, setAudios] = useState<string[]>([]);\n  const [currentAudio, setCurrentAudio] = useState<string | null>(null);\n  const [sources, setSources] = useState<string[]>([]);\n  const [currentSource, setCurrentSource] = useState<string | null>(null);\n  const [subtitles, setSubtitles] = useState<string[]>([]);\n  const [currentSubtitle, setCurrentSubtitle] = useState<string | null>(null);\n\n  const handleVideoUpdate = useCallback(\n    (name: string, value: string) => {\n      if (player.current) {\n        const video: any = player.current.getVideoNode();\n\n        const currentTime = video['currentTime'];\n\n        video[name] = value;\n\n        setTimeout(() => {\n          video['currentTime'] = currentTime - 1;\n        }, 500);\n      }\n    },\n    [player],\n  );\n\n  const handleAudioChange = useCallback(\n    (audio: string) => () => {\n      setCurrentAudio(audio);\n      handleVideoUpdate('audioTrack', audio);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSourceChange = useCallback(\n    (source: string) => () => {\n      setCurrentSource(source);\n      handleVideoUpdate('sourceTrack', source);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSubtitleChange = useCallback(\n    (subtitle: string) => () => {\n      setCurrentSubtitle(subtitle);\n      handleVideoUpdate('subtitleTrack', subtitle);\n    },\n    [handleVideoUpdate],\n  );\n\n  const handleVisibilityChange = useCallback(\n    (newVisible: boolean) => {\n      setVisible(newVisible);\n\n      if (player.current && !newVisible) {\n        player.current.play();\n      }\n    },\n    [player],\n  );\n\n  useEffect(() => {\n    const listiner = (e: KeyboardEvent) => {\n      if (isArrowUpButton(e)) {\n        if (player.current) {\n          const video: any = player.current.getVideoNode();\n          const { audioTracks, audioTrack, sourceTracks, sourceTrack, subtitleTracks, subtitleTrack } = video;\n\n          if (audioTracks?.length > 1 || sourceTracks?.length > 1 || subtitleTracks?.length > 0) {\n            setAudios(audioTracks);\n            setCurrentAudio(audioTrack);\n\n            setSources(sourceTracks);\n            setCurrentSource(sourceTrack);\n\n            setSubtitles(subtitleTracks);\n            setCurrentSubtitle(subtitleTrack);\n\n            player.current.pause();\n\n            setVisible(true);\n          }\n        }\n      } else if (isPlayButton(e)) {\n        setVisible(false);\n      }\n    };\n\n    window.addEventListener('keydown', listiner);\n\n    return () => {\n      window.removeEventListener('keydown', listiner);\n    };\n  }, [visible, player]);\n\n  return (\n    <Popup visible={visible} onVisibilityChange={handleVisibilityChange}>\n      <Wrapper>\n        {audios?.length > 1 && (\n          <Section>\n            <SectionTitle>Звук</SectionTitle>\n\n            <SectionContent>\n              {map(audios, (audio) => (\n                <SectionContentItem key={audio} width=\"50%\">\n                  <CheckboxItem selected={audio === currentAudio} onToggle={handleAudioChange(audio)}>\n                    {audio}\n                  </CheckboxItem>\n                </SectionContentItem>\n              ))}\n            </SectionContent>\n          </Section>\n        )}\n        {sources?.length > 1 && (\n          <Section>\n            <SectionTitle>Качество</SectionTitle>\n\n            <SectionContent>\n              {map(sources, (source) => (\n                <SectionContentItem key={source} width=\"15%\">\n                  <CheckboxItem selected={source === currentSource} onToggle={handleSourceChange(source)}>\n                    {source}\n                  </CheckboxItem>\n                </SectionContentItem>\n              ))}\n            </SectionContent>\n          </Section>\n        )}\n        {subtitles?.length > 0 && (\n          <Section>\n            <SectionTitle>Субтитры</SectionTitle>\n\n            <SectionContent>\n              <SectionContentItem width=\"15%\">\n                <CheckboxItem selected={!currentSubtitle || currentSubtitle === NONE} onToggle={handleSubtitleChange(NONE)}>\n                  Нет\n                </CheckboxItem>\n              </SectionContentItem>\n\n              {map(subtitles, (subtitle) => (\n                <SectionContentItem key={subtitle} width=\"15%\">\n                  <CheckboxItem selected={subtitle === currentSubtitle} onToggle={handleSubtitleChange(subtitle)}>\n                    {subtitle}\n                  </CheckboxItem>\n                </SectionContentItem>\n              ))}\n            </SectionContent>\n          </Section>\n        )}\n      </Wrapper>\n    </Popup>\n  );\n};\n\nexport default Settings;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport VideoPlayer, { VideoPlayerBase, VideoPlayerBaseProps } from '@enact/moonstone/VideoPlayer';\nimport styled from 'styled-components';\n\nimport Media, { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\nimport Text from 'components/text';\n\nimport Settings from './settings';\n\nconst Wrapper = styled.div`\n  video {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n`;\n\nconst Title = styled(Text)<{ visible?: boolean }>`\n  position: absolute;\n  padding: 0 1rem;\n  z-index: 1;\n  visibility: ${(props) => (props.visible ? 'visible' : 'hidden')};\n`;\n\nexport type PlayerProps = {\n  title: string;\n  description?: string;\n  poster: string;\n  audios?: AudioTrack[];\n  sources: SourceTrack[];\n  subtitles?: SubtitleTrack[];\n  onPlay?: () => void;\n  onPause?: (currentTime: number) => void;\n  onEnded?: (currentTime: number) => void;\n} & VideoPlayerBaseProps;\n\nconst Player: React.FC<PlayerProps> = ({ title, description, poster, audios, sources, subtitles, onPlay, onPause, onEnded, ...props }) => {\n  const playerRef = useRef<VideoPlayerBase>();\n  const [titleVisible, setTitleVisible] = useState(true);\n\n  const handlePlay = useCallback(() => {\n    setTitleVisible(false);\n    onPlay?.();\n  }, [onPlay]);\n  const handlePause = useCallback(\n    (e) => {\n      setTitleVisible(true);\n      onPause?.(e.currentTime);\n    },\n    [onPause],\n  );\n  const handleEnded = useCallback(\n    (e) => {\n      onEnded?.(e.target.currentTime);\n    },\n    [onEnded],\n  );\n\n  useEffect(() => {\n    if (titleVisible) {\n      setTimeout(() => {\n        setTitleVisible(false);\n      }, 5 * 1000);\n    }\n  }, [titleVisible]);\n\n  return (\n    <Wrapper>\n      <Title visible={titleVisible}>{title}</Title>\n      <Settings player={playerRef} />\n\n      {\n        <VideoPlayer\n          {...props}\n          //@ts-expect-error\n          ref={playerRef}\n          title={description}\n          poster={poster}\n          jumpBy={10}\n          onPlay={handlePlay}\n          onPause={handlePause}\n          onEnded={handleEnded}\n          audioTracks={audios}\n          sourceTracks={sources}\n          subtitleTracks={subtitles}\n          videoComponent={Media}\n        />\n      }\n    </Wrapper>\n  );\n};\n\nexport default Player;\n","import { ItemDetails, Season, Video } from 'api';\n\nexport function getItemTitle(item?: ItemDetails, video?: Video, season?: Season) {\n  return season ? `${item?.title} (s${season.number}e${video?.number || 1})` : item?.title!;\n}\n","import { useCallback, useMemo, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { ItemDetails, Season, Streaming, Video } from 'api';\nimport Player, { PlayerProps } from 'components/player';\nimport useApiMutation from 'hooks/useApiMutation';\nimport useStorageState from 'hooks/useStorageState';\n\nimport { getItemTitle } from 'utils/item';\nimport { mapAudios, mapSources, mapSubtitles } from 'utils/video';\n\nconst useNextVideo = (item: ItemDetails, season: Season, video: Video) =>\n  useMemo(() => {\n    const nextVideo = (item.videos || season?.episodes)?.find(({ number }) => number === video.number + 1);\n\n    if (nextVideo) {\n      return nextVideo;\n    }\n\n    const nextSeason = item.seasons?.find(({ number }) => number === season.number + 1);\n    if (nextSeason) {\n      return nextSeason.episodes[0];\n    }\n  }, [item, season, video]);\n\nconst usePreviousVideo = (item: ItemDetails, season: Season, video: Video) =>\n  useMemo(() => {\n    const previousVideo = (item.videos || season?.episodes)?.find(({ number }) => number === video.number - 1);\n\n    if (previousVideo) {\n      return previousVideo;\n    }\n\n    const previousSeason = item.seasons?.find(({ number }) => number === season.number - 1);\n    if (previousSeason) {\n      return previousSeason.episodes[previousSeason.episodes.length - 1];\n    }\n  }, [item, season, video]);\n\nconst usePrevNextVideos = (item: ItemDetails, season: Season, video: Video) => {\n  const nextVideo = useNextVideo(item, season, video);\n  const previousVideo = usePreviousVideo(item, season, video);\n\n  return [previousVideo, nextVideo] as const;\n};\n\nconst VideoView: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation<{ title: string; item: ItemDetails; video: Video; season: Season }>();\n  const { watchingMarkTime } = useApiMutation('watchingMarkTime');\n  const [streamingType] = useStorageState<Streaming>('streaming_type');\n  const { item, video, season } = location.state;\n\n  const [currentVideo, setCurrentVideo] = useState(video);\n  const [previousVideo, nextVideo] = usePrevNextVideos(item, season, currentVideo);\n\n  const saveCurrentTime = useCallback(\n    ({ number }: Video, currentTime: number) => {\n      watchingMarkTime([item.id, currentTime, number, season?.number]);\n    },\n    [watchingMarkTime, item, season],\n  );\n\n  const playerProps = useMemo<PlayerProps>(\n    () => ({\n      title: getItemTitle(item, currentVideo, season),\n      description: currentVideo.title,\n      poster: item.posters.wide || item.posters.big,\n      audios: mapAudios(currentVideo.audios),\n      sources: mapSources(currentVideo.files, streamingType),\n      subtitles: mapSubtitles(currentVideo.subtitles),\n    }),\n    [item, season, currentVideo, streamingType],\n  );\n\n  const handlePause = useCallback(\n    (currentTime: number) => {\n      saveCurrentTime(currentVideo, currentTime);\n    },\n    [saveCurrentTime, currentVideo],\n  );\n\n  const handleOnEnded = useCallback(\n    (currentTime: number) => {\n      saveCurrentTime(currentVideo, currentTime);\n\n      if (nextVideo) {\n        setCurrentVideo(nextVideo);\n        return;\n      }\n\n      history.goBack();\n    },\n    [saveCurrentTime, history, currentVideo, nextVideo],\n  );\n\n  const handleJumpBackward = useCallback(\n    ({ currentTime }: { currentTime: number }) => {\n      saveCurrentTime(currentVideo, currentTime);\n\n      if (previousVideo) {\n        setCurrentVideo(previousVideo);\n      }\n    },\n    [saveCurrentTime, currentVideo, previousVideo],\n  );\n\n  const handleJumpForward = useCallback(\n    ({ currentTime }: { currentTime: number }) => {\n      saveCurrentTime(currentVideo, currentTime);\n\n      if (nextVideo) {\n        setCurrentVideo(nextVideo);\n      }\n    },\n    [saveCurrentTime, currentVideo, nextVideo],\n  );\n\n  return (\n    <>\n      <Player\n        key={currentVideo.id}\n        {...playerProps}\n        onPause={handlePause}\n        onEnded={handleOnEnded}\n        onJumpBackward={handleJumpBackward}\n        onJumpForward={handleJumpForward}\n      />\n    </>\n  );\n};\n\nexport default VideoView;\n"],"sourceRoot":""}