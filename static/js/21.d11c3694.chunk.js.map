{"version":3,"sources":["components/text/text.tsx","components/button/button.tsx","components/popup/popup.tsx","utils/video.ts","utils/subtitles.ts","components/media/media.tsx","components/player/settings.tsx","components/player/startFrom.tsx","components/player/player.tsx","views/channel/channel.tsx"],"names":["Text","styled","BodyText","Wrapper","div","StyledButton","EnactButton","ButtonInner","Icon","props","iconOnly","Button","icon","children","autoFocus","wrapperRef","useRef","useEffect","frameId","requestAnimationFrame","current","querySelector","focus","cancelAnimationFrame","ref","name","Popup","visible","onVisibilityChange","handleShow","useCallback","handleClose","handleCloseOnBackButton","useBackButtonEffect","open","onShow","onClose","formatIdx","idx","mapAudios","audios","map","audio","lang","filter","type","title","author","toUpper","codec","join","mapSources","files","streamingType","orderBy","file","src","url","http","quality","parseInt","mapSubtitles","subtitles","subtitle","WebVTTConverter","resource","objectURL","this","Promise","resolve","reject","reader","FileReader","addEventListener","event","buf","target","result","Uint8Array","readAsArrayBuffer","Blob","TextDecoder","blobToString","decoded","text","concat","toVTT","blob","URL","createObjectURL","blobToBuffer","then","buffer","utf8str","decode","success","fail","readAsText","replace","str","split","forEach","each","push","charCodeAt","from","a","fetch","converter","getURL","Media","hls","media","state","startTime","currentTime","destroy","setState","handleLoaded","play","includes","HLS","isSupported","attachMedia","on","Events","MEDIA_ATTACHED","loadSource","MANIFEST_PARSED","uniq","audioTracks","audioTrack","find","id","audioTracksIndex","Array","findIndex","enabled","length","uniqBy","sourceTracks","sourceTrack","load","subtitleTracks","subtitleTrack","textTracks","textTrack","mode","label","track","document","createElement","kind","srclang","showTrack","endsWith","convertToVTT","appendChild","UIMedia","NONE","Section","SectionTitle","SectionContent","SectionContentItem","width","Settings","player","useState","setVisible","setAudios","currentAudio","setCurrentAudio","sources","setSources","currentSource","setCurrentSource","setSubtitles","currentSubtitle","setCurrentSubtitle","handleVideoUpdate","value","getVideoNode","handleAudioChange","handleSourceChange","source","handleSubtitleChange","handleVisibilityChange","newVisible","listiner","e","isArrowUpButton","video","pause","isPlayButton","window","removeEventListener","selected","onToggle","StartFrom","startInDelay","startIn","setStartIn","startFrom","useMemo","Date","toISOString","substr","handleStartFromClick","handleStartFromBeginingClick","intervalId","setInterval","prevStartIn","newStartIn","clearInterval","onClick","Title","Player","description","poster","timeSyncInterval","onPlay","onPause","onEnded","onTimeSync","playerRef","isLoaded","setIsLoaded","titleVisible","setTitleVisible","handlePlay","handlePause","handleEnded","handleTimeSync","handleLoadedData","timeoutId","setTimeout","clearTimeout","jumpBy","onLoadedData","videoComponent","ChannelView","history","useHistory","channel","useLocation","playerProps","logos","m","stream","hls4","handleOnEnded","goBack"],"mappings":"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","file":"static/js/21.d11c3694.chunk.js","sourcesContent":["import BodyText from '@enact/moonstone/BodyText';\nimport styled from 'styled-components';\n\nconst Text = styled(BodyText)``;\n\nexport default Text;\n","import { useEffect, useRef } from 'react';\nimport EnactButton, { ButtonProps } from '@enact/moonstone/Button';\nimport styled from 'styled-components';\n\nimport Icon from 'components/icon';\n\nconst Wrapper = styled.div`\n  display: inline-flex;\n\n  > div {\n    width: 100%;\n  }\n`;\n\nconst StyledButton = styled(EnactButton)`\n  color: inherit;\n  text-decoration: none;\n`;\n\nconst ButtonInner = styled.div<{ iconOnly?: boolean }>`\n  display: flex;\n  align-items: center;\n  color: inherit;\n  text-decoration: none;\n\n  ${Icon} {\n    margin-right: ${(props) => !props.iconOnly && '0.5rem'};\n  }\n`;\n\ntype Props = {\n  icon?: string;\n  iconOnly?: boolean;\n  autoFocus?: boolean;\n  onClick?: React.MouseEventHandler;\n} & ButtonProps;\n\nconst Button: React.FC<Props> = ({ icon, iconOnly, children, autoFocus, ...props }) => {\n  const wrapperRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    let frameId: number;\n\n    if (autoFocus) {\n      frameId = requestAnimationFrame(() => {\n        wrapperRef.current?.querySelector<HTMLDivElement>('[role=\"button\"]')?.focus();\n      });\n    }\n\n    return () => {\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n    };\n  }, [wrapperRef, autoFocus]);\n\n  return (\n    <Wrapper ref={wrapperRef}>\n      <StyledButton {...props}>\n        <ButtonInner iconOnly={iconOnly}>\n          {icon && <Icon name={icon} />}\n          {!iconOnly && children}\n        </ButtonInner>\n      </StyledButton>\n    </Wrapper>\n  );\n};\n\nexport default Button;\n","import { useCallback } from 'react';\nimport MoonstonePopup, { PopupProps } from '@enact/moonstone/Popup';\n\nimport useBackButtonEffect from 'hooks/useBackButtonEffect';\n\ntype Props = {\n  visible: boolean;\n  onVisibilityChange: (visible: boolean) => void;\n} & Omit<PopupProps, 'open' | 'onShow' | 'onClose'>;\n\nconst Popup: React.FC<Props> = ({ visible, onVisibilityChange, ...props }) => {\n  const handleShow = useCallback(() => {\n    onVisibilityChange(true);\n  }, [onVisibilityChange]);\n  const handleClose = useCallback(() => {\n    onVisibilityChange(false);\n  }, [onVisibilityChange]);\n\n  const handleCloseOnBackButton = useCallback(() => {\n    if (visible) {\n      onVisibilityChange(false);\n\n      return false;\n    }\n  }, [visible, onVisibilityChange]);\n\n  useBackButtonEffect(handleCloseOnBackButton);\n\n  return <MoonstonePopup {...props} open={visible} onShow={handleShow} onClose={handleClose} />;\n};\n\nexport default Popup;\n","import filter from 'lodash/filter';\nimport map from 'lodash/map';\nimport orderBy from 'lodash/orderBy';\nimport toUpper from 'lodash/toUpper';\n\nimport { Audio, Streaming, Subtitle } from 'api';\nimport { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\n\nconst formatIdx = (idx: number) => (idx < 10 ? `0${idx}` : idx);\n\nexport function mapAudios(audios: Audio[]): AudioTrack[] {\n  return map(audios, (audio, idx) => ({\n    lang: audio.lang,\n    name: filter([\n      `${formatIdx(idx + 1)}.`,\n      audio.type?.title && audio.author?.title ? `${audio.type?.title}.` : audio.type?.title,\n      audio.author?.title,\n      audio.type?.title || audio.author?.title ? `(${toUpper(audio.lang)})` : toUpper(audio.lang),\n      audio.codec !== 'aac' && toUpper(audio.codec),\n    ]).join(' '),\n  }));\n}\n\nexport function mapSources(\n  files: { url: string | { [key in Streaming]?: string }; quality?: string }[],\n  streamingType?: Streaming,\n): SourceTrack[] {\n  return orderBy(\n    map(files, (file) => ({\n      src: (typeof file.url === 'string' ? file.url : file.url[streamingType!] || file.url.http) as string,\n      name: file.quality!,\n    })),\n    ({ name }) => parseInt(name),\n    'desc',\n  );\n}\n\nexport function mapSubtitles(subtitles: Subtitle[]): SubtitleTrack[] {\n  return map(subtitles, (subtitle, idx) => ({\n    src: subtitle.url,\n    lang: subtitle.lang,\n    name: `${toUpper(subtitle.lang)} #${formatIdx(idx + 1)}`,\n  }));\n}\n","class WebVTTConverter {\n  resource: Blob;\n\n  private objectURL?: string;\n\n  constructor(resource: Blob) {\n    this.resource = resource;\n  }\n\n  blobToBuffer() {\n    return new Promise<ArrayBuffer>((resolve, reject) => {\n      const reader = new FileReader();\n      reader.addEventListener('loadend', (event) => {\n        const buf = event.target?.result;\n        resolve(new Uint8Array(buf as ArrayBuffer));\n      });\n      reader.addEventListener('error', () => reject('Error while reading the Blob object'));\n      reader.readAsArrayBuffer(this.resource);\n    });\n  }\n\n  static blobToString(blob: Blob, success: (text: string) => void, fail: () => void) {\n    const reader = new FileReader();\n    reader.addEventListener('loadend', (event) => {\n      const text = event.target?.result;\n      success(text as string);\n    });\n    reader.addEventListener('error', () => fail());\n    reader.readAsText(blob);\n  }\n\n  /**\n   * @param {*} utf8str\n   */\n  static toVTT(utf8str: string) {\n    return utf8str\n      .replace(/\\{\\\\([ibu])\\}/g, '</$1>')\n      .replace(/\\{\\\\([ibu])1\\}/g, '<$1>')\n      .replace(/\\{([ibu])\\}/g, '<$1>')\n      .replace(/\\{\\/([ibu])\\}/g, '</$1>')\n      .replace(/(\\d\\d:\\d\\d:\\d\\d),(\\d\\d\\d)/g, '$1.$2')\n      .concat('\\r\\n\\r\\n');\n  }\n\n  static toTypedArray(str: string) {\n    const result: number[] = [];\n    str.split('').forEach((each) => {\n      result.push(parseInt(`${each.charCodeAt(0)}`, 16));\n    });\n    return Uint8Array.from(result);\n  }\n\n  getURL() {\n    return new Promise<string>((resolve, reject) => {\n      if (!(this.resource instanceof Blob)) return reject('Expecting resource to be a Blob but something else found.');\n      if (!FileReader) return reject('No FileReader constructor found');\n      if (!TextDecoder) return reject('No TextDecoder constructor found');\n      return WebVTTConverter.blobToString(\n        this.resource,\n        (decoded) => {\n          const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n          const text = vttString.concat(WebVTTConverter.toVTT(decoded));\n          const blob = new Blob([text], { type: 'text/vtt' });\n          this.objectURL = URL.createObjectURL(blob);\n\n          return resolve(this.objectURL);\n        },\n        () => {\n          this.blobToBuffer().then((buffer) => {\n            const utf8str = new TextDecoder('utf-8').decode(buffer);\n            const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n            const text = vttString.concat(WebVTTConverter.toVTT(utf8str));\n            const blob = new Blob([text], { type: 'text/vtt' });\n            this.objectURL = URL.createObjectURL(blob);\n\n            return resolve(this.objectURL);\n          });\n        },\n      );\n    });\n  }\n\n  release() {\n    URL.createObjectURL(this.objectURL);\n  }\n}\n\nexport async function convertToVTT(src: string) {\n  const file = await (await fetch(src)).blob();\n  const converter = new WebVTTConverter(file);\n\n  return converter.getURL();\n}\n","import UIMedia, { MediaProps } from '@enact/ui/Media';\nimport HLS from 'hls.js';\nimport uniq from 'lodash/uniq';\nimport uniqBy from 'lodash/uniqBy';\n\nimport { convertToVTT } from 'utils/subtitles';\n\nexport type AudioTrack = {\n  name: string;\n  lang: string;\n};\n\nexport type SourceTrack = {\n  src: string;\n  name: string;\n};\n\nexport type SubtitleTrack = {\n  src: string;\n  name: string;\n  lang: string;\n};\n\nclass Media extends UIMedia {\n  hls?: HLS;\n\n  media!: HTMLMediaElement & {\n    audioTracks?: { enabled?: boolean; label: string }[];\n  };\n\n  state!: {\n    src: string;\n  };\n\n  props!: MediaProps & {\n    startTime?: number;\n    audioTracks?: AudioTrack[];\n    sourceTracks: SourceTrack[];\n    subtitleTracks?: SubtitleTrack[];\n  };\n\n  load(src: string) {\n    let startTime = this.props.startTime;\n\n    if (this.state?.src && this.state.src !== src) {\n      startTime = this.media.currentTime;\n    }\n\n    this.destroy();\n\n    const media = this.media;\n\n    this.setState({ src });\n\n    const handleLoaded = () => {\n      if (startTime) {\n        media.currentTime = startTime;\n      }\n\n      media.play();\n    };\n\n    if (src.includes('.m3u8') && HLS.isSupported()) {\n      const hls = (this.hls = new HLS());\n\n      hls.attachMedia(media);\n      hls.on(HLS.Events.MEDIA_ATTACHED, () => {\n        hls.loadSource(src);\n        hls.on(HLS.Events.MANIFEST_PARSED, handleLoaded);\n      });\n\n      return;\n    }\n\n    media.src = src;\n    media.addEventListener('loadedmetadata', handleLoaded);\n  }\n\n  get audioTracks() {\n    if (this.hls) {\n      return uniq(this.hls.audioTracks.map((audioTrack) => audioTrack.name));\n    }\n\n    return this.props.audioTracks?.map((audioTrack) => audioTrack.name);\n  }\n\n  get audioTrack() {\n    if (this.hls) {\n      return this.hls.audioTracks.find((audioTrack) => audioTrack.id === this.hls?.audioTrack)?.name!;\n    }\n\n    const audioTracksIndex = Array.from(this.media.audioTracks || []).findIndex((audioTrack) => audioTrack.enabled);\n\n    return this.props.audioTracks?.[audioTracksIndex]?.name!;\n  }\n\n  set audioTrack(name: string) {\n    if (this.hls) {\n      const audioTrack = this.hls.audioTracks.find((audioTrack) => audioTrack.name === name);\n\n      if (audioTrack) {\n        this.hls.audioTrack = audioTrack.id;\n      }\n    } else {\n      const audioTracks = Array.from(this.media.audioTracks || []);\n      let audioTracksIndex = this.props.audioTracks?.findIndex((audioTrack) => audioTrack.name === name);\n\n      if (!audioTracksIndex || audioTracksIndex > audioTracks.length - 1) {\n        audioTracksIndex = 0;\n      }\n\n      audioTracks.forEach((audioTrack, idx) => {\n        audioTrack.enabled = idx === audioTracksIndex;\n      });\n    }\n  }\n\n  get sourceTracks() {\n    return uniqBy(this.props.sourceTracks, 'src').map((sourceTrack) => sourceTrack.name);\n  }\n\n  get sourceTrack() {\n    return this.props.sourceTracks.find((sourceTrack) => sourceTrack.src === this.state.src)?.name!;\n  }\n\n  set sourceTrack(name: string) {\n    const sourceTrack = this.props.sourceTracks.find((sourceTrack) => sourceTrack.name === name);\n\n    if (sourceTrack) {\n      this.load(sourceTrack.src);\n    }\n  }\n\n  get subtitleTracks() {\n    if (this.hls) {\n      return this.hls.subtitleTracks.map((subtitleTrack) => subtitleTrack.name);\n    }\n\n    return this.props.subtitleTracks?.map((subtitleTrack) => subtitleTrack.name);\n  }\n\n  get subtitleTrack() {\n    if (this.hls) {\n      return this.hls.subtitleTracks.find((subtitleTrack) => subtitleTrack.id === this.hls?.subtitleTrack)?.name!;\n    }\n\n    return Array.from(this.media.textTracks || []).find((textTrack) => textTrack.mode === 'showing')?.label!;\n  }\n\n  set subtitleTrack(name: string) {\n    if (this.hls) {\n      this.hls.subtitleTrack = this.hls.subtitleTracks.find((subtitle) => subtitle.name === name)?.id ?? -1;\n    } else {\n      const textTracks = Array.from(this.media.textTracks || []);\n\n      textTracks.forEach((textTrack) => {\n        textTrack.mode = 'disabled';\n      });\n\n      const subtitleTrack = textTracks.find((textTrack) => textTrack.label === name);\n\n      if (subtitleTrack) {\n        subtitleTrack.mode = 'showing';\n      } else {\n        const subtitleTrack = this.props.subtitleTracks?.find((subtitleTrack) => subtitleTrack.name === name);\n\n        if (subtitleTrack) {\n          const track = document.createElement('track');\n\n          track.kind = 'captions';\n          track.id = subtitleTrack.name;\n          track.srclang = subtitleTrack.lang;\n          track.label = subtitleTrack.name;\n\n          const showTrack = (src: string) => {\n            track.src = src;\n            track.track.mode = 'showing';\n          };\n\n          if (subtitleTrack.src.endsWith('.srt')) {\n            convertToVTT(subtitleTrack.src).then(showTrack);\n          } else {\n            showTrack(subtitleTrack.src);\n          }\n\n          this.media.appendChild(track);\n        }\n      }\n    }\n  }\n\n  private destroy() {\n    if (this.hls) {\n      this.hls.destroy();\n    } else {\n      this.media.src = '';\n    }\n  }\n\n  componentDidMount() {\n    this.load(this.props.sourceTracks[0].src);\n\n    super.componentDidMount?.();\n  }\n\n  componentDidUpdate() {}\n\n  componentWillUnmount() {\n    this.destroy();\n\n    super.componentWillUnmount?.();\n  }\n}\n\nexport default Media;\n","import { useCallback, useEffect, useState } from 'react';\nimport CheckboxItem from '@enact/moonstone/CheckboxItem';\nimport { VideoPlayerBase } from '@enact/moonstone/VideoPlayer';\nimport map from 'lodash/map';\nimport styled from 'styled-components';\n\nimport Popup from 'components/popup';\nimport Text from 'components/text';\n\nimport { isArrowUpButton, isPlayButton } from 'utils/keyboard';\n\nconst NONE = 'NONE';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Section = styled.div`\n  padding: 0 1rem;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SectionTitle = styled(Text)`\n  width: 5rem;\n`;\n\nconst SectionContent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst SectionContentItem = styled.div<{ width?: string | number }>`\n  width: ${(props) => props.width};\n  padding-right: 1rem;\n  box-sizing: border-box;\n`;\n\ntype Props = {\n  player: React.MutableRefObject<VideoPlayerBase | undefined>;\n};\n\nconst Settings: React.FC<Props> = ({ player }) => {\n  const [visible, setVisible] = useState(false);\n\n  const [audios, setAudios] = useState<string[]>([]);\n  const [currentAudio, setCurrentAudio] = useState<string | null>(null);\n  const [sources, setSources] = useState<string[]>([]);\n  const [currentSource, setCurrentSource] = useState<string | null>(null);\n  const [subtitles, setSubtitles] = useState<string[]>([]);\n  const [currentSubtitle, setCurrentSubtitle] = useState<string | null>(null);\n\n  const handleVideoUpdate = useCallback(\n    (name: string, value: string) => {\n      if (player.current) {\n        const video: any = player.current.getVideoNode();\n\n        video[name] = value;\n      }\n    },\n    [player],\n  );\n\n  const handleAudioChange = useCallback(\n    (audio: string) => () => {\n      setCurrentAudio(audio);\n      handleVideoUpdate('audioTrack', audio);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSourceChange = useCallback(\n    (source: string) => () => {\n      setCurrentSource(source);\n      handleVideoUpdate('sourceTrack', source);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSubtitleChange = useCallback(\n    (subtitle: string) => () => {\n      setCurrentSubtitle(subtitle);\n      handleVideoUpdate('subtitleTrack', subtitle);\n    },\n    [handleVideoUpdate],\n  );\n\n  const handleVisibilityChange = useCallback(\n    (newVisible: boolean) => {\n      setVisible(newVisible);\n\n      if (player.current && !newVisible) {\n        player.current.play();\n      }\n    },\n    [player],\n  );\n\n  useEffect(() => {\n    const listiner = (e: KeyboardEvent) => {\n      if (isArrowUpButton(e)) {\n        if (player.current) {\n          const video: any = player.current.getVideoNode();\n          const { audioTracks, audioTrack, sourceTracks, sourceTrack, subtitleTracks, subtitleTrack } = video;\n\n          if (audioTracks?.length > 1 || sourceTracks?.length > 1 || subtitleTracks?.length > 0) {\n            setAudios(audioTracks);\n            setCurrentAudio(audioTrack);\n\n            setSources(sourceTracks);\n            setCurrentSource(sourceTrack);\n\n            setSubtitles(subtitleTracks);\n            setCurrentSubtitle(subtitleTrack);\n\n            player.current.pause();\n\n            setVisible(true);\n          }\n        }\n      } else if (isPlayButton(e)) {\n        setVisible(false);\n      }\n    };\n\n    window.addEventListener('keydown', listiner);\n\n    return () => {\n      window.removeEventListener('keydown', listiner);\n    };\n  }, [visible, player]);\n\n  return (\n    <Popup visible={visible} onVisibilityChange={handleVisibilityChange}>\n      <Wrapper>\n        {audios?.length > 1 && (\n          <Section>\n            <SectionTitle>Звук</SectionTitle>\n\n            <SectionContent>\n              {map(audios, (audio) => (\n                <SectionContentItem key={audio} width=\"50%\">\n                  <CheckboxItem selected={audio === currentAudio} onToggle={handleAudioChange(audio)}>\n                    {audio}\n                  </CheckboxItem>\n                </SectionContentItem>\n              ))}\n            </SectionContent>\n          </Section>\n        )}\n        {sources?.length > 1 && (\n          <Section>\n            <SectionTitle>Качество</SectionTitle>\n\n            <SectionContent>\n              {map(sources, (source) => (\n                <SectionContentItem key={source} width=\"15%\">\n                  <CheckboxItem selected={source === currentSource} onToggle={handleSourceChange(source)}>\n                    {source}\n                  </CheckboxItem>\n                </SectionContentItem>\n              ))}\n            </SectionContent>\n          </Section>\n        )}\n        {subtitles?.length > 0 && (\n          <Section>\n            <SectionTitle>Субтитры</SectionTitle>\n\n            <SectionContent>\n              <SectionContentItem width=\"15%\">\n                <CheckboxItem selected={!currentSubtitle || currentSubtitle === NONE} onToggle={handleSubtitleChange(NONE)}>\n                  Нет\n                </CheckboxItem>\n              </SectionContentItem>\n\n              {map(subtitles, (subtitle) => (\n                <SectionContentItem key={subtitle} width=\"15%\">\n                  <CheckboxItem selected={subtitle === currentSubtitle} onToggle={handleSubtitleChange(subtitle)}>\n                    {subtitle}\n                  </CheckboxItem>\n                </SectionContentItem>\n              ))}\n            </SectionContent>\n          </Section>\n        )}\n      </Wrapper>\n    </Popup>\n  );\n};\n\nexport default Settings;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { VideoPlayerBase } from '@enact/moonstone/VideoPlayer';\nimport styled from 'styled-components';\n\nimport Button from 'components/button';\n\nconst Wrapper = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  bottom: 7rem;\n  z-index: 200;\n`;\n\ntype Props = {\n  player: React.MutableRefObject<VideoPlayerBase | undefined>;\n  startTime?: number;\n  startInDelay?: number;\n};\n\nconst StartFrom: React.FC<Props> = ({ startTime, startInDelay = 5, player }) => {\n  const [visible, setVisible] = useState(true);\n  const [startIn, setStartIn] = useState(startInDelay);\n  const startFrom = useMemo(() => new Date((startTime || 0) * 1000).toISOString().substr(11, 8).replace(/^00:/, ''), [startTime]);\n\n  const handleStartFromClick = useCallback(() => {\n    if (player.current) {\n      setVisible(false);\n      const video: any = player.current.getVideoNode();\n\n      video.currentTime = startTime;\n    }\n  }, [startTime, player]);\n  const handleStartFromBeginingClick = useCallback(() => {\n    setVisible(false);\n  }, []);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n\n    if (visible) {\n      intervalId = setInterval(() => {\n        setStartIn((prevStartIn) => {\n          const newStartIn = prevStartIn - 1;\n\n          if (newStartIn <= 0) {\n            handleStartFromClick();\n          }\n\n          return newStartIn;\n        });\n      }, 1000);\n    }\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [visible, handleStartFromClick]);\n\n  if (!startTime || !visible) {\n    return null;\n  }\n\n  return (\n    <Wrapper>\n      <Button onClick={handleStartFromClick}>\n        Смотреть с {startFrom} через {startIn}\n      </Button>\n      <Button autoFocus onClick={handleStartFromBeginingClick}>\n        Смотреть с начала\n      </Button>\n    </Wrapper>\n  );\n};\n\nexport default StartFrom;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport VideoPlayer, { VideoPlayerBase, VideoPlayerBaseProps } from '@enact/moonstone/VideoPlayer';\nimport styled from 'styled-components';\n\nimport Media, { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\nimport Text from 'components/text';\nimport useBackButtonEffect from 'hooks/useBackButtonEffect';\n\nimport Settings from './settings';\nimport StartFrom from './startFrom';\n\nconst Wrapper = styled.div`\n  video {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n`;\n\nconst Title = styled(Text)<{ visible?: boolean }>`\n  position: absolute;\n  padding: 0 1rem;\n  z-index: 1;\n  visibility: ${(props) => (props.visible ? 'visible' : 'hidden')};\n`;\n\nexport type PlayerProps = {\n  title: string;\n  description?: string;\n  poster: string;\n  audios?: AudioTrack[];\n  sources: SourceTrack[];\n  subtitles?: SubtitleTrack[];\n  startTime?: number;\n  timeSyncInterval?: number;\n  onPlay?: () => void;\n  onPause?: (currentTime: number) => void;\n  onEnded?: (currentTime: number) => void;\n  onTimeSync?: (currentTime: number) => void | Promise<void>;\n} & VideoPlayerBaseProps;\n\nconst Player: React.FC<PlayerProps> = ({\n  title,\n  description,\n  poster,\n  audios,\n  sources,\n  subtitles,\n  startTime,\n  timeSyncInterval = 30,\n  onPlay,\n  onPause,\n  onEnded,\n  onTimeSync,\n  ...props\n}) => {\n  const playerRef = useRef<VideoPlayerBase>();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [titleVisible, setTitleVisible] = useState(true);\n\n  const handlePlay = useCallback(() => {\n    setTitleVisible(false);\n    onPlay?.();\n  }, [onPlay]);\n  const handlePause = useCallback(\n    (e) => {\n      setTitleVisible(true);\n      onPause?.(e.currentTime);\n    },\n    [onPause],\n  );\n  const handleEnded = useCallback(\n    (e) => {\n      onEnded?.(e.target.currentTime);\n    },\n    [onEnded],\n  );\n  const handleTimeSync = useCallback(async () => {\n    if (playerRef.current && onTimeSync) {\n      const video: any = playerRef.current.getVideoNode();\n\n      const currentTime = video['currentTime'];\n\n      await onTimeSync(currentTime);\n    }\n  }, [onTimeSync, playerRef]);\n  const handleLoadedData = useCallback(() => {\n    setIsLoaded(true);\n  }, []);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n\n    if (titleVisible) {\n      timeoutId = setTimeout(() => {\n        setTitleVisible(false);\n      }, 5 * 1000);\n    }\n\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [titleVisible]);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n\n    if (onTimeSync) {\n      intervalId = setInterval(handleTimeSync, timeSyncInterval * 1000);\n    }\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [timeSyncInterval, onTimeSync, handleTimeSync]);\n\n  useBackButtonEffect(handleTimeSync);\n\n  return (\n    <Wrapper>\n      <Title visible={titleVisible}>{title}</Title>\n      <Settings player={playerRef} />\n      {isLoaded && startTime! > 0 && <StartFrom startTime={startTime} player={playerRef} />}\n\n      <VideoPlayer\n        {...props}\n        //@ts-expect-error\n        ref={playerRef}\n        title={description}\n        poster={poster}\n        jumpBy={10}\n        onPlay={handlePlay}\n        onPause={handlePause}\n        onEnded={handleEnded}\n        onLoadedData={handleLoadedData}\n        audioTracks={audios}\n        sourceTracks={sources}\n        subtitleTracks={subtitles}\n        videoComponent={Media}\n      />\n    </Wrapper>\n  );\n};\n\nexport default Player;\n","import { useCallback, useMemo } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { Channel } from 'api';\nimport Player, { PlayerProps } from 'components/player';\n\nimport { mapSources } from 'utils/video';\n\nconst ChannelView: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation<{ channel: Channel }>();\n  const { channel } = location.state;\n\n  const playerProps = useMemo<PlayerProps>(() => {\n    return {\n      title: channel.title,\n      poster: channel.logos.m,\n      sources: mapSources([\n        {\n          url: {\n            http: channel.stream,\n            hls4: channel.stream,\n          },\n        },\n      ]),\n    };\n  }, [channel]);\n\n  const handleOnEnded = useCallback(() => {\n    history.goBack();\n  }, [history]);\n\n  return (\n    <>\n      <Player {...playerProps} onEnded={handleOnEnded} />\n    </>\n  );\n};\n\nexport default ChannelView;\n"],"sourceRoot":""}