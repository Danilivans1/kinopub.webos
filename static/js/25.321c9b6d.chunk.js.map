{"version":3,"sources":["components/text/text.tsx","components/popup/popup.tsx","utils/video.ts","utils/subtitles.ts","components/media/media.tsx","components/player/settings.tsx","components/player/player.tsx","views/trailer/trailer.tsx"],"names":["Text","styled","BodyText","Popup","visible","onVisibilityChange","props","handleShow","useCallback","handleClose","handleCloseOnBackButton","useBackButtonEffect","open","onShow","onClose","formatIdx","idx","mapAudios","audios","map","audio","lang","name","filter","type","title","author","toUpper","codec","join","mapSources","files","streamingType","file","src","url","http","quality","mapSubtitles","subtitles","subtitle","WebVTTConverter","resource","objectURL","this","Promise","resolve","reject","reader","FileReader","addEventListener","event","buf","target","result","Uint8Array","readAsArrayBuffer","Blob","TextDecoder","blobToString","decoded","text","concat","toVTT","blob","URL","createObjectURL","blobToBuffer","then","buffer","utf8str","decode","success","fail","readAsText","replace","str","split","forEach","each","push","parseInt","charCodeAt","from","a","fetch","converter","getURL","Media","hls","media","state","startTime","currentTime","destroy","setState","handleLoaded","play","includes","HLS","isSupported","attachMedia","on","Events","MEDIA_ATTACHED","loadSource","MANIFEST_PARSED","uniq","audioTracks","audioTrack","find","id","audioTracksIndex","Array","findIndex","enabled","length","uniqBy","sourceTracks","sourceTrack","load","subtitleTracks","subtitleTrack","textTracks","textTrack","mode","label","track","document","createElement","kind","srclang","showTrack","endsWith","convertToVTT","appendChild","UIMedia","NONE","Wrapper","div","Section","SectionTitle","SectionContent","SectionContentItem","width","Settings","player","useState","setVisible","setAudios","currentAudio","setCurrentAudio","sources","setSources","currentSource","setCurrentSource","setSubtitles","currentSubtitle","setCurrentSubtitle","handleVideoUpdate","value","current","getVideoNode","handleAudioChange","handleSourceChange","source","handleSubtitleChange","handleVisibilityChange","newVisible","useEffect","listiner","e","isArrowUpButton","video","pause","isPlayButton","window","removeEventListener","selected","onToggle","Title","Player","description","poster","timeSyncInterval","onPlay","onPause","onEnded","onTimeSync","playerRef","useRef","titleVisible","setTitleVisible","handlePlay","handlePause","handleEnded","handleTimeSync","timeoutId","setTimeout","clearTimeout","intervalId","setInterval","clearInterval","ref","jumpBy","videoComponent","TrailerView","history","useHistory","useLocation","item","trailer","playerProps","useMemo","posters","wide","big","handleOnEnded","goBack"],"mappings":"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","file":"static/js/25.321c9b6d.chunk.js","sourcesContent":["import BodyText from '@enact/moonstone/BodyText';\nimport styled from 'styled-components';\n\nconst Text = styled(BodyText)``;\n\nexport default Text;\n","import { useCallback } from 'react';\nimport MoonstonePopup, { PopupProps } from '@enact/moonstone/Popup';\n\nimport useBackButtonEffect from 'hooks/useBackButtonEffect';\n\ntype Props = {\n  visible: boolean;\n  onVisibilityChange: (visible: boolean) => void;\n} & Omit<PopupProps, 'open' | 'onShow' | 'onClose'>;\n\nconst Popup: React.FC<Props> = ({ visible, onVisibilityChange, ...props }) => {\n  const handleShow = useCallback(() => {\n    onVisibilityChange(true);\n  }, [onVisibilityChange]);\n  const handleClose = useCallback(() => {\n    onVisibilityChange(false);\n  }, [onVisibilityChange]);\n\n  const handleCloseOnBackButton = useCallback(() => {\n    if (visible) {\n      onVisibilityChange(false);\n\n      return false;\n    }\n  }, [visible, onVisibilityChange]);\n\n  useBackButtonEffect(handleCloseOnBackButton);\n\n  return <MoonstonePopup {...props} open={visible} onShow={handleShow} onClose={handleClose} />;\n};\n\nexport default Popup;\n","import filter from 'lodash/filter';\nimport map from 'lodash/map';\nimport toUpper from 'lodash/toUpper';\n\nimport { Audio, Streaming, Subtitle } from 'api';\nimport { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\n\nconst formatIdx = (idx: number) => (idx < 10 ? `0${idx}` : idx);\n\nexport function mapAudios(audios: Audio[]): AudioTrack[] {\n  return map(audios, (audio, idx) => ({\n    lang: audio.lang,\n    name: filter([\n      `${formatIdx(idx + 1)}.`,\n      audio.type?.title && audio.author?.title ? `${audio.type?.title}.` : audio.type?.title,\n      audio.author?.title,\n      audio.type?.title || audio.author?.title ? `(${toUpper(audio.lang)})` : toUpper(audio.lang),\n      audio.codec !== 'aac' && toUpper(audio.codec),\n    ]).join(' '),\n  }));\n}\n\nexport function mapSources(\n  files: { url: string | { [key in Streaming]?: string }; quality?: string }[],\n  streamingType?: Streaming,\n): SourceTrack[] {\n  return map(files, (file) => ({\n    src: (typeof file.url === 'string' ? file.url : file.url[streamingType!] || file.url.http) as string,\n    name: file.quality!,\n  }));\n}\n\nexport function mapSubtitles(subtitles: Subtitle[]): SubtitleTrack[] {\n  return map(subtitles, (subtitle, idx) => ({\n    src: subtitle.url,\n    lang: subtitle.lang,\n    name: `${toUpper(subtitle.lang)} #${formatIdx(idx + 1)}`,\n  }));\n}\n","class WebVTTConverter {\n  resource: Blob;\n\n  private objectURL?: string;\n\n  constructor(resource: Blob) {\n    this.resource = resource;\n  }\n\n  blobToBuffer() {\n    return new Promise<ArrayBuffer>((resolve, reject) => {\n      const reader = new FileReader();\n      reader.addEventListener('loadend', (event) => {\n        const buf = event.target?.result;\n        resolve(new Uint8Array(buf as ArrayBuffer));\n      });\n      reader.addEventListener('error', () => reject('Error while reading the Blob object'));\n      reader.readAsArrayBuffer(this.resource);\n    });\n  }\n\n  static blobToString(blob: Blob, success: (text: string) => void, fail: () => void) {\n    const reader = new FileReader();\n    reader.addEventListener('loadend', (event) => {\n      const text = event.target?.result;\n      success(text as string);\n    });\n    reader.addEventListener('error', () => fail());\n    reader.readAsText(blob);\n  }\n\n  /**\n   * @param {*} utf8str\n   */\n  static toVTT(utf8str: string) {\n    return utf8str\n      .replace(/\\{\\\\([ibu])\\}/g, '</$1>')\n      .replace(/\\{\\\\([ibu])1\\}/g, '<$1>')\n      .replace(/\\{([ibu])\\}/g, '<$1>')\n      .replace(/\\{\\/([ibu])\\}/g, '</$1>')\n      .replace(/(\\d\\d:\\d\\d:\\d\\d),(\\d\\d\\d)/g, '$1.$2')\n      .concat('\\r\\n\\r\\n');\n  }\n\n  static toTypedArray(str: string) {\n    const result: number[] = [];\n    str.split('').forEach((each) => {\n      result.push(parseInt(`${each.charCodeAt(0)}`, 16));\n    });\n    return Uint8Array.from(result);\n  }\n\n  getURL() {\n    return new Promise<string>((resolve, reject) => {\n      if (!(this.resource instanceof Blob)) return reject('Expecting resource to be a Blob but something else found.');\n      if (!FileReader) return reject('No FileReader constructor found');\n      if (!TextDecoder) return reject('No TextDecoder constructor found');\n      return WebVTTConverter.blobToString(\n        this.resource,\n        (decoded) => {\n          const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n          const text = vttString.concat(WebVTTConverter.toVTT(decoded));\n          const blob = new Blob([text], { type: 'text/vtt' });\n          this.objectURL = URL.createObjectURL(blob);\n\n          return resolve(this.objectURL);\n        },\n        () => {\n          this.blobToBuffer().then((buffer) => {\n            const utf8str = new TextDecoder('utf-8').decode(buffer);\n            const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n            const text = vttString.concat(WebVTTConverter.toVTT(utf8str));\n            const blob = new Blob([text], { type: 'text/vtt' });\n            this.objectURL = URL.createObjectURL(blob);\n\n            return resolve(this.objectURL);\n          });\n        },\n      );\n    });\n  }\n\n  release() {\n    URL.createObjectURL(this.objectURL);\n  }\n}\n\nexport async function convertToVTT(src: string) {\n  const file = await (await fetch(src)).blob();\n  const converter = new WebVTTConverter(file);\n\n  return converter.getURL();\n}\n","import UIMedia, { MediaProps } from '@enact/ui/Media';\nimport HLS from 'hls.js';\nimport uniq from 'lodash/uniq';\nimport uniqBy from 'lodash/uniqBy';\n\nimport { convertToVTT } from 'utils/subtitles';\n\nexport type AudioTrack = {\n  name: string;\n  lang: string;\n};\n\nexport type SourceTrack = {\n  src: string;\n  name: string;\n};\n\nexport type SubtitleTrack = {\n  src: string;\n  name: string;\n  lang: string;\n};\n\nclass Media extends UIMedia {\n  hls?: HLS;\n\n  media!: HTMLMediaElement & {\n    audioTracks?: { enabled?: boolean; label: string }[];\n  };\n\n  state!: {\n    src: string;\n  };\n\n  props!: MediaProps & {\n    startTime?: number;\n    audioTracks?: AudioTrack[];\n    sourceTracks: SourceTrack[];\n    subtitleTracks?: SubtitleTrack[];\n  };\n\n  load(src: string) {\n    let startTime = this.props.startTime;\n\n    if (this.state?.src && this.state.src !== src) {\n      startTime = this.media.currentTime;\n    }\n\n    this.destroy();\n\n    const media = this.media;\n\n    this.setState({ src });\n\n    const handleLoaded = () => {\n      if (startTime) {\n        media.currentTime = startTime;\n      }\n\n      media.play();\n    };\n\n    if (src.includes('.m3u8') && HLS.isSupported()) {\n      const hls = (this.hls = new HLS());\n\n      hls.attachMedia(media);\n      hls.on(HLS.Events.MEDIA_ATTACHED, () => {\n        hls.loadSource(src);\n        hls.on(HLS.Events.MANIFEST_PARSED, handleLoaded);\n      });\n\n      return;\n    }\n\n    media.src = src;\n    media.addEventListener('loadedmetadata', handleLoaded);\n  }\n\n  get audioTracks() {\n    if (this.hls) {\n      return uniq(this.hls.audioTracks.map((audioTrack) => audioTrack.name));\n    }\n\n    return this.props.audioTracks?.map((audioTrack) => audioTrack.name);\n  }\n\n  get audioTrack() {\n    if (this.hls) {\n      return this.hls.audioTracks.find((audioTrack) => audioTrack.id === this.hls?.audioTrack)?.name!;\n    }\n\n    const audioTracksIndex = Array.from(this.media.audioTracks || []).findIndex((audioTrack) => audioTrack.enabled);\n\n    return this.props.audioTracks?.[audioTracksIndex]?.name!;\n  }\n\n  set audioTrack(name: string) {\n    if (this.hls) {\n      const audioTrack = this.hls.audioTracks.find((audioTrack) => audioTrack.name === name);\n\n      if (audioTrack) {\n        this.hls.audioTrack = audioTrack.id;\n      }\n    } else {\n      const audioTracks = Array.from(this.media.audioTracks || []);\n      let audioTracksIndex = this.props.audioTracks?.findIndex((audioTrack) => audioTrack.name === name);\n\n      if (!audioTracksIndex || audioTracksIndex > audioTracks.length - 1) {\n        audioTracksIndex = 0;\n      }\n\n      audioTracks.forEach((audioTrack, idx) => {\n        audioTrack.enabled = idx === audioTracksIndex;\n      });\n    }\n  }\n\n  get sourceTracks() {\n    return uniqBy(this.props.sourceTracks, 'src').map((sourceTrack) => sourceTrack.name);\n  }\n\n  get sourceTrack() {\n    return this.props.sourceTracks.find((sourceTrack) => sourceTrack.src === this.state.src)?.name!;\n  }\n\n  set sourceTrack(name: string) {\n    const sourceTrack = this.props.sourceTracks.find((sourceTrack) => sourceTrack.name === name);\n\n    if (sourceTrack) {\n      this.load(sourceTrack.src);\n    }\n  }\n\n  get subtitleTracks() {\n    if (this.hls) {\n      return this.hls.subtitleTracks.map((subtitleTrack) => subtitleTrack.name);\n    }\n\n    return this.props.subtitleTracks?.map((subtitleTrack) => subtitleTrack.name);\n  }\n\n  get subtitleTrack() {\n    if (this.hls) {\n      return this.hls.subtitleTracks.find((subtitleTrack) => subtitleTrack.id === this.hls?.subtitleTrack)?.name!;\n    }\n\n    return Array.from(this.media.textTracks || []).find((textTrack) => textTrack.mode === 'showing')?.label!;\n  }\n\n  set subtitleTrack(name: string) {\n    if (this.hls) {\n      this.hls.subtitleTrack = this.hls.subtitleTracks.find((subtitle) => subtitle.name === name)?.id ?? -1;\n    } else {\n      const textTracks = Array.from(this.media.textTracks || []);\n\n      textTracks.forEach((textTrack) => {\n        textTrack.mode = 'disabled';\n      });\n\n      const subtitleTrack = textTracks.find((textTrack) => textTrack.label === name);\n\n      if (subtitleTrack) {\n        subtitleTrack.mode = 'showing';\n      } else {\n        const subtitleTrack = this.props.subtitleTracks?.find((subtitleTrack) => subtitleTrack.name === name);\n\n        if (subtitleTrack) {\n          const track = document.createElement('track');\n\n          track.kind = 'captions';\n          track.id = subtitleTrack.name;\n          track.srclang = subtitleTrack.lang;\n          track.label = subtitleTrack.name;\n\n          const showTrack = (src: string) => {\n            track.src = src;\n            track.track.mode = 'showing';\n          };\n\n          if (subtitleTrack.src.endsWith('.srt')) {\n            convertToVTT(subtitleTrack.src).then(showTrack);\n          } else {\n            showTrack(subtitleTrack.src);\n          }\n\n          this.media.appendChild(track);\n        }\n      }\n    }\n  }\n\n  private destroy() {\n    if (this.hls) {\n      this.hls.destroy();\n    } else {\n      this.media.src = '';\n    }\n  }\n\n  componentDidMount() {\n    this.load(this.props.sourceTracks[0].src);\n\n    super.componentDidMount?.();\n  }\n\n  componentDidUpdate() {}\n\n  componentWillUnmount() {\n    this.destroy();\n\n    super.componentWillUnmount?.();\n  }\n}\n\nexport default Media;\n","import { useCallback, useEffect, useState } from 'react';\nimport CheckboxItem from '@enact/moonstone/CheckboxItem';\nimport { VideoPlayerBase } from '@enact/moonstone/VideoPlayer';\nimport map from 'lodash/map';\nimport styled from 'styled-components';\n\nimport Popup from 'components/popup';\nimport Text from 'components/text';\n\nimport { isArrowUpButton, isPlayButton } from 'utils/keyboard';\n\nconst NONE = 'NONE';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Section = styled.div`\n  padding: 0 1rem;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SectionTitle = styled(Text)`\n  width: 5rem;\n`;\n\nconst SectionContent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst SectionContentItem = styled.div<{ width?: string | number }>`\n  width: ${(props) => props.width};\n  padding-right: 1rem;\n  box-sizing: border-box;\n`;\n\ntype Props = {\n  player: React.MutableRefObject<VideoPlayerBase | undefined>;\n};\n\nconst Settings: React.FC<Props> = ({ player }) => {\n  const [visible, setVisible] = useState(false);\n\n  const [audios, setAudios] = useState<string[]>([]);\n  const [currentAudio, setCurrentAudio] = useState<string | null>(null);\n  const [sources, setSources] = useState<string[]>([]);\n  const [currentSource, setCurrentSource] = useState<string | null>(null);\n  const [subtitles, setSubtitles] = useState<string[]>([]);\n  const [currentSubtitle, setCurrentSubtitle] = useState<string | null>(null);\n\n  const handleVideoUpdate = useCallback(\n    (name: string, value: string) => {\n      if (player.current) {\n        const video: any = player.current.getVideoNode();\n\n        video[name] = value;\n      }\n    },\n    [player],\n  );\n\n  const handleAudioChange = useCallback(\n    (audio: string) => () => {\n      setCurrentAudio(audio);\n      handleVideoUpdate('audioTrack', audio);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSourceChange = useCallback(\n    (source: string) => () => {\n      setCurrentSource(source);\n      handleVideoUpdate('sourceTrack', source);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSubtitleChange = useCallback(\n    (subtitle: string) => () => {\n      setCurrentSubtitle(subtitle);\n      handleVideoUpdate('subtitleTrack', subtitle);\n    },\n    [handleVideoUpdate],\n  );\n\n  const handleVisibilityChange = useCallback(\n    (newVisible: boolean) => {\n      setVisible(newVisible);\n\n      if (player.current && !newVisible) {\n        player.current.play();\n      }\n    },\n    [player],\n  );\n\n  useEffect(() => {\n    const listiner = (e: KeyboardEvent) => {\n      if (isArrowUpButton(e)) {\n        if (player.current) {\n          const video: any = player.current.getVideoNode();\n          const { audioTracks, audioTrack, sourceTracks, sourceTrack, subtitleTracks, subtitleTrack } = video;\n\n          if (audioTracks?.length > 1 || sourceTracks?.length > 1 || subtitleTracks?.length > 0) {\n            setAudios(audioTracks);\n            setCurrentAudio(audioTrack);\n\n            setSources(sourceTracks);\n            setCurrentSource(sourceTrack);\n\n            setSubtitles(subtitleTracks);\n            setCurrentSubtitle(subtitleTrack);\n\n            player.current.pause();\n\n            setVisible(true);\n          }\n        }\n      } else if (isPlayButton(e)) {\n        setVisible(false);\n      }\n    };\n\n    window.addEventListener('keydown', listiner);\n\n    return () => {\n      window.removeEventListener('keydown', listiner);\n    };\n  }, [visible, player]);\n\n  return (\n    <Popup visible={visible} onVisibilityChange={handleVisibilityChange}>\n      <Wrapper>\n        {audios?.length > 1 && (\n          <Section>\n            <SectionTitle>Звук</SectionTitle>\n\n            <SectionContent>\n              {map(audios, (audio) => (\n                <SectionContentItem key={audio} width=\"50%\">\n                  <CheckboxItem selected={audio === currentAudio} onToggle={handleAudioChange(audio)}>\n                    {audio}\n                  </CheckboxItem>\n                </SectionContentItem>\n              ))}\n            </SectionContent>\n          </Section>\n        )}\n        {sources?.length > 1 && (\n          <Section>\n            <SectionTitle>Качество</SectionTitle>\n\n            <SectionContent>\n              {map(sources, (source) => (\n                <SectionContentItem key={source} width=\"15%\">\n                  <CheckboxItem selected={source === currentSource} onToggle={handleSourceChange(source)}>\n                    {source}\n                  </CheckboxItem>\n                </SectionContentItem>\n              ))}\n            </SectionContent>\n          </Section>\n        )}\n        {subtitles?.length > 0 && (\n          <Section>\n            <SectionTitle>Субтитры</SectionTitle>\n\n            <SectionContent>\n              <SectionContentItem width=\"15%\">\n                <CheckboxItem selected={!currentSubtitle || currentSubtitle === NONE} onToggle={handleSubtitleChange(NONE)}>\n                  Нет\n                </CheckboxItem>\n              </SectionContentItem>\n\n              {map(subtitles, (subtitle) => (\n                <SectionContentItem key={subtitle} width=\"15%\">\n                  <CheckboxItem selected={subtitle === currentSubtitle} onToggle={handleSubtitleChange(subtitle)}>\n                    {subtitle}\n                  </CheckboxItem>\n                </SectionContentItem>\n              ))}\n            </SectionContent>\n          </Section>\n        )}\n      </Wrapper>\n    </Popup>\n  );\n};\n\nexport default Settings;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport VideoPlayer, { VideoPlayerBase, VideoPlayerBaseProps } from '@enact/moonstone/VideoPlayer';\nimport styled from 'styled-components';\n\nimport Media, { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\nimport Text from 'components/text';\nimport useBackButtonEffect from 'hooks/useBackButtonEffect';\n\nimport Settings from './settings';\n\nconst Wrapper = styled.div`\n  video {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n`;\n\nconst Title = styled(Text)<{ visible?: boolean }>`\n  position: absolute;\n  padding: 0 1rem;\n  z-index: 1;\n  visibility: ${(props) => (props.visible ? 'visible' : 'hidden')};\n`;\n\nexport type PlayerProps = {\n  title: string;\n  description?: string;\n  poster: string;\n  audios?: AudioTrack[];\n  sources: SourceTrack[];\n  subtitles?: SubtitleTrack[];\n  startTime?: number;\n  timeSyncInterval?: number;\n  onPlay?: () => void;\n  onPause?: (currentTime: number) => void;\n  onEnded?: (currentTime: number) => void;\n  onTimeSync?: (currentTime: number) => void | Promise<void>;\n} & VideoPlayerBaseProps;\n\nconst Player: React.FC<PlayerProps> = ({\n  title,\n  description,\n  poster,\n  audios,\n  sources,\n  subtitles,\n  startTime,\n  timeSyncInterval = 30,\n  onPlay,\n  onPause,\n  onEnded,\n  onTimeSync,\n  ...props\n}) => {\n  const playerRef = useRef<VideoPlayerBase>();\n  const [titleVisible, setTitleVisible] = useState(true);\n\n  const handlePlay = useCallback(() => {\n    setTitleVisible(false);\n    onPlay?.();\n  }, [onPlay]);\n  const handlePause = useCallback(\n    (e) => {\n      setTitleVisible(true);\n      onPause?.(e.currentTime);\n    },\n    [onPause],\n  );\n  const handleEnded = useCallback(\n    (e) => {\n      onEnded?.(e.target.currentTime);\n    },\n    [onEnded],\n  );\n  const handleTimeSync = useCallback(async () => {\n    if (playerRef.current && onTimeSync) {\n      const video: any = playerRef.current.getVideoNode();\n\n      const currentTime = video['currentTime'];\n\n      await onTimeSync(currentTime);\n    }\n  }, [onTimeSync, playerRef]);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n\n    if (titleVisible) {\n      timeoutId = setTimeout(() => {\n        setTitleVisible(false);\n      }, 5 * 1000);\n    }\n\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [titleVisible]);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n\n    if (onTimeSync) {\n      intervalId = setInterval(handleTimeSync, timeSyncInterval * 1000);\n    }\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [timeSyncInterval, onTimeSync, handleTimeSync]);\n\n  useBackButtonEffect(handleTimeSync);\n\n  return (\n    <Wrapper>\n      <Title visible={titleVisible}>{title}</Title>\n      <Settings player={playerRef} />\n\n      {\n        <VideoPlayer\n          {...props}\n          //@ts-expect-error\n          ref={playerRef}\n          title={description}\n          poster={poster}\n          jumpBy={10}\n          onPlay={handlePlay}\n          onPause={handlePause}\n          onEnded={handleEnded}\n          startTime={startTime}\n          audioTracks={audios}\n          sourceTracks={sources}\n          subtitleTracks={subtitles}\n          videoComponent={Media}\n        />\n      }\n    </Wrapper>\n  );\n};\n\nexport default Player;\n","import { useCallback, useMemo } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { ItemDetails, Trailer } from 'api';\nimport Player, { PlayerProps } from 'components/player';\n\nimport { mapSources } from 'utils/video';\n\nconst TrailerView: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation<{ item: ItemDetails; trailer: Trailer }>();\n  const { item, trailer } = location.state;\n\n  const playerProps = useMemo<PlayerProps>(() => {\n    return {\n      title: item.title,\n      description: 'Трейлер',\n      poster: item.posters.wide || item.posters.big,\n      sources: mapSources([trailer]),\n    };\n  }, [item, trailer]);\n\n  const handleOnEnded = useCallback(() => {\n    history.goBack();\n  }, [history]);\n\n  return (\n    <>\n      <Player {...playerProps} onEnded={handleOnEnded} />\n    </>\n  );\n};\n\nexport default TrailerView;\n"],"sourceRoot":""}