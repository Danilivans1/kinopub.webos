{"version":3,"sources":["components/select/select.tsx","views/settings/settings.tsx","components/seo/seo.tsx","hooks/useApi.ts","components/button/button.tsx","components/checkbox/checkbox.tsx","components/radio/radio.tsx","hooks/useChangebleState.ts","components/accordion/accordion.tsx"],"names":["Select","label","options","defaultValue","value","onChange","closeOnChange","useState","open","setOpen","useChangebleState","val","setVal","opts","useMemo","Array","isArray","map","option","idx","title","selectedOption","find","o","handleChanged","useCallback","handleChecked","checked","onToggle","subtitle","className","opt","SettingBool","setting","defaultChecked","Bool","True","SettingList","description","findIndex","selected","SettingsView","data","useApi","deviceInfo","saveDeviceSettingsAsync","useApiMutation","deactivate","newSettings","setNewSettings","useStorageState","isHLSJSActive","setIsHLSJSActive","useDeviceInfo","software","hardware","boolSettings","filter","device","settings","key","listSettings","handleHLSJSToogle","handleBoolSettingToggle","a","False","handleListSettingSelect","id","handleSaveClick","window","location","reload","handleLogoutClick","updated","icon","onClick","user","profile","name","username","Math","floor","subscription","days","Seo","props","Helmet","defaultTitle","titleTemplate","method","params","client","ApiClient","query","useQuery","Button","iconOnly","children","autoFocus","wrapperRef","useRef","useEffect","frameId","requestAnimationFrame","current","node","focus","cancelAnimationFrame","ref","cx","role","Checkbox","inputRef","handleChange","e","target","handleKeyPress","isKey","click","component","onKeyPress","type","Radio","initialState","state","setState","Accordion","visible","setVisible","handleClick","newVisible"],"mappings":"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","file":"static/js/25.be82d009.chunk.js","sourcesContent":["import { useCallback, useMemo, useState } from 'react';\nimport map from 'lodash/map';\n\nimport Accordion from 'components/accordion';\nimport Radio from 'components/radio';\nimport useChangebleState from 'hooks/useChangebleState';\n\ntype Option<T = any> = {\n  title: string;\n  value: T;\n};\n\ntype Props<T = any> = {\n  label: string;\n  options: Option<T>[] | string[];\n  value?: T;\n  defaultValue?: T;\n  onChange?: (value: T) => void;\n  closeOnChange?: boolean;\n};\n\nconst Select: React.FC<Props> = ({ label, options, defaultValue, value, onChange, closeOnChange }) => {\n  const [open, setOpen] = useState(false);\n  const [val, setVal] = useChangebleState(value || defaultValue);\n  const opts = useMemo(\n    () =>\n      Array.isArray(options) ? options.map((option, idx) => (typeof option === 'string' ? { title: option, value: idx } : option)) : [],\n    [options],\n  );\n  const selectedOption = useMemo(() => opts.find((o) => o.value === val), [opts, val]);\n\n  const handleChanged = useCallback(\n    (value) => {\n      setVal(value);\n      onChange?.(value);\n\n      if (closeOnChange) {\n        setOpen(false);\n      }\n    },\n    [setVal, onChange, closeOnChange],\n  );\n  const handleChecked = useCallback(\n    (option: Option) => (checked: boolean) => {\n      if (checked) {\n        handleChanged(option.value);\n      }\n    },\n    [handleChanged],\n  );\n\n  return (\n    <Accordion open={open} onToggle={setOpen} title={label} subtitle={selectedOption?.title}>\n      <div className=\"flex flex-col\">\n        {map(opts, (opt) => (\n          <Radio key={opt.value} checked={opt.value === val} onChange={handleChecked(opt)}>\n            {opt.title}\n          </Radio>\n        ))}\n      </div>\n    </Accordion>\n  );\n};\n\nexport default Select;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport filter from 'lodash/filter';\nimport findIndex from 'lodash/findIndex';\nimport map from 'lodash/map';\n\nimport { Bool, DeviceSettingBoolean, DeviceSettingList, DeviceSettingsParams } from 'api';\nimport Button from 'components/button';\nimport Checkbox from 'components/checkbox';\nimport Select from 'components/select';\nimport Seo from 'components/seo';\nimport Text from 'components/text';\nimport useApi from 'hooks/useApi';\nimport useApiMutation from 'hooks/useApiMutation';\nimport useDeviceInfo from 'hooks/useDeviceInfo';\nimport useStorageState from 'hooks/useStorageState';\n\nconst SettingBool: React.FC<{ setting: DeviceSettingBoolean; onChange?: (checked: boolean) => void }> = ({ setting, onChange }) => {\n  return (\n    <Checkbox className=\"w-full\" defaultChecked={setting.value === Bool.True} onChange={onChange}>\n      {setting.label}\n    </Checkbox>\n  );\n};\n\nconst SettingList: React.FC<{ setting: DeviceSettingList; onChange?: (value: number) => void }> = ({ setting, onChange }) => {\n  const options = useMemo(\n    () => map(setting.value, (value) => `${value.label} ${value.description ? `(${value.description})` : ''}`),\n    [setting.value],\n  );\n\n  return (\n    <Select\n      defaultValue={findIndex(setting.value, (value) => value.selected === Bool.True)}\n      label={setting.label}\n      onChange={onChange}\n      options={options}\n      closeOnChange\n    />\n  );\n};\n\nconst SettingsView: React.FC = () => {\n  const { data } = useApi('user');\n  const { data: deviceInfo } = useApi('deviceInfo');\n  const { saveDeviceSettingsAsync } = useApiMutation('saveDeviceSettings');\n  const { deactivate } = useApiMutation('deactivate');\n  const [newSettings, setNewSettings] = useState<DeviceSettingsParams>({});\n  const [isHLSJSActive, setIsHLSJSActive] = useStorageState<boolean>('is_hls.js_active');\n  const { software, hardware } = useDeviceInfo();\n\n  const boolSettings = useMemo(\n    () =>\n      filter(\n        map(deviceInfo?.device?.settings, (setting, key) => ({ ...setting, key })),\n        (setting: DeviceSettingBoolean) => typeof setting['type'] === 'undefined',\n      ) as (DeviceSettingBoolean & { key: string })[],\n    [deviceInfo?.device?.settings],\n  );\n  const listSettings = useMemo(\n    () =>\n      filter(\n        map(deviceInfo?.device?.settings, (setting, key) => ({ ...setting, key })),\n        (setting: DeviceSettingList) => setting['type'] === 'list',\n      ) as (DeviceSettingList & { key: string })[],\n    [deviceInfo?.device?.settings],\n  );\n\n  const handleHLSJSToogle = useCallback(\n    (checked: boolean) => {\n      setIsHLSJSActive(checked);\n    },\n    [setIsHLSJSActive],\n  );\n  const handleBoolSettingToggle = useCallback(\n    (setting: typeof boolSettings[0]) => async (checked: boolean) => {\n      setNewSettings({ ...newSettings, [setting['key']]: checked ? Bool.True : Bool.False });\n    },\n    [newSettings],\n  );\n  const handleListSettingSelect = useCallback(\n    (setting: typeof listSettings[0]) => (value: number) => {\n      setNewSettings({ ...newSettings, [setting['key']]: setting.value[value].id });\n    },\n    [newSettings],\n  );\n\n  const handleSaveClick = useCallback(async () => {\n    await saveDeviceSettingsAsync([deviceInfo?.device.id!, newSettings]);\n\n    window.location.reload();\n  }, [newSettings, deviceInfo?.device, saveDeviceSettingsAsync]);\n  const handleLogoutClick = useCallback(() => {\n    deactivate([]);\n  }, [deactivate]);\n\n  return (\n    <>\n      <Seo title=\"Настройки устройства\" />\n      <div className=\"h-screen relative\">\n        <Text className=\"m-1 mb-3\">Настройки устройства</Text>\n\n        <div className=\"flex flex-col\">\n          {deviceInfo?.device && (\n            <>\n              <div>\n                <div className=\"flex flex-wrap pb-4\" key={`bool-${deviceInfo?.device.updated}`}>\n                  {map(boolSettings, (setting) => (\n                    <div className=\"flex w-1/2 pr-4\" key={setting['key']}>\n                      <SettingBool setting={setting} onChange={handleBoolSettingToggle(setting)} />\n                    </div>\n                  ))}\n                  <div className=\"flex w-1/2 pr-4\" key=\"use-hls.js\">\n                    <Checkbox className=\"w-full\" defaultChecked={isHLSJSActive} onChange={handleHLSJSToogle}>\n                      Использовать HLS.js\n                    </Checkbox>\n                  </div>\n                </div>\n                <div className=\"flex flex-wrap pb-4\" key={`list-${deviceInfo?.device.updated}`}>\n                  {map(listSettings, (setting) => (\n                    <div className=\"flex w-1/2 pr-4\" key={setting['key']}>\n                      <SettingList setting={setting} onChange={handleListSettingSelect(setting)} />\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"flex my-8\">\n                <Button icon=\"done\" onClick={handleSaveClick}>\n                  Сохранить\n                </Button>\n              </div>\n            </>\n          )}\n        </div>\n\n        <div className=\"flex justify-between absolute bottom-0 left-0 right-0 py-2\">\n          <div>\n            <Text>Пользователь</Text>\n            <div className=\"flex items-center\">\n              {data?.user && (\n                <Text className=\"mr-4\">\n                  {data.user.profile.name || data.user.username} ({Math.floor(data.user.subscription.days)} дн.)\n                </Text>\n              )}\n\n              <Button icon=\"logout\" onClick={handleLogoutClick}>\n                Выход\n              </Button>\n            </div>\n          </div>\n\n          <div className=\"flex flex-col items-end pr-4\">\n            <Text>{hardware}</Text>\n            <Text>{software}</Text>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SettingsView;\n","import { Helmet, HelmetProps } from 'react-helmet';\n\ntype Props = {} & HelmetProps;\n\nconst Seo: React.FC<Props> = (props) => {\n  return <Helmet defaultTitle=\"Unknown\" titleTemplate=\"%s | Kinopub WebOS\" {...props} />;\n};\n\nexport default Seo;\n","import { useMemo } from 'react';\nimport { UseQueryOptions, useQuery } from 'react-query';\n\nimport ApiClient from 'api';\n\ntype Unpromise<T> = T extends Promise<infer U> ? U : T;\n\nexport type Methods = {\n  [method in keyof ApiClient]: ApiClient[method] extends Function ? Unpromise<ReturnType<ApiClient[method]>> : never;\n};\n\nexport type Method = keyof ApiClient & string;\n\nfunction useApi<T extends Method>(\n  method: T,\n  params: Parameters<ApiClient[T]> = [] as Parameters<ApiClient[T]>,\n  options?: UseQueryOptions<Methods[T]>,\n) {\n  const client = useMemo(() => new ApiClient(), []);\n  const query = useQuery<Methods[T]>(\n    [method, ...params],\n    () =>\n      // @ts-expect-error\n      client[method](...params) as Methods[T],\n    options,\n  );\n\n  return query;\n}\n\nexport default useApi;\n","import { useEffect, useRef } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  icon?: string;\n  iconOnly?: boolean;\n  autoFocus?: boolean;\n  className?: string;\n} & React.ComponentProps<typeof Spottable>;\n\nconst Button: React.FC<Props> = ({ icon, iconOnly, children, autoFocus, className, ...props }) => {\n  const wrapperRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    let frameId: number;\n\n    if (autoFocus) {\n      frameId = requestAnimationFrame(() => {\n        // @ts-expect-error\n        wrapperRef.current?.node?.focus();\n      });\n    }\n\n    return () => {\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n    };\n  }, [wrapperRef, autoFocus]);\n\n  return (\n    <Spottable\n      {...props}\n      ref={wrapperRef}\n      className={cx('text-gray-200 whitespace-nowrap cursor-pointer rounded px-2 py-1', className)}\n      role=\"button\"\n    >\n      <div className=\"flex items-center\">\n        {icon && <Icon className={cx({ 'mr-2': !iconOnly })} name={icon} />}\n        {!iconOnly && children}\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Button;\n","import { useCallback, useRef } from 'react';\nimport React from 'react';\nimport cx from 'classnames';\n\nimport Spottable from 'components/spottable';\n\nimport { isKey } from 'utils/keyboard';\n\nexport type CheckboxProps = {\n  defaultChecked?: boolean;\n  checked?: boolean;\n  onChange?: (checked: boolean, e: React.ChangeEvent<HTMLInputElement>) => void;\n  className?: string;\n  type?: string;\n} & Omit<React.HTMLAttributes<HTMLInputElement>, 'onChange'>;\n\nconst Checkbox: React.FC<CheckboxProps> = ({ defaultChecked, checked, onChange, className, children, ...props }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>(\n    (e) => {\n      onChange?.(e.target.checked, e);\n    },\n    [onChange],\n  );\n  const handleKeyPress = useCallback((e: KeyboardEvent) => {\n    if (isKey(e, 'Enter')) {\n      inputRef.current?.click();\n    }\n  }, []);\n\n  return (\n    <Spottable\n      component=\"label\"\n      className={cx('text-gray-200 p-2', className)}\n      // @ts-expect-error\n      onKeyPress={handleKeyPress}\n      role=\"button\"\n    >\n      <div className=\"inline-flex items-center cursor-pointer\">\n        <input\n          type=\"checkbox\"\n          {...props}\n          ref={inputRef}\n          className=\"inline-block w-4 h-4\"\n          defaultChecked={defaultChecked}\n          checked={checked}\n          onChange={handleChange}\n        />\n        <span className=\"inline-block ml-2 whitespace-nowrap\">{children}</span>\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Checkbox;\n","import React from 'react';\n\nimport Checkbox, { CheckboxProps } from 'components/checkbox';\n\ntype Props = {} & CheckboxProps;\n\nconst Radio: React.FC<Props> = (props) => {\n  return <Checkbox {...props} type=\"radio\" />;\n};\n\nexport default Radio;\n","import { useEffect, useState } from 'react';\n\nfunction useChangebleState<T>(initialState?: T) {\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    setState(initialState);\n  }, [initialState]);\n\n  return [state, setState] as const;\n}\n\nexport default useChangebleState;\n","import { useCallback } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\nimport Text from 'components/text';\nimport useChangebleState from 'hooks/useChangebleState';\n\ntype Props = {\n  title: string;\n  subtitle?: string;\n  className?: string;\n  open?: boolean;\n  onToggle?: (open: boolean) => void;\n};\n\nconst Accordion: React.FC<Props> = ({ open, onToggle, title, subtitle, className, children }) => {\n  const [visible, setVisible] = useChangebleState(open);\n\n  const handleClick = useCallback(() => {\n    setVisible((visible) => {\n      const newVisible = !visible;\n\n      onToggle?.(newVisible);\n\n      return newVisible;\n    });\n  }, [setVisible, onToggle]);\n\n  return (\n    <div className=\"flex flex-col w-full\">\n      <Spottable onClick={handleClick} className={cx('p-1 cursor-pointer', className)}>\n        <div className=\"flex flex-col\">\n          <div className=\"flex items-center\">\n            <Text>{title}</Text>\n\n            <Icon name={visible ? 'expand_less' : 'expand_more'} />\n          </div>\n          {!visible && subtitle && <Text className=\"mt-2\">{subtitle}</Text>}\n        </div>\n      </Spottable>\n      {visible && children}\n    </div>\n  );\n};\n\nexport default Accordion;\n"],"sourceRoot":""}