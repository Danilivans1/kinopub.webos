{"version":3,"sources":["components/button/button.tsx","components/checkbox/checkbox.tsx","utils/video.ts","utils/subtitles.ts","components/media/media.tsx","components/player/settings.tsx","components/player/startFrom.tsx","components/player/player.tsx","components/spotlightContainer/spotlightContainer.tsx","components/popup/popup.tsx","components/radio/radio.tsx"],"names":["Button","icon","iconOnly","children","autoFocus","className","props","wrapperRef","useRef","useEffect","frameId","requestAnimationFrame","current","node","focus","cancelAnimationFrame","ref","cx","role","name","Checkbox","defaultChecked","checked","onChange","inputRef","handleChange","useCallback","e","target","handleClick","click","component","onClick","type","formatIdx","idx","mapAudios","audios","map","audio","lang","filter","title","author","toUpper","codec","join","mapSources","files","streamingType","orderBy","file","src","url","http","quality","parseInt","mapSubtitles","subtitles","subtitle","WebVTTConverter","resource","objectURL","this","Promise","resolve","reject","reader","FileReader","addEventListener","event","buf","result","Uint8Array","readAsArrayBuffer","Blob","TextDecoder","blobToString","decoded","text","concat","toVTT","blob","URL","createObjectURL","blobToBuffer","then","buffer","utf8str","decode","success","fail","readAsText","replace","str","split","forEach","each","push","charCodeAt","from","a","fetch","converter","getURL","Media","hls","media","state","startTime","currentTime","destroy","setState","handleLoaded","play","includes","HLS","isSupported","attachMedia","on","Events","MEDIA_ATTACHED","loadSource","MANIFEST_PARSED","uniq","audioTracks","audioTrack","find","id","audioTracksIndex","Array","findIndex","enabled","length","uniqBy","sourceTracks","sourceTrack","load","subtitleTracks","subtitleTrack","textTracks","textTrack","mode","label","track","document","createElement","kind","srclang","showTrack","endsWith","convertToVTT","appendChild","UIMedia","NONE","Settings","player","showButton","useState","popupVisible","setPopupVisible","setAudios","currentAudio","setCurrentAudio","sources","setSources","currentSource","setCurrentSource","setSubtitles","currentSubtitle","setCurrentSubtitle","handleVideoUpdate","value","getVideoNode","handleAudioChange","handleSourceChange","source","handleSubtitleChange","handlePopupOpen","video","pause","handlePopupClose","handleBlueButton","useButtonEffect","visible","onClose","StartFrom","startInDelay","setVisible","startIn","setStartIn","startFrom","useMemo","Date","toISOString","substr","handleStartFromClick","handleStartFromBeginingClick","intervalId","setInterval","prevStartIn","newStartIn","clearInterval","Player","description","poster","timeSyncInterval","onPlay","onPause","onEnded","onTimeSync","playerRef","isLoaded","setIsLoaded","titleVisible","setTitleVisible","handlePlay","handlePause","handleEnded","handleTimeSync","handleLoadedMetadata","timeoutId","setTimeout","clearTimeout","jumpBy","onLoadedMetadata","videoComponent","SpotlightContainer","SpotlightContainerDecorator","enterTo","defaultElement","selector","overflow","preserveId","Popup","containerId","Spotlight","add","handleClose","handleCloseIfVisible","spotPopupContent","getCurrent","blur","setActiveContainer","setPointerMode","hidden","spotlightId","spotlightRestrict","spotlightDisabled","Radio"],"mappings":"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","file":"static/js/3.fb2f1318.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  icon?: string;\n  iconOnly?: boolean;\n  autoFocus?: boolean;\n  className?: string;\n} & React.ComponentProps<typeof Spottable>;\n\nconst Button: React.FC<Props> = ({ icon, iconOnly, children, autoFocus, className, ...props }) => {\n  const wrapperRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    let frameId: number;\n\n    if (autoFocus) {\n      frameId = requestAnimationFrame(() => {\n        // @ts-expect-error\n        wrapperRef.current?.node?.focus();\n      });\n    }\n\n    return () => {\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n    };\n  }, [wrapperRef, autoFocus]);\n\n  return (\n    <Spottable\n      {...props}\n      ref={wrapperRef}\n      className={cx('text-gray-200 whitespace-nowrap cursor-pointer rounded px-2 py-1', className)}\n      role=\"button\"\n    >\n      <div className=\"flex items-center\">\n        {icon && <Icon className={cx({ 'mr-2': !iconOnly })} name={icon} />}\n        {!iconOnly && children}\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Button;\n","import { useCallback, useRef } from 'react';\nimport React from 'react';\nimport cx from 'classnames';\n\nimport Spottable from 'components/spottable';\n\nexport type CheckboxProps = {\n  defaultChecked?: boolean;\n  checked?: boolean;\n  onChange?: (checked: boolean, e: React.ChangeEvent<HTMLInputElement>) => void;\n  className?: string;\n  type?: string;\n} & Omit<React.HTMLAttributes<HTMLInputElement>, 'onChange'>;\n\nconst Checkbox: React.FC<CheckboxProps> = ({ defaultChecked, checked, onChange, className, children, ...props }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>(\n    (e) => {\n      onChange?.(e.target.checked, e);\n    },\n    [onChange],\n  );\n  const handleClick = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <Spottable component=\"label\" className={cx('text-gray-200 p-2', className)} onClick={handleClick} role=\"button\">\n      <div className=\"inline-flex items-center cursor-pointer\">\n        <input\n          type=\"checkbox\"\n          {...props}\n          ref={inputRef}\n          className=\"inline-block w-4 h-4\"\n          defaultChecked={defaultChecked}\n          checked={checked}\n          onChange={handleChange}\n        />\n        <span className=\"inline-block ml-2 whitespace-nowrap\">{children}</span>\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Checkbox;\n","import filter from 'lodash/filter';\nimport map from 'lodash/map';\nimport orderBy from 'lodash/orderBy';\nimport toUpper from 'lodash/toUpper';\n\nimport { Audio, Streaming, Subtitle } from 'api';\nimport { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\n\nconst formatIdx = (idx: number) => (idx < 10 ? `0${idx}` : idx);\n\nexport function mapAudios(audios: Audio[]): AudioTrack[] {\n  return map(audios, (audio, idx) => ({\n    lang: audio.lang,\n    name: filter([\n      `${formatIdx(idx + 1)}.`,\n      audio.type?.title && audio.author?.title ? `${audio.type?.title}.` : audio.type?.title,\n      audio.author?.title,\n      audio.type?.title || audio.author?.title ? `(${toUpper(audio.lang)})` : toUpper(audio.lang),\n      audio.codec !== 'aac' && toUpper(audio.codec),\n    ]).join(' '),\n  }));\n}\n\nexport function mapSources(\n  files: { url: string | { [key in Streaming]?: string }; quality?: string }[],\n  streamingType?: Streaming,\n): SourceTrack[] {\n  return orderBy(\n    map(files, (file) => ({\n      src: (typeof file.url === 'string' ? file.url : file.url[streamingType!] || file.url.http) as string,\n      name: file.quality!,\n    })),\n    ({ name }) => parseInt(name),\n    'desc',\n  );\n}\n\nexport function mapSubtitles(subtitles: Subtitle[]): SubtitleTrack[] {\n  return map(subtitles, (subtitle, idx) => ({\n    src: subtitle.url,\n    lang: subtitle.lang,\n    name: `${toUpper(subtitle.lang)} #${formatIdx(idx + 1)}`,\n  }));\n}\n","class WebVTTConverter {\n  resource: Blob;\n\n  private objectURL?: string;\n\n  constructor(resource: Blob) {\n    this.resource = resource;\n  }\n\n  blobToBuffer() {\n    return new Promise<ArrayBuffer>((resolve, reject) => {\n      const reader = new FileReader();\n      reader.addEventListener('loadend', (event) => {\n        const buf = event.target?.result;\n        resolve(new Uint8Array(buf as ArrayBuffer));\n      });\n      reader.addEventListener('error', () => reject('Error while reading the Blob object'));\n      reader.readAsArrayBuffer(this.resource);\n    });\n  }\n\n  static blobToString(blob: Blob, success: (text: string) => void, fail: () => void) {\n    const reader = new FileReader();\n    reader.addEventListener('loadend', (event) => {\n      const text = event.target?.result;\n      success(text as string);\n    });\n    reader.addEventListener('error', () => fail());\n    reader.readAsText(blob);\n  }\n\n  /**\n   * @param {*} utf8str\n   */\n  static toVTT(utf8str: string) {\n    return utf8str\n      .replace(/\\{\\\\([ibu])\\}/g, '</$1>')\n      .replace(/\\{\\\\([ibu])1\\}/g, '<$1>')\n      .replace(/\\{([ibu])\\}/g, '<$1>')\n      .replace(/\\{\\/([ibu])\\}/g, '</$1>')\n      .replace(/(\\d\\d:\\d\\d:\\d\\d),(\\d\\d\\d)/g, '$1.$2')\n      .concat('\\r\\n\\r\\n');\n  }\n\n  static toTypedArray(str: string) {\n    const result: number[] = [];\n    str.split('').forEach((each) => {\n      result.push(parseInt(`${each.charCodeAt(0)}`, 16));\n    });\n    return Uint8Array.from(result);\n  }\n\n  getURL() {\n    return new Promise<string>((resolve, reject) => {\n      if (!(this.resource instanceof Blob)) return reject('Expecting resource to be a Blob but something else found.');\n      if (!FileReader) return reject('No FileReader constructor found');\n      if (!TextDecoder) return reject('No TextDecoder constructor found');\n      return WebVTTConverter.blobToString(\n        this.resource,\n        (decoded) => {\n          const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n          const text = vttString.concat(WebVTTConverter.toVTT(decoded));\n          const blob = new Blob([text], { type: 'text/vtt' });\n          this.objectURL = URL.createObjectURL(blob);\n\n          return resolve(this.objectURL);\n        },\n        () => {\n          this.blobToBuffer().then((buffer) => {\n            const utf8str = new TextDecoder('utf-8').decode(buffer);\n            const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n            const text = vttString.concat(WebVTTConverter.toVTT(utf8str));\n            const blob = new Blob([text], { type: 'text/vtt' });\n            this.objectURL = URL.createObjectURL(blob);\n\n            return resolve(this.objectURL);\n          });\n        },\n      );\n    });\n  }\n\n  release() {\n    URL.createObjectURL(this.objectURL);\n  }\n}\n\nexport async function convertToVTT(src: string) {\n  const file = await (await fetch(src)).blob();\n  const converter = new WebVTTConverter(file);\n\n  return converter.getURL();\n}\n","import UIMedia, { MediaProps } from '@enact/ui/Media';\nimport HLS from 'hls.js';\nimport uniq from 'lodash/uniq';\nimport uniqBy from 'lodash/uniqBy';\n\nimport { convertToVTT } from 'utils/subtitles';\n\nexport type AudioTrack = {\n  name: string;\n  lang: string;\n};\n\nexport type SourceTrack = {\n  src: string;\n  name: string;\n};\n\nexport type SubtitleTrack = {\n  src: string;\n  name: string;\n  lang: string;\n};\n\nclass Media extends UIMedia {\n  hls?: HLS;\n\n  media!: HTMLMediaElement & {\n    audioTracks?: { enabled?: boolean; label: string }[];\n  };\n\n  state!: {\n    src: string;\n  };\n\n  props!: MediaProps & {\n    startTime?: number;\n    audioTracks?: AudioTrack[];\n    sourceTracks: SourceTrack[];\n    subtitleTracks?: SubtitleTrack[];\n  };\n\n  load(src: string) {\n    let startTime = this.props.startTime;\n\n    if (this.state?.src && this.state.src !== src) {\n      startTime = this.media.currentTime;\n    }\n\n    this.destroy();\n\n    const media = this.media;\n\n    this.setState({ src });\n\n    const handleLoaded = () => {\n      if (startTime) {\n        media.currentTime = startTime;\n      }\n\n      media.play();\n    };\n\n    if (src.includes('.m3u8') && HLS.isSupported()) {\n      const hls = (this.hls = new HLS());\n\n      hls.attachMedia(media);\n      hls.on(HLS.Events.MEDIA_ATTACHED, () => {\n        hls.loadSource(src);\n        hls.on(HLS.Events.MANIFEST_PARSED, handleLoaded);\n      });\n\n      return;\n    }\n\n    media.src = src;\n    media.addEventListener('loadedmetadata', handleLoaded);\n  }\n\n  get audioTracks() {\n    if (this.hls) {\n      return uniq(this.hls.audioTracks.map((audioTrack) => audioTrack.name));\n    }\n\n    return this.props.audioTracks?.map((audioTrack) => audioTrack.name);\n  }\n\n  get audioTrack() {\n    if (this.hls) {\n      return this.hls.audioTracks.find((audioTrack) => audioTrack.id === this.hls?.audioTrack)?.name!;\n    }\n\n    const audioTracksIndex = Array.from(this.media.audioTracks || []).findIndex((audioTrack) => audioTrack.enabled);\n\n    return this.props.audioTracks?.[audioTracksIndex]?.name!;\n  }\n\n  set audioTrack(name: string) {\n    if (this.hls) {\n      const audioTrack = this.hls.audioTracks.find((audioTrack) => audioTrack.name === name);\n\n      if (audioTrack) {\n        this.hls.audioTrack = audioTrack.id;\n      }\n    } else {\n      const audioTracks = Array.from(this.media.audioTracks || []);\n      let audioTracksIndex = this.props.audioTracks?.findIndex((audioTrack) => audioTrack.name === name);\n\n      if (!audioTracksIndex || audioTracksIndex > audioTracks.length - 1) {\n        audioTracksIndex = 0;\n      }\n\n      audioTracks.forEach((audioTrack, idx) => {\n        audioTrack.enabled = idx === audioTracksIndex;\n      });\n    }\n  }\n\n  get sourceTracks() {\n    return uniqBy(this.props.sourceTracks, 'src').map((sourceTrack) => sourceTrack.name);\n  }\n\n  get sourceTrack() {\n    return this.props.sourceTracks.find((sourceTrack) => sourceTrack.src === this.state.src)?.name!;\n  }\n\n  set sourceTrack(name: string) {\n    const sourceTrack = this.props.sourceTracks.find((sourceTrack) => sourceTrack.name === name);\n\n    if (sourceTrack) {\n      this.load(sourceTrack.src);\n    }\n  }\n\n  get subtitleTracks() {\n    if (this.hls) {\n      return this.hls.subtitleTracks.map((subtitleTrack) => subtitleTrack.name);\n    }\n\n    return this.props.subtitleTracks?.map((subtitleTrack) => subtitleTrack.name);\n  }\n\n  get subtitleTrack() {\n    if (this.hls) {\n      return this.hls.subtitleTracks.find((subtitleTrack) => subtitleTrack.id === this.hls?.subtitleTrack)?.name!;\n    }\n\n    return Array.from(this.media.textTracks || []).find((textTrack) => textTrack.mode === 'showing')?.label!;\n  }\n\n  set subtitleTrack(name: string) {\n    if (this.hls) {\n      this.hls.subtitleTrack = this.hls.subtitleTracks.find((subtitle) => subtitle.name === name)?.id ?? -1;\n    } else {\n      const textTracks = Array.from(this.media.textTracks || []);\n\n      textTracks.forEach((textTrack) => {\n        textTrack.mode = 'disabled';\n      });\n\n      const subtitleTrack = textTracks.find((textTrack) => textTrack.label === name);\n\n      if (subtitleTrack) {\n        subtitleTrack.mode = 'showing';\n      } else {\n        const subtitleTrack = this.props.subtitleTracks?.find((subtitleTrack) => subtitleTrack.name === name);\n\n        if (subtitleTrack) {\n          const track = document.createElement('track');\n\n          track.kind = 'captions';\n          track.id = subtitleTrack.name;\n          track.srclang = subtitleTrack.lang;\n          track.label = subtitleTrack.name;\n\n          const showTrack = (src: string) => {\n            track.src = src;\n            track.track.mode = 'showing';\n          };\n\n          if (subtitleTrack.src.endsWith('.srt')) {\n            convertToVTT(subtitleTrack.src).then(showTrack);\n          } else {\n            showTrack(subtitleTrack.src);\n          }\n\n          this.media.appendChild(track);\n        }\n      }\n    }\n  }\n\n  private destroy() {\n    if (this.hls) {\n      this.hls.destroy();\n    } else {\n      this.media.src = '';\n    }\n  }\n\n  componentDidMount() {\n    this.load(this.props.sourceTracks[0].src);\n\n    super.componentDidMount?.();\n  }\n\n  componentDidUpdate() {}\n\n  componentWillUnmount() {\n    this.destroy();\n\n    super.componentWillUnmount?.();\n  }\n}\n\nexport default Media;\n","import { useCallback, useState } from 'react';\nimport { VideoPlayerBase } from '@enact/moonstone/VideoPlayer';\nimport map from 'lodash/map';\n\nimport Button from 'components/button';\nimport Popup from 'components/popup';\nimport Radio from 'components/radio';\nimport Text from 'components/text';\nimport useButtonEffect from 'hooks/useButtonEffect';\n\nconst NONE = 'NONE';\n\ntype Props = {\n  player: React.MutableRefObject<VideoPlayerBase | undefined>;\n  showButton?: boolean;\n};\n\nconst Settings: React.FC<Props> = ({ player, showButton }) => {\n  const [popupVisible, setPopupVisible] = useState(false);\n\n  const [audios, setAudios] = useState<string[]>([]);\n  const [currentAudio, setCurrentAudio] = useState<string | null>(null);\n  const [sources, setSources] = useState<string[]>([]);\n  const [currentSource, setCurrentSource] = useState<string | null>(null);\n  const [subtitles, setSubtitles] = useState<string[]>([]);\n  const [currentSubtitle, setCurrentSubtitle] = useState<string | null>(null);\n\n  const handleVideoUpdate = useCallback(\n    (name: string, value: string) => {\n      if (player.current) {\n        const video: any = player.current.getVideoNode();\n\n        video[name] = value;\n      }\n    },\n    [player],\n  );\n\n  const handleAudioChange = useCallback(\n    (audio: string) => () => {\n      setCurrentAudio(audio);\n      handleVideoUpdate('audioTrack', audio);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSourceChange = useCallback(\n    (source: string) => () => {\n      setCurrentSource(source);\n      handleVideoUpdate('sourceTrack', source);\n    },\n    [handleVideoUpdate],\n  );\n  const handleSubtitleChange = useCallback(\n    (subtitle: string) => () => {\n      setCurrentSubtitle(subtitle);\n      handleVideoUpdate('subtitleTrack', subtitle);\n    },\n    [handleVideoUpdate],\n  );\n\n  const handlePopupOpen = useCallback(() => {\n    if (player.current && !popupVisible) {\n      const video: any = player.current.getVideoNode();\n      const { audioTracks, audioTrack, sourceTracks, sourceTrack, subtitleTracks, subtitleTrack } = video;\n\n      if (audioTracks?.length > 1 || sourceTracks?.length > 1 || subtitleTracks?.length > 0) {\n        setAudios(audioTracks);\n        setCurrentAudio(audioTrack);\n\n        setSources(sourceTracks);\n        setCurrentSource(sourceTrack);\n\n        setSubtitles(subtitleTracks);\n        setCurrentSubtitle(subtitleTrack);\n\n        player.current.pause();\n\n        setPopupVisible(true);\n      }\n    }\n  }, [popupVisible, player]);\n\n  const handlePopupClose = useCallback(() => {\n    setPopupVisible(false);\n\n    if (player.current) {\n      player.current.play();\n    }\n  }, [player]);\n\n  const handleBlueButton = useCallback(() => {\n    !popupVisible && handlePopupOpen();\n  }, [popupVisible, handlePopupOpen]);\n\n  useButtonEffect('Blue', handleBlueButton);\n  useButtonEffect('Play', handlePopupClose);\n  useButtonEffect('ArrowUp', handlePopupOpen);\n\n  return (\n    <>\n      {showButton && <Button className=\"absolute z-101 bottom-8 right-10\" icon=\"settings\" iconOnly onClick={handlePopupOpen} />}\n      <Popup visible={popupVisible} onClose={handlePopupClose}>\n        <div className=\"flex flex-col\">\n          {audios?.length > 1 && (\n            <div className=\"flex flex-col py-4\">\n              <Text>Звук</Text>\n\n              <div className=\"flex flex-wrap mt-2\">\n                {map(audios, (audio) => (\n                  <div key={audio} className=\"w-1/2\">\n                    <Radio checked={audio === currentAudio} onChange={handleAudioChange(audio)}>\n                      {audio}\n                    </Radio>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n          {sources?.length > 1 && (\n            <div className=\"flex flex-col py-4\">\n              <Text>Качество</Text>\n\n              <div className=\"flex flex-wrap mt-2\">\n                {map(sources, (source) => (\n                  <div key={source} className=\"w-1/6\">\n                    <Radio checked={source === currentSource} onChange={handleSourceChange(source)}>\n                      {source}\n                    </Radio>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n          {subtitles?.length > 0 && (\n            <div className=\"flex flex-col py-4\">\n              <Text>Субтитры</Text>\n\n              <div className=\"flex flex-wrap mt-2\">\n                <div className=\"w-1/6\">\n                  <Radio checked={!currentSubtitle || currentSubtitle === NONE} onChange={handleSubtitleChange(NONE)}>\n                    Нет\n                  </Radio>\n                </div>\n\n                {map(subtitles, (subtitle) => (\n                  <div key={subtitle} className=\"w-1/6\">\n                    <Radio checked={subtitle === currentSubtitle} onChange={handleSubtitleChange(subtitle)}>\n                      {subtitle}\n                    </Radio>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </Popup>\n    </>\n  );\n};\n\nexport default Settings;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { VideoPlayerBase } from '@enact/moonstone/VideoPlayer';\n\nimport Button from 'components/button';\n\ntype Props = {\n  player: React.MutableRefObject<VideoPlayerBase | undefined>;\n  startTime?: number;\n  startInDelay?: number;\n};\n\nconst StartFrom: React.FC<Props> = ({ startTime, startInDelay = 5, player }) => {\n  const [visible, setVisible] = useState(true);\n  const [startIn, setStartIn] = useState(startInDelay);\n  const startFrom = useMemo(() => new Date((startTime || 0) * 1000).toISOString().substr(11, 8).replace(/^00:/, ''), [startTime]);\n\n  const handleStartFromClick = useCallback(() => {\n    if (player.current) {\n      setVisible(false);\n      const video: any = player.current.getVideoNode();\n\n      video.currentTime = startTime;\n    }\n  }, [startTime, player]);\n  const handleStartFromBeginingClick = useCallback(() => {\n    setVisible(false);\n  }, []);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n\n    if (visible) {\n      intervalId = setInterval(() => {\n        setStartIn((prevStartIn) => {\n          const newStartIn = prevStartIn - 1;\n\n          if (newStartIn <= 0) {\n            handleStartFromClick();\n          }\n\n          return newStartIn;\n        });\n      }, 1000);\n    }\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [visible, handleStartFromClick]);\n\n  if (!startTime || !visible) {\n    return null;\n  }\n\n  return (\n    <div className=\"flex justify-center absolute w-full z-101 bottom-32\">\n      <Button onClick={handleStartFromClick}>\n        Смотреть с {startFrom} через {startIn}\n      </Button>\n      <Button autoFocus onClick={handleStartFromBeginingClick}>\n        Смотреть с начала\n      </Button>\n    </div>\n  );\n};\n\nexport default StartFrom;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport VideoPlayer, { VideoPlayerBase, VideoPlayerBaseProps } from '@enact/moonstone/VideoPlayer';\n\nimport Media, { AudioTrack, SourceTrack, SubtitleTrack } from 'components/media';\nimport Text from 'components/text';\nimport useButtonEffect from 'hooks/useButtonEffect';\n\nimport Settings from './settings';\nimport StartFrom from './startFrom';\n\nexport type PlayerProps = {\n  title: string;\n  description?: string;\n  poster: string;\n  audios?: AudioTrack[];\n  sources: SourceTrack[];\n  subtitles?: SubtitleTrack[];\n  startTime?: number;\n  timeSyncInterval?: number;\n  onPlay?: () => void;\n  onPause?: (currentTime: number) => void;\n  onEnded?: (currentTime: number) => void;\n  onTimeSync?: (currentTime: number) => void | Promise<void>;\n} & VideoPlayerBaseProps;\n\nconst Player: React.FC<PlayerProps> = ({\n  title,\n  description,\n  poster,\n  audios,\n  sources,\n  subtitles,\n  startTime,\n  timeSyncInterval = 30,\n  onPlay,\n  onPause,\n  onEnded,\n  onTimeSync,\n  ...props\n}) => {\n  const playerRef = useRef<VideoPlayerBase>();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [titleVisible, setTitleVisible] = useState(true);\n\n  const handlePlay = useCallback(() => {\n    setTitleVisible(false);\n    onPlay?.();\n  }, [onPlay]);\n  const handlePause = useCallback(\n    (e) => {\n      setTitleVisible(true);\n      onPause?.(e.currentTime);\n    },\n    [onPause],\n  );\n  const handleEnded = useCallback(\n    (e) => {\n      onEnded?.(e.target.currentTime);\n    },\n    [onEnded],\n  );\n  const handleTimeSync = useCallback(async () => {\n    if (playerRef.current && onTimeSync) {\n      const video: any = playerRef.current.getVideoNode();\n\n      const currentTime = video['currentTime'];\n\n      await onTimeSync(currentTime);\n    }\n  }, [onTimeSync, playerRef]);\n  const handleLoadedMetadata = useCallback(() => {\n    setIsLoaded(true);\n  }, []);\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n\n    if (titleVisible) {\n      timeoutId = setTimeout(() => {\n        setTitleVisible(false);\n      }, 5 * 1000);\n    }\n\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [titleVisible]);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n\n    if (onTimeSync) {\n      intervalId = setInterval(handleTimeSync, timeSyncInterval * 1000);\n    }\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [timeSyncInterval, onTimeSync, handleTimeSync]);\n\n  useButtonEffect('Back', handleTimeSync);\n\n  return (\n    <>\n      {titleVisible && <Text className=\"p-4 absolute top-0 z-10\">{title}</Text>}\n      <Settings showButton={titleVisible} player={playerRef} />\n      {isLoaded && startTime! > 0 && <StartFrom startTime={startTime} player={playerRef} />}\n\n      <VideoPlayer\n        {...props}\n        //@ts-expect-error\n        ref={playerRef}\n        title={description}\n        poster={poster}\n        jumpBy={10}\n        onPlay={handlePlay}\n        onPause={handlePause}\n        onEnded={handleEnded}\n        onLoadedMetadata={handleLoadedMetadata}\n        audioTracks={audios}\n        sourceTracks={sources}\n        subtitleTracks={subtitles}\n        videoComponent={Media}\n      />\n    </>\n  );\n};\n\nexport default Player;\n","import SpotlightContainerDecorator from '@enact/spotlight/SpotlightContainerDecorator';\n\nexport const CONFIG = {\n  enterTo: 'default-element',\n  defaultElement: '.spottable',\n  selector: '.spottable',\n  overflow: true,\n  preserveId: true,\n};\n\nconst SpotlightContainer = SpotlightContainerDecorator(CONFIG, (props: React.HTMLAttributes<HTMLDivElement>) => <div {...props} />);\n\nexport default SpotlightContainer;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport Spotlight from '@enact/spotlight';\nimport cx from 'classnames';\n\nimport SpotlightContainer from 'components/spotlightContainer';\nimport useButtonEffect from 'hooks/useButtonEffect';\n\ntype Props = {\n  visible: boolean;\n  onClose: (visible: boolean) => void;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Popup: React.FC<Props> = ({ visible, onClose, className, ...props }) => {\n  const containerId = useMemo(() => Spotlight.add({}), []);\n  const handleClose = useCallback(() => {\n    onClose(false);\n  }, [onClose]);\n\n  const handleCloseIfVisible = useCallback(() => {\n    if (visible) {\n      handleClose();\n\n      return false;\n    }\n  }, [visible, handleClose]);\n\n  const spotPopupContent = useCallback(() => {\n    if (!Spotlight.focus(containerId)) {\n      const current = Spotlight.getCurrent();\n\n      // In cases where the container contains no spottable controls or we're in pointer-mode, focus\n      // cannot inherently set the active container or blur the active control, so we must do that\n      // here.\n      if (current) {\n        // @ts-expect-error\n        current.blur();\n      }\n\n      Spotlight.setActiveContainer(containerId);\n      setTimeout(() => {\n        Spotlight.setPointerMode(false);\n        Spotlight.focus(containerId);\n      }, 500);\n    }\n  }, [containerId]);\n\n  useButtonEffect('Back', handleCloseIfVisible);\n  useButtonEffect('Blue', handleCloseIfVisible);\n\n  useEffect(() => {\n    if (visible) {\n      spotPopupContent();\n    }\n  }, [visible, spotPopupContent]);\n\n  return (\n    <>\n      <div\n        className={cx('fixed z-999 top-0 left-0 right-0 bottom-0 bg-black bg-opacity-50', {\n          hidden: !visible,\n        })}\n        onClick={handleClose}\n      />\n      <SpotlightContainer\n        {...props}\n        spotlightId={containerId}\n        spotlightRestrict=\"self-only\"\n        spotlightDisabled={!visible}\n        className={cx(\n          'fixed z-999 bottom-0 left-0 right-0 p-4 bg-black ring',\n          {\n            hidden: !visible,\n          },\n          className,\n        )}\n      />\n    </>\n  );\n};\n\nexport default Popup;\n","import React from 'react';\n\nimport Checkbox, { CheckboxProps } from 'components/checkbox';\n\ntype Props = {} & CheckboxProps;\n\nconst Radio: React.FC<Props> = (props) => {\n  return <Checkbox {...props} type=\"radio\" />;\n};\n\nexport default Radio;\n"],"sourceRoot":""}