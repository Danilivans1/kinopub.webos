{"version":3,"sources":["hooks/useInViewport.ts","hooks/useUniqueId.ts","components/scrollable/scrollable.tsx","components/text/text.tsx","components/lazy/lazy.tsx","components/imageItem/imageItem.tsx","hooks/useApi.ts","components/videoItem/videoItem.tsx","components/itemsList/itemsList.tsx","components/button/button.tsx","components/popup/popup.tsx","hooks/useChangebleState.ts","utils/item.ts","components/checkbox/checkbox.tsx","components/accordion/accordion.tsx","components/seasonItem/seasonItem.tsx","components/seasonsList/seasonsList.tsx","containers/bookmarks/bookmarks.tsx","hooks/usePlayButtonEffect.ts","hooks/useStreamingTypeEffect.ts","views/item/item.tsx"],"names":["useInViewport","target","props","options","config","disconnectOnLeave","onEnterViewport","onLeaveViewport","useState","forceUpdate","observer","useRef","inViewportRef","intersected","enterCountRef","leaveCountRef","startObserver","useCallback","current","node","findDOMNode","observe","stopObserver","unobserve","disconnect","handleIntersection","entries","entry","isIntersecting","intersectionRatio","isInViewport","initIntersectionObserver","IntersectionObserver","useEffect","inViewport","enterCount","leaveCount","useUniqueId","prefix","uid","useUID","useMemo","ScrollableContext","createContext","Scrollable","children","className","onScrollToEnd","footerRef","id","value","Provider","cx","ref","Text","Lazy","useContext","ImageItem","wrapperClassName","source","caption","loading","src","alt","useApi","method","params","client","ApiClient","query","useQuery","VideoItem","item","history","useHistory","title","split","handleOnClick","push","generatePath","PATHS","Item","itemId","onClick","posters","medium","new","ItemsList","items","scrollable","content","map","Array","_","idx","Button","icon","iconOnly","autoFocus","wrapperRef","frameId","requestAnimationFrame","focus","cancelAnimationFrame","role","name","Popup","visible","onClose","handleClose","handleCloseOnBackButton","useBackButtonEffect","handleClickOutside","clickOutsideConfig","onClickOutside","useChangebleState","initialState","state","setState","getItemTitle","video","season","number","Checkbox","defaultChecked","checked","onChange","handleChange","e","component","type","Accordion","open","onToggle","subtitle","setVisible","handleClick","newVisible","SeasonItem","handleEpisodeClick","episode","Video","videoId","episodes","thumbnail","watched","WatchingStatus","Watched","SeasonsList","seasons","length","Bookmarks","data","itemBookmarks","dataUpdatedAt","refetch","bookmarkToggleItemAsync","useApiMutation","bookmarksIds","folders","bookmark","handleCheckboxToggle","a","includes","updated","usePlayButtonEffect","handler","listiner","isPlayButton","window","addEventListener","removeEventListener","useStreamingTypeEffect","streamingTypes","deviceInfo","useStorageState","setStreamingType","selectedStreamingType","find","device","settings","streamingType","selected","Bool","True","code","SimilarItems","ItemView","useParams","bookmarksPopupVisible","setBookmarksPopupVisible","staleTime","watchingToggleWatchlistAsync","videos","watching","status","trailer","videoToPlay","handleOnPlayClick","handleOnTrailerClick","Trailer","trailerId","handleOnBookmarksClick","handleBookmarksPopupClose","handleOnVisibilityClick","wide","big","subscribed","plot","tracklist","track","height"],"mappings":"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","file":"static/js/7.a67d15c3.chunk.js","sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\nimport { findDOMNode } from 'react-dom';\n\ntype Props = {\n  onEnterViewport?: () => void;\n  onLeaveViewport?: () => void;\n};\n\nconst useInViewport = (\n  target: React.MutableRefObject<React.ReactInstance | null | undefined>,\n  props: Props,\n  options?: IntersectionObserverInit,\n  config = { disconnectOnLeave: false },\n) => {\n  const { onEnterViewport, onLeaveViewport } = props;\n  const [, forceUpdate] = useState();\n\n  const observer = useRef<IntersectionObserver | null>(null);\n\n  const inViewportRef = useRef(false);\n  const intersected = useRef(false);\n\n  const enterCountRef = useRef(0);\n  const leaveCountRef = useRef(0);\n\n  const startObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.observe(node);\n      }\n    }\n  }, [target, observer]);\n\n  const stopObserver = useCallback(() => {\n    if (target.current && observer.current) {\n      const node = findDOMNode(target.current) as Element;\n      if (node) {\n        observer.current.unobserve(node);\n        observer.current.disconnect();\n        observer.current = null;\n      }\n    }\n  }, [target, observer]);\n\n  const handleIntersection = useCallback(\n    (entries) => {\n      const entry = entries[0] || {};\n      const { isIntersecting, intersectionRatio } = entry;\n      const isInViewport = typeof isIntersecting !== 'undefined' ? isIntersecting : intersectionRatio > 0;\n\n      // enter\n      if (!intersected.current && isInViewport) {\n        intersected.current = true;\n\n        onEnterViewport?.();\n\n        enterCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n\n        return;\n      }\n\n      // leave\n      if (intersected.current && !isInViewport) {\n        intersected.current = false;\n\n        onLeaveViewport?.();\n\n        if (config.disconnectOnLeave && observer.current) {\n          // disconnect obsever on leave\n          observer.current.disconnect();\n        }\n\n        leaveCountRef.current += 1;\n        inViewportRef.current = isInViewport;\n\n        forceUpdate(isInViewport);\n      }\n    },\n    [observer, config.disconnectOnLeave, onEnterViewport, onLeaveViewport],\n  );\n\n  const initIntersectionObserver = useCallback(() => {\n    if (!observer.current) {\n      observer.current = new IntersectionObserver(handleIntersection, options);\n    }\n  }, [observer, options, handleIntersection]);\n\n  useEffect(() => {\n    initIntersectionObserver();\n    startObserver();\n\n    return () => {\n      stopObserver();\n    };\n  }, [initIntersectionObserver, startObserver, stopObserver]);\n\n  return {\n    inViewport: inViewportRef.current,\n    enterCount: enterCountRef.current,\n    leaveCount: leaveCountRef.current,\n  };\n};\n\nexport default useInViewport;\n","import { useMemo } from 'react';\nimport { useUID } from 'react-uid';\n\nfunction useUniqueId(prefix: string) {\n  const uid = useUID();\n  const id = useMemo(() => `${prefix}-${uid}`, [prefix, uid]);\n\n  return id;\n}\n\nexport default useUniqueId;\n","import { createContext, useMemo, useRef } from 'react';\nimport cx from 'classnames';\n\nimport useInViewport from 'hooks/useInViewport';\nimport useUniqueId from 'hooks/useUniqueId';\n\nexport const ScrollableContext = createContext<{ id?: string }>({});\n\ntype Props = {\n  onScrollToEnd?: () => void;\n  className?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Scrollable: React.FC<Props> = ({ children, className, onScrollToEnd, ...props }) => {\n  const footerRef = useRef<HTMLDivElement>(null);\n  const id = useUniqueId('scrollable');\n  const value = useMemo(\n    () => ({\n      id,\n    }),\n    [id],\n  );\n\n  useInViewport(footerRef, { onEnterViewport: onScrollToEnd });\n\n  return (\n    <div id={id} className=\"overflow-hidden h-screen\" {...props}>\n      <ScrollableContext.Provider value={value}>\n        <div className={cx('overflow-y-auto h-full', className)}>\n          {children}\n          <div className=\"h-40\" ref={footerRef} />\n        </div>\n      </ScrollableContext.Provider>\n    </div>\n  );\n};\n\nexport default Scrollable;\n","import cx from 'classnames';\n\ntype Props = {\n  className?: string;\n};\n\nconst Text: React.FC<Props> = ({ className, ...props }) => {\n  return <p {...props} className={cx('text-primary', className)} />;\n};\n\nexport default Text;\n","import { useContext } from 'react';\n// eslint-disable-next-line\nimport LazyLoad, { LazyLoadProps } from 'react-lazyload';\n\nimport { ScrollableContext } from 'components/scrollable';\n\ntype Props = {\n  className?: string;\n} & LazyLoadProps;\n\nconst Lazy: React.FC<Props> = (props) => {\n  // eslint-disable-next-line\n  const { id: scrollableId } = useContext(ScrollableContext);\n\n  // return <LazyLoad once offset={100} scrollContainer={scrollableId && `#${scrollableId}`} {...props} />;\n\n  // @ts-expect-error\n  return <div {...props} />;\n};\n\nexport function withLazy(options: Props) {\n  return function WithLazy<P>(Component: React.ComponentType<P>): React.FC<P> {\n    return (props: P) => (\n      <Lazy {...options}>\n        <Component {...props} />\n      </Lazy>\n    );\n  };\n}\n\nexport default Lazy;\n","import cx from 'classnames';\n\nimport Lazy from 'components/lazy';\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  className?: string;\n  wrapperClassName?: string;\n  source?: string;\n  caption?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst ImageItem: React.FC<Props> = ({ className, wrapperClassName, source, caption, children, ...props }) => {\n  return (\n    <Spottable {...props} className={cx('rounded-xl w-1/6', wrapperClassName)}>\n      <Lazy className={cx('h-40 m-1 flex flex-col relative overflow-hidden cursor-pointer', className)}>\n        <img loading=\"lazy\" className=\"w-full h-full object-cover rounded-xl bg-gray-300\" src={source} alt={caption} />\n        <div className=\"px-2\">\n          <p className=\"text-primary text-sm text-center overflow-hidden whitespace-nowrap\">{caption}</p>\n        </div>\n\n        {children}\n      </Lazy>\n    </Spottable>\n  );\n};\n\nexport default ImageItem;\n","import { useMemo } from 'react';\nimport { UseQueryOptions, useQuery } from 'react-query';\n\nimport ApiClient from 'api';\n\ntype Unpromise<T> = T extends Promise<infer U> ? U : T;\n\nexport type Methods = {\n  [method in keyof ApiClient]: ApiClient[method] extends Function ? Unpromise<ReturnType<ApiClient[method]>> : never;\n};\n\nexport type Method = keyof ApiClient & string;\n\nfunction useApi<T extends Method>(\n  method: T,\n  params: Parameters<ApiClient[T]> = [] as Parameters<ApiClient[T]>,\n  options?: UseQueryOptions<Methods[T]>,\n) {\n  const client = useMemo(() => new ApiClient(), []);\n  const query = useQuery<Methods[T]>(\n    [method, ...params],\n    () =>\n      // @ts-expect-error\n      client[method](...params) as Methods[T],\n    options,\n  );\n\n  return query;\n}\n\nexport default useApi;\n","import { useCallback, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport cx from 'classnames';\n\nimport { Item } from 'api';\nimport ImageItem from 'components/imageItem';\nimport { PATHS, generatePath } from 'routes';\n\ntype Props = {\n  item?: Item;\n  className?: string;\n};\n\nconst VideoItem: React.FC<Props> = ({ item, className }) => {\n  const history = useHistory();\n  const title = useMemo(() => item?.title?.split('/')[0], [item?.title]);\n\n  const handleOnClick = useCallback(() => {\n    if (item?.id) {\n      history.push(\n        generatePath(PATHS.Item, {\n          itemId: item.id,\n        }),\n      );\n    }\n  }, [item?.id, history]);\n\n  return (\n    <ImageItem onClick={handleOnClick} source={item?.posters.medium} caption={title} className={cx('h-72', className)}>\n      {item?.new && <div className=\"absolute bg-red-600 text-primary px-2 py-1 rounded-bl rounded-tr-xl right-0\">{item?.new}</div>}\n    </ImageItem>\n  );\n};\n\nexport default VideoItem;\n","import React from 'react';\nimport cx from 'classnames';\nimport map from 'lodash/map';\n\nimport { Item } from 'api';\nimport Scrollable from 'components/scrollable';\nimport Text from 'components/text';\nimport VideoItem from 'components/videoItem';\n\ntype Props = {\n  title?: string;\n  items?: Item[];\n  loading?: boolean;\n  onScrollToEnd?: () => void;\n  scrollable?: boolean;\n  className?: string;\n};\n\nconst ItemsList: React.FC<Props> = ({ title, items, loading, onScrollToEnd, scrollable = true, className }) => {\n  const content = (\n    <div>\n      {title && <Text className=\"m-1 mb-3\">{title}</Text>}\n      <div className={cx('flex flex-wrap', className)}>\n        {map(items, (item) => (\n          <VideoItem key={item.id} item={item} />\n        ))}\n        {loading && map([...new Array(18)], (_, idx) => <VideoItem key={idx} />)}\n      </div>\n    </div>\n  );\n\n  return scrollable ? <Scrollable onScrollToEnd={onScrollToEnd}>{content}</Scrollable> : content;\n};\n\nexport default ItemsList;\n","import { useEffect, useRef } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  icon?: string;\n  iconOnly?: boolean;\n  autoFocus?: boolean;\n  className?: string;\n  onClick?: React.MouseEventHandler;\n};\n\nconst Button: React.FC<Props> = ({ icon, iconOnly, children, autoFocus, className, ...props }) => {\n  const wrapperRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    let frameId: number;\n\n    if (autoFocus) {\n      frameId = requestAnimationFrame(() => {\n        // @ts-expect-error\n        wrapperRef.current?.node?.focus();\n      });\n    }\n\n    return () => {\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n    };\n  }, [wrapperRef, autoFocus]);\n\n  return (\n    <Spottable\n      {...props}\n      ref={wrapperRef}\n      className={cx(\n        'text-primary whitespace-nowrap cursor-pointer rounded px-2 py-1',\n        {\n          'pr-3': !!icon,\n        },\n        className,\n      )}\n      role=\"button\"\n    >\n      <div className=\"flex items-center\">\n        {icon && <Icon name={icon} />}\n        {!iconOnly && children}\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Button;\n","import { useCallback } from 'react';\nimport onClickOutside from 'react-onclickoutside';\nimport cx from 'classnames';\n\nimport useBackButtonEffect from 'hooks/useBackButtonEffect';\n\ntype Props = {\n  visible: boolean;\n  onClose: (visible: boolean) => void;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Popup: React.FC<Props> = ({ visible, onClose, className, ...props }) => {\n  const handleClose = useCallback(() => {\n    onClose(false);\n  }, [onClose]);\n\n  const handleCloseOnBackButton = useCallback(() => {\n    if (visible) {\n      handleClose();\n\n      return false;\n    }\n  }, [visible, handleClose]);\n\n  useBackButtonEffect(handleCloseOnBackButton);\n\n  // @ts-expect-error\n  Popup.handleClickOutside = handleClose;\n\n  if (!visible) {\n    return null;\n  }\n\n  return <div {...props} className={cx('fixed z-999 bottom-0 left-0 right-0 p-4 bg-primary ring', className)} />;\n};\n\nconst clickOutsideConfig = {\n  handleClickOutside: () =>\n    // @ts-expect-error\n    Popup.handleClickOutside,\n};\n\nexport default onClickOutside(Popup, clickOutsideConfig);\n","import { useEffect, useState } from 'react';\n\nfunction useChangebleState<T>(initialState?: T) {\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    setState(initialState);\n  }, [initialState]);\n\n  return [state, setState] as const;\n}\n\nexport default useChangebleState;\n","import { ItemDetails, Season, Video } from 'api';\n\nexport function getItemTitle(item?: ItemDetails, video?: Video, season?: Season) {\n  return season ? `${item?.title} (s${season.number}e${video?.number || 1})` : item?.title!;\n}\n","import { useCallback } from 'react';\nimport cx from 'classnames';\n\nimport Spottable from 'components/spottable';\n\ntype Props = {\n  defaultChecked?: boolean;\n  checked?: boolean;\n  onChange?: (checked: boolean, e: React.ChangeEvent<HTMLInputElement>) => void;\n  className?: string;\n  type?: string;\n} & Omit<React.HTMLAttributes<HTMLInputElement>, 'onChange'>;\n\nconst Checkbox: React.FC<Props> = ({ defaultChecked, checked, onChange, className, children, ...props }) => {\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>(\n    (e) => {\n      onChange?.(e.target.checked, e);\n    },\n    [onChange],\n  );\n\n  return (\n    <Spottable component=\"label\" className={cx('text-primary p-2', className)}>\n      <div className=\"inline-flex items-center cursor-pointer\">\n        <input\n          {...props}\n          type=\"checkbox\"\n          className=\"inline-block w-4 h-4\"\n          defaultChecked={defaultChecked}\n          checked={checked}\n          onChange={handleChange}\n        />\n        <span className=\"inline-block ml-2 whitespace-nowrap\">{children}</span>\n      </div>\n    </Spottable>\n  );\n};\n\nexport default Checkbox;\n","import { useCallback } from 'react';\nimport cx from 'classnames';\n\nimport Icon from 'components/icon';\nimport Spottable from 'components/spottable';\nimport Text from 'components/text';\nimport useChangebleState from 'hooks/useChangebleState';\n\ntype Props = {\n  title: string;\n  subtitle?: string;\n  className?: string;\n  open?: boolean;\n  onToggle?: (open: boolean) => void;\n};\n\nconst Accordion: React.FC<Props> = ({ open, onToggle, title, subtitle, className, children }) => {\n  const [visible, setVisible] = useChangebleState(open);\n\n  const handleClick = useCallback(() => {\n    setVisible((visible) => {\n      const newVisible = !visible;\n\n      onToggle?.(newVisible);\n\n      return newVisible;\n    });\n  }, [setVisible, onToggle]);\n\n  return (\n    <div className=\"flex flex-col w-full\">\n      <Spottable onClick={handleClick} className={cx('p-1 cursor-pointer', className)}>\n        <div className=\"flex flex-col\">\n          <div className=\"flex items-center\">\n            <Text>{title}</Text>\n\n            <Icon name={visible ? 'expand_less' : 'expand_more'} />\n          </div>\n          {!visible && <Text className=\"mt-2\">{subtitle}</Text>}\n        </div>\n      </Spottable>\n      {visible && children}\n    </div>\n  );\n};\n\nexport default Accordion;\n","import { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport map from 'lodash/map';\n\nimport { Item, Season, Video, WatchingStatus } from 'api';\nimport Accordion from 'components/accordion';\nimport ImageItem from 'components/imageItem';\nimport { PATHS, generatePath } from 'routes';\n\ntype Props = {\n  item: Item;\n  season: Season;\n};\n\nconst SeasonItem: React.FC<Props> = ({ item, season }) => {\n  const history = useHistory();\n  const handleEpisodeClick = useCallback(\n    (episode: Video) => () => {\n      if (episode?.id) {\n        history.push(\n          generatePath(PATHS.Video, {\n            videoId: episode.id,\n          }),\n          {\n            item,\n            video: episode,\n            season,\n          },\n        );\n      }\n    },\n    [item, season, history],\n  );\n\n  return (\n    <div className=\"flex flex-col\">\n      <Accordion title={`Сезон ${season.number}`}>\n        <div className=\"flex flex-wrap\">\n          {map(season.episodes, (episode) => (\n            <ImageItem\n              key={episode.id}\n              source={episode.thumbnail}\n              caption={`Эпизод ${episode.number}`}\n              onClick={handleEpisodeClick(episode)}\n            >\n              {episode.watched === WatchingStatus.Watched && (\n                <div className=\"absolute flex justify-center items-center rounded-xl bg-black bg-opacity-60 top-0 bottom-0 left-0 right-0\">\n                  Просмотрено\n                </div>\n              )}\n            </ImageItem>\n          ))}\n        </div>\n      </Accordion>\n    </div>\n  );\n};\n\nexport default SeasonItem;\n","import map from 'lodash/map';\n\nimport { Item, Season } from 'api';\nimport SeasonItem from 'components/seasonItem';\nimport Text from 'components/text';\n\ntype Props = {\n  item: Item;\n  seasons?: Season[];\n};\n\nconst SeasonsList: React.FC<Props> = ({ item, seasons }) => {\n  if (!seasons?.length) {\n    return null;\n  }\n\n  return (\n    <div className=\"p-8\">\n      <Text>Список сезонов</Text>\n\n      {map(seasons, (season) => (\n        <SeasonItem key={season.id} item={item} season={season} />\n      ))}\n    </div>\n  );\n};\n\nexport default SeasonsList;\n","import React, { useCallback, useMemo } from 'react';\nimport map from 'lodash/map';\n\nimport { Bookmark } from 'api';\nimport Checkbox from 'components/checkbox';\nimport useApi from 'hooks/useApi';\nimport useApiMutation from 'hooks/useApiMutation';\n\ntype Props = {\n  itemId: string;\n};\n\nconst Bookmarks: React.FC<Props> = ({ itemId }) => {\n  const { data } = useApi('bookmarks');\n  const { data: itemBookmarks, dataUpdatedAt, refetch } = useApi('itemBookmarks', [itemId]);\n  const { bookmarkToggleItemAsync } = useApiMutation('bookmarkToggleItem');\n  const bookmarksIds = useMemo(() => itemBookmarks?.folders.map((bookmark) => bookmark.id) || [], [itemBookmarks?.folders]);\n\n  const handleCheckboxToggle = useCallback(\n    (bookmark: Bookmark) => async () => {\n      await bookmarkToggleItemAsync([itemId, bookmark.id]);\n      refetch();\n    },\n    [itemId, bookmarkToggleItemAsync, refetch],\n  );\n\n  return (\n    <div className=\"flex flex-wrap\" key={dataUpdatedAt}>\n      {map(data?.items, (bookmark) => (\n        <div className=\"w-1/5 p-1\" key={bookmark.updated}>\n          <Checkbox defaultChecked={bookmarksIds.includes(bookmark.id)} onChange={handleCheckboxToggle(bookmark)}>\n            {bookmark.title}\n          </Checkbox>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Bookmarks;\n","import { useEffect } from 'react';\n\nimport { ButtonClickHandler, isPlayButton } from 'utils/keyboard';\n\nfunction usePlayButtonEffect(handler: ButtonClickHandler) {\n  useEffect(() => {\n    const listiner = (e: KeyboardEvent) => {\n      if (isPlayButton(e)) {\n        handler();\n      }\n    };\n\n    window.addEventListener('keydown', listiner);\n\n    return () => {\n      window.removeEventListener('keydown', listiner);\n    };\n  }, [handler]);\n}\n\nexport default usePlayButtonEffect;\n","import { useEffect, useMemo } from 'react';\nimport find from 'lodash/find';\n\nimport { Bool } from 'api';\n\nimport useApi from './useApi';\nimport useStorageState from './useStorageState';\n\nfunction useStreamingTypeEffect() {\n  const { data: streamingTypes } = useApi('streamingTypes');\n  const { data: deviceInfo } = useApi('deviceInfo');\n  const [, setStreamingType] = useStorageState<string>('streaming_type');\n\n  const selectedStreamingType = useMemo(\n    () => find(deviceInfo?.device.settings.streamingType.value, ({ selected }) => selected === Bool.True),\n    [deviceInfo?.device],\n  );\n  const streamingType = useMemo(\n    () => find(streamingTypes?.items, (streamingType) => streamingType?.id === selectedStreamingType?.id),\n    [streamingTypes?.items, selectedStreamingType],\n  );\n\n  useEffect(() => {\n    if (streamingType?.code) {\n      setStreamingType(streamingType?.code);\n    }\n  }, [setStreamingType, streamingType?.code]);\n}\n\nexport default useStreamingTypeEffect;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport map from 'lodash/map';\n\nimport { WatchingStatus } from 'api';\nimport Button from 'components/button';\nimport ItemsList from 'components/itemsList';\nimport Lazy from 'components/lazy';\nimport Popup from 'components/popup';\nimport Scrollable from 'components/scrollable';\nimport SeasonsList from 'components/seasonsList';\nimport Text from 'components/text';\nimport Bookmarks from 'containers/bookmarks';\nimport useApi from 'hooks/useApi';\nimport useApiMutation from 'hooks/useApiMutation';\nimport usePlayButtonEffect from 'hooks/usePlayButtonEffect';\nimport useStreamingTypeEffect from 'hooks/useStreamingTypeEffect';\nimport { PATHS, RouteParams, generatePath } from 'routes';\n\nimport { getItemTitle } from 'utils/item';\n\nconst SimilarItems: React.FC<{ itemId: string }> = ({ itemId }) => {\n  const { data } = useApi('itemSmiliar', [itemId]);\n\n  if (data && data.items.length > 0) {\n    return (\n      <div className=\"p-8\">\n        <ItemsList title=\"Похожие\" items={data.items} scrollable={false} />\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst ItemView: React.FC = () => {\n  const history = useHistory();\n  const { itemId } = useParams<RouteParams>();\n  const [bookmarksPopupVisible, setBookmarksPopupVisible] = useState(false);\n  const { data, refetch } = useApi('itemMedia', [itemId!], { staleTime: 0 });\n\n  const { watchingToggleWatchlistAsync } = useApiMutation('watchingToggleWatchlist');\n\n  const video = useMemo(\n    () => data?.item.videos?.find(({ watching }) => watching.status !== WatchingStatus.Watched) || data?.item.videos?.[0],\n    [data?.item],\n  );\n  const season = useMemo(\n    () => data?.item.seasons?.find(({ watching }) => watching.status !== WatchingStatus.Watched) || data?.item.seasons?.[0],\n    [data?.item],\n  );\n  const episode = useMemo(\n    () => season?.episodes.find(({ watching }) => watching.status !== WatchingStatus.Watched) || season?.episodes[0],\n    [season],\n  );\n  const trailer = useMemo(() => data?.item.trailer, [data?.item]);\n  const videoToPlay = video || episode;\n  const title = useMemo(() => getItemTitle(data?.item, videoToPlay, season), [data?.item, season, videoToPlay]);\n\n  const handleOnPlayClick = useCallback(() => {\n    if (videoToPlay?.id) {\n      history.push(\n        generatePath(PATHS.Video, {\n          videoId: videoToPlay.id,\n        }),\n        {\n          item: data?.item,\n          video: videoToPlay,\n          season,\n        },\n      );\n    }\n  }, [history, data?.item, season, videoToPlay]);\n\n  const handleOnTrailerClick = useCallback(() => {\n    if (trailer?.id) {\n      history.push(\n        generatePath(PATHS.Trailer, {\n          trailerId: trailer.id,\n        }),\n        {\n          item: data?.item,\n          trailer,\n        },\n      );\n    }\n  }, [history, data?.item, trailer]);\n\n  const handleOnBookmarksClick = useCallback(() => {\n    setBookmarksPopupVisible(true);\n  }, []);\n  const handleBookmarksPopupClose = useCallback(() => {\n    setBookmarksPopupVisible(false);\n  }, []);\n\n  const handleOnVisibilityClick = useCallback(async () => {\n    await watchingToggleWatchlistAsync([itemId!]);\n    refetch();\n  }, [itemId, watchingToggleWatchlistAsync, refetch]);\n\n  useStreamingTypeEffect();\n  usePlayButtonEffect(handleOnPlayClick);\n\n  return (\n    <Scrollable>\n      <div className=\"relative w-screen h-screen\">\n        <img\n          className=\"absolute w-screen h-screen object-cover -z-1\"\n          src={(data?.item?.posters.wide || data?.item?.posters.big)!}\n          alt={title}\n        />\n\n        <Text className=\"p-4 absolute top-0\">{title}</Text>\n\n        <div className=\"absolute flex justify-between bottom-8 left-4 right-4\">\n          <div className=\"flex\">\n            <Button icon=\"play_circle_outline\" onClick={handleOnPlayClick} className=\"mr-2\">\n              Смотреть\n            </Button>\n\n            <Button icon=\"bookmark\" onClick={handleOnBookmarksClick} className=\"mr-2\">\n              В закладки\n            </Button>\n\n            <Popup visible={bookmarksPopupVisible} onClose={handleBookmarksPopupClose}>\n              <Bookmarks key={`${itemId}-${bookmarksPopupVisible}`} itemId={itemId!} />\n            </Popup>\n\n            {typeof data?.item.subscribed === 'boolean' && (\n              <Button icon={data?.item.subscribed ? 'visibility_off' : 'visibility'} onClick={handleOnVisibilityClick}>\n                {data?.item.subscribed ? 'Не буду смотреть' : 'Буду смотреть'}\n              </Button>\n            )}\n          </div>\n\n          <div>\n            {trailer && (\n              <Button icon=\"videocam\" onClick={handleOnTrailerClick}>\n                Трейлер\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <SeasonsList item={data?.item!} seasons={data?.item?.seasons} />\n\n      <div className=\"flex flex-col p-8 whitespace-pre-wrap\">\n        <Text>{data?.item.plot}</Text>\n\n        {!!data?.item.tracklist?.length && (\n          <>\n            <Text className=\"my-4\">Треклист</Text>\n            <div className=\"flex flex-wrap flex-col h-96\">\n              {map(data?.item.tracklist, (track, idx) => (\n                <Text key={idx}>\n                  {idx + 1}. {track.title}\n                </Text>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <Lazy height=\"50rem\">\n        <SimilarItems itemId={itemId!} />\n      </Lazy>\n    </Scrollable>\n  );\n};\n\nexport default ItemView;\n"],"sourceRoot":""}